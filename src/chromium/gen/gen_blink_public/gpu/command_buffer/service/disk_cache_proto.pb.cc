// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: disk_cache_proto.proto

#include "disk_cache_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_disk_5fcache_5fproto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShaderVariableProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderAttributeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderInterfaceBlockFieldProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderInterfaceBlockProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderOutputVariableProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderUniformProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShaderVaryingProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_disk_5fcache_5fproto_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ShaderProto;
}  // namespace protobuf_disk_5fcache_5fproto_2eproto
class ShaderVariableProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderVariableProto>
      _instance;
} _ShaderVariableProto_default_instance_;
class ShaderAttributeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderAttributeProto>
      _instance;
} _ShaderAttributeProto_default_instance_;
class ShaderUniformProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderUniformProto>
      _instance;
} _ShaderUniformProto_default_instance_;
class ShaderVaryingProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderVaryingProto>
      _instance;
} _ShaderVaryingProto_default_instance_;
class ShaderOutputVariableProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderOutputVariableProto>
      _instance;
} _ShaderOutputVariableProto_default_instance_;
class ShaderInterfaceBlockFieldProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderInterfaceBlockFieldProto>
      _instance;
} _ShaderInterfaceBlockFieldProto_default_instance_;
class ShaderInterfaceBlockProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderInterfaceBlockProto>
      _instance;
} _ShaderInterfaceBlockProto_default_instance_;
class ShaderProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderProto>
      _instance;
} _ShaderProto_default_instance_;
class GpuProgramProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpuProgramProto>
      _instance;
} _GpuProgramProto_default_instance_;
namespace protobuf_disk_5fcache_5fproto_2eproto {
static void InitDefaultsShaderVariableProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderVariableProto_default_instance_;
    new (ptr) ::ShaderVariableProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderVariableProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShaderVariableProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShaderVariableProto}, {}};

static void InitDefaultsShaderAttributeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderAttributeProto_default_instance_;
    new (ptr) ::ShaderAttributeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderAttributeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderAttributeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderAttributeProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base,}};

static void InitDefaultsShaderUniformProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderUniformProto_default_instance_;
    new (ptr) ::ShaderUniformProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderUniformProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderUniformProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderUniformProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base,}};

static void InitDefaultsShaderVaryingProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderVaryingProto_default_instance_;
    new (ptr) ::ShaderVaryingProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderVaryingProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderVaryingProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderVaryingProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base,}};

static void InitDefaultsShaderOutputVariableProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderOutputVariableProto_default_instance_;
    new (ptr) ::ShaderOutputVariableProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderOutputVariableProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderOutputVariableProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderOutputVariableProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base,}};

static void InitDefaultsShaderInterfaceBlockFieldProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderInterfaceBlockFieldProto_default_instance_;
    new (ptr) ::ShaderInterfaceBlockFieldProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderInterfaceBlockFieldProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderInterfaceBlockFieldProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderInterfaceBlockFieldProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base,}};

static void InitDefaultsShaderInterfaceBlockProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderInterfaceBlockProto_default_instance_;
    new (ptr) ::ShaderInterfaceBlockProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderInterfaceBlockProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShaderInterfaceBlockProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShaderInterfaceBlockProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockFieldProto.base,}};

static void InitDefaultsShaderProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ShaderProto_default_instance_;
    new (ptr) ::ShaderProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShaderProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ShaderProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsShaderProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderAttributeProto.base,
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderUniformProto.base,
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVaryingProto.base,
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderOutputVariableProto.base,
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockProto.base,}};

static void InitDefaultsGpuProgramProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GpuProgramProto_default_instance_;
    new (ptr) ::GpuProgramProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GpuProgramProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GpuProgramProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGpuProgramProto}, {
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderVariableProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderAttributeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderUniformProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderVaryingProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderOutputVariableProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderInterfaceBlockFieldProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderInterfaceBlockProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GpuProgramProto.base);
}

}  // namespace protobuf_disk_5fcache_5fproto_2eproto

// ===================================================================

void ShaderVariableProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderVariableProto::kTypeFieldNumber;
const int ShaderVariableProto::kPrecisionFieldNumber;
const int ShaderVariableProto::kNameFieldNumber;
const int ShaderVariableProto::kMappedNameFieldNumber;
const int ShaderVariableProto::kArraySizeFieldNumber;
const int ShaderVariableProto::kStaticUseFieldNumber;
const int ShaderVariableProto::kFieldsFieldNumber;
const int ShaderVariableProto::kStructNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderVariableProto::ShaderVariableProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderVariableProto)
}
ShaderVariableProto::ShaderVariableProto(const ShaderVariableProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mapped_name()) {
    mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
  }
  struct_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_struct_name()) {
    struct_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struct_name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&static_use_) -
    reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
  // @@protoc_insertion_point(copy_constructor:ShaderVariableProto)
}

void ShaderVariableProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struct_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&static_use_) -
      reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
}

ShaderVariableProto::~ShaderVariableProto() {
  // @@protoc_insertion_point(destructor:ShaderVariableProto)
  SharedDtor();
}

void ShaderVariableProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  struct_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderVariableProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderVariableProto& ShaderVariableProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVariableProto.base);
  return *internal_default_instance();
}


void ShaderVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mapped_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      struct_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&static_use_) -
        reinterpret_cast<char*>(&type_)) + sizeof(static_use_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderVariableProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mapped_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapped_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 array_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_array_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &array_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool static_use = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_static_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &static_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderVariableProto fields = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string struct_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struct_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderVariableProto)
  return false;
#undef DO_
}

void ShaderVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 precision = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->precision(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string mapped_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mapped_name(), output);
  }

  // optional uint32 array_size = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->array_size(), output);
  }

  // optional bool static_use = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->static_use(), output);
  }

  // repeated .ShaderVariableProto fields = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->fields(static_cast<int>(i)),
      output);
  }

  // optional string struct_name = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->struct_name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderVariableProto)
}

size_t ShaderVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderVariableProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .ShaderVariableProto fields = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mapped_name = 4;
    if (has_mapped_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapped_name());
    }

    // optional string struct_name = 8;
    if (has_struct_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->struct_name());
    }

    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 precision = 2;
    if (has_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->precision());
    }

    // optional uint32 array_size = 5;
    if (has_array_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->array_size());
    }

    // optional bool static_use = 6;
    if (has_static_use()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderVariableProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderVariableProto*>(&from));
}

void ShaderVariableProto::MergeFrom(const ShaderVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mapped_name();
      mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_struct_name();
      struct_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.struct_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000020u) {
      array_size_ = from.array_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      static_use_ = from.static_use_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderVariableProto::CopyFrom(const ShaderVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderVariableProto::IsInitialized() const {
  return true;
}

void ShaderVariableProto::Swap(ShaderVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderVariableProto::InternalSwap(ShaderVariableProto* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mapped_name_.Swap(&other->mapped_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  struct_name_.Swap(&other->struct_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(precision_, other->precision_);
  swap(array_size_, other->array_size_);
  swap(static_use_, other->static_use_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderVariableProto::GetTypeName() const {
  return "ShaderVariableProto";
}


// ===================================================================

void ShaderAttributeProto::InitAsDefaultInstance() {
  ::_ShaderAttributeProto_default_instance_._instance.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderAttributeProto::kBasicFieldNumber;
const int ShaderAttributeProto::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderAttributeProto::ShaderAttributeProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderAttributeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderAttributeProto)
}
ShaderAttributeProto::ShaderAttributeProto(const ShaderAttributeProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  location_ = from.location_;
  // @@protoc_insertion_point(copy_constructor:ShaderAttributeProto)
}

void ShaderAttributeProto::SharedCtor() {
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(location_));
}

ShaderAttributeProto::~ShaderAttributeProto() {
  // @@protoc_insertion_point(destructor:ShaderAttributeProto)
  SharedDtor();
}

void ShaderAttributeProto::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
}

void ShaderAttributeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderAttributeProto& ShaderAttributeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderAttributeProto.base);
  return *internal_default_instance();
}


void ShaderAttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderAttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->Clear();
  }
  location_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderAttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderAttributeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_location();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderAttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderAttributeProto)
  return false;
#undef DO_
}

void ShaderAttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderAttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_basic(), output);
  }

  // optional int32 location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->location(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderAttributeProto)
}

size_t ShaderAttributeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderAttributeProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *basic_);
    }

    // optional int32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderAttributeProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderAttributeProto*>(&from));
}

void ShaderAttributeProto::MergeFrom(const ShaderAttributeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderAttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      location_ = from.location_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderAttributeProto::CopyFrom(const ShaderAttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderAttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderAttributeProto::IsInitialized() const {
  return true;
}

void ShaderAttributeProto::Swap(ShaderAttributeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderAttributeProto::InternalSwap(ShaderAttributeProto* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(location_, other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderAttributeProto::GetTypeName() const {
  return "ShaderAttributeProto";
}


// ===================================================================

void ShaderUniformProto::InitAsDefaultInstance() {
  ::_ShaderUniformProto_default_instance_._instance.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderUniformProto::kBasicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderUniformProto::ShaderUniformProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderUniformProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderUniformProto)
}
ShaderUniformProto::ShaderUniformProto(const ShaderUniformProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ShaderUniformProto)
}

void ShaderUniformProto::SharedCtor() {
  basic_ = NULL;
}

ShaderUniformProto::~ShaderUniformProto() {
  // @@protoc_insertion_point(destructor:ShaderUniformProto)
  SharedDtor();
}

void ShaderUniformProto::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
}

void ShaderUniformProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderUniformProto& ShaderUniformProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderUniformProto.base);
  return *internal_default_instance();
}


void ShaderUniformProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderUniformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderUniformProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderUniformProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderUniformProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderUniformProto)
  return false;
#undef DO_
}

void ShaderUniformProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderUniformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_basic(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderUniformProto)
}

size_t ShaderUniformProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderUniformProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional .ShaderVariableProto basic = 1;
  if (has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *basic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderUniformProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderUniformProto*>(&from));
}

void ShaderUniformProto::MergeFrom(const ShaderUniformProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderUniformProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basic()) {
    mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
  }
}

void ShaderUniformProto::CopyFrom(const ShaderUniformProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderUniformProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderUniformProto::IsInitialized() const {
  return true;
}

void ShaderUniformProto::Swap(ShaderUniformProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderUniformProto::InternalSwap(ShaderUniformProto* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderUniformProto::GetTypeName() const {
  return "ShaderUniformProto";
}


// ===================================================================

void ShaderVaryingProto::InitAsDefaultInstance() {
  ::_ShaderVaryingProto_default_instance_._instance.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderVaryingProto::kBasicFieldNumber;
const int ShaderVaryingProto::kInterpolationFieldNumber;
const int ShaderVaryingProto::kIsInvariantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderVaryingProto::ShaderVaryingProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVaryingProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderVaryingProto)
}
ShaderVaryingProto::ShaderVaryingProto(const ShaderVaryingProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&interpolation_, &from.interpolation_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_invariant_) -
    reinterpret_cast<char*>(&interpolation_)) + sizeof(is_invariant_));
  // @@protoc_insertion_point(copy_constructor:ShaderVaryingProto)
}

void ShaderVaryingProto::SharedCtor() {
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_invariant_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(is_invariant_));
}

ShaderVaryingProto::~ShaderVaryingProto() {
  // @@protoc_insertion_point(destructor:ShaderVaryingProto)
  SharedDtor();
}

void ShaderVaryingProto::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
}

void ShaderVaryingProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderVaryingProto& ShaderVaryingProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderVaryingProto.base);
  return *internal_default_instance();
}


void ShaderVaryingProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderVaryingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&interpolation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_invariant_) -
        reinterpret_cast<char*>(&interpolation_)) + sizeof(is_invariant_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderVaryingProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderVaryingProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 interpolation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_interpolation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interpolation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_invariant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_invariant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_invariant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderVaryingProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderVaryingProto)
  return false;
#undef DO_
}

void ShaderVaryingProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderVaryingProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_basic(), output);
  }

  // optional int32 interpolation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->interpolation(), output);
  }

  // optional bool is_invariant = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_invariant(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderVaryingProto)
}

size_t ShaderVaryingProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderVaryingProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *basic_);
    }

    // optional int32 interpolation = 2;
    if (has_interpolation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interpolation());
    }

    // optional bool is_invariant = 3;
    if (has_is_invariant()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderVaryingProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderVaryingProto*>(&from));
}

void ShaderVaryingProto::MergeFrom(const ShaderVaryingProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderVaryingProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      interpolation_ = from.interpolation_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_invariant_ = from.is_invariant_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderVaryingProto::CopyFrom(const ShaderVaryingProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderVaryingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderVaryingProto::IsInitialized() const {
  return true;
}

void ShaderVaryingProto::Swap(ShaderVaryingProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderVaryingProto::InternalSwap(ShaderVaryingProto* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(interpolation_, other->interpolation_);
  swap(is_invariant_, other->is_invariant_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderVaryingProto::GetTypeName() const {
  return "ShaderVaryingProto";
}


// ===================================================================

void ShaderOutputVariableProto::InitAsDefaultInstance() {
  ::_ShaderOutputVariableProto_default_instance_._instance.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderOutputVariableProto::kBasicFieldNumber;
const int ShaderOutputVariableProto::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderOutputVariableProto::ShaderOutputVariableProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderOutputVariableProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderOutputVariableProto)
}
ShaderOutputVariableProto::ShaderOutputVariableProto(const ShaderOutputVariableProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  location_ = from.location_;
  // @@protoc_insertion_point(copy_constructor:ShaderOutputVariableProto)
}

void ShaderOutputVariableProto::SharedCtor() {
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(location_));
}

ShaderOutputVariableProto::~ShaderOutputVariableProto() {
  // @@protoc_insertion_point(destructor:ShaderOutputVariableProto)
  SharedDtor();
}

void ShaderOutputVariableProto::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
}

void ShaderOutputVariableProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderOutputVariableProto& ShaderOutputVariableProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderOutputVariableProto.base);
  return *internal_default_instance();
}


void ShaderOutputVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderOutputVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->Clear();
  }
  location_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderOutputVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderOutputVariableProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_location();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderOutputVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderOutputVariableProto)
  return false;
#undef DO_
}

void ShaderOutputVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderOutputVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_basic(), output);
  }

  // optional int32 location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->location(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderOutputVariableProto)
}

size_t ShaderOutputVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderOutputVariableProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *basic_);
    }

    // optional int32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderOutputVariableProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderOutputVariableProto*>(&from));
}

void ShaderOutputVariableProto::MergeFrom(const ShaderOutputVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderOutputVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      location_ = from.location_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderOutputVariableProto::CopyFrom(const ShaderOutputVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderOutputVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderOutputVariableProto::IsInitialized() const {
  return true;
}

void ShaderOutputVariableProto::Swap(ShaderOutputVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderOutputVariableProto::InternalSwap(ShaderOutputVariableProto* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(location_, other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderOutputVariableProto::GetTypeName() const {
  return "ShaderOutputVariableProto";
}


// ===================================================================

void ShaderInterfaceBlockFieldProto::InitAsDefaultInstance() {
  ::_ShaderInterfaceBlockFieldProto_default_instance_._instance.get_mutable()->basic_ = const_cast< ::ShaderVariableProto*>(
      ::ShaderVariableProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderInterfaceBlockFieldProto::kBasicFieldNumber;
const int ShaderInterfaceBlockFieldProto::kIsRowMajorLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderInterfaceBlockFieldProto::ShaderInterfaceBlockFieldProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockFieldProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderInterfaceBlockFieldProto)
}
ShaderInterfaceBlockFieldProto::ShaderInterfaceBlockFieldProto(const ShaderInterfaceBlockFieldProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::ShaderVariableProto(*from.basic_);
  } else {
    basic_ = NULL;
  }
  is_row_major_layout_ = from.is_row_major_layout_;
  // @@protoc_insertion_point(copy_constructor:ShaderInterfaceBlockFieldProto)
}

void ShaderInterfaceBlockFieldProto::SharedCtor() {
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_row_major_layout_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(is_row_major_layout_));
}

ShaderInterfaceBlockFieldProto::~ShaderInterfaceBlockFieldProto() {
  // @@protoc_insertion_point(destructor:ShaderInterfaceBlockFieldProto)
  SharedDtor();
}

void ShaderInterfaceBlockFieldProto::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
}

void ShaderInterfaceBlockFieldProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderInterfaceBlockFieldProto& ShaderInterfaceBlockFieldProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockFieldProto.base);
  return *internal_default_instance();
}


void ShaderInterfaceBlockFieldProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderInterfaceBlockFieldProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(basic_ != NULL);
    basic_->Clear();
  }
  is_row_major_layout_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderInterfaceBlockFieldProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderInterfaceBlockFieldProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ShaderVariableProto basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_row_major_layout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_row_major_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_row_major_layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderInterfaceBlockFieldProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderInterfaceBlockFieldProto)
  return false;
#undef DO_
}

void ShaderInterfaceBlockFieldProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderInterfaceBlockFieldProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ShaderVariableProto basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_basic(), output);
  }

  // optional bool is_row_major_layout = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_row_major_layout(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderInterfaceBlockFieldProto)
}

size_t ShaderInterfaceBlockFieldProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderInterfaceBlockFieldProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ShaderVariableProto basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *basic_);
    }

    // optional bool is_row_major_layout = 2;
    if (has_is_row_major_layout()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderInterfaceBlockFieldProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderInterfaceBlockFieldProto*>(&from));
}

void ShaderInterfaceBlockFieldProto::MergeFrom(const ShaderInterfaceBlockFieldProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderInterfaceBlockFieldProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::ShaderVariableProto::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      is_row_major_layout_ = from.is_row_major_layout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderInterfaceBlockFieldProto::CopyFrom(const ShaderInterfaceBlockFieldProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderInterfaceBlockFieldProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderInterfaceBlockFieldProto::IsInitialized() const {
  return true;
}

void ShaderInterfaceBlockFieldProto::Swap(ShaderInterfaceBlockFieldProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderInterfaceBlockFieldProto::InternalSwap(ShaderInterfaceBlockFieldProto* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(is_row_major_layout_, other->is_row_major_layout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderInterfaceBlockFieldProto::GetTypeName() const {
  return "ShaderInterfaceBlockFieldProto";
}


// ===================================================================

void ShaderInterfaceBlockProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderInterfaceBlockProto::kNameFieldNumber;
const int ShaderInterfaceBlockProto::kMappedNameFieldNumber;
const int ShaderInterfaceBlockProto::kInstanceNameFieldNumber;
const int ShaderInterfaceBlockProto::kArraySizeFieldNumber;
const int ShaderInterfaceBlockProto::kLayoutFieldNumber;
const int ShaderInterfaceBlockProto::kIsRowMajorLayoutFieldNumber;
const int ShaderInterfaceBlockProto::kStaticUseFieldNumber;
const int ShaderInterfaceBlockProto::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderInterfaceBlockProto::ShaderInterfaceBlockProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderInterfaceBlockProto)
}
ShaderInterfaceBlockProto::ShaderInterfaceBlockProto(const ShaderInterfaceBlockProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mapped_name()) {
    mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instance_name()) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  ::memcpy(&array_size_, &from.array_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&static_use_) -
    reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
  // @@protoc_insertion_point(copy_constructor:ShaderInterfaceBlockProto)
}

void ShaderInterfaceBlockProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&array_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&static_use_) -
      reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
}

ShaderInterfaceBlockProto::~ShaderInterfaceBlockProto() {
  // @@protoc_insertion_point(destructor:ShaderInterfaceBlockProto)
  SharedDtor();
}

void ShaderInterfaceBlockProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapped_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderInterfaceBlockProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderInterfaceBlockProto& ShaderInterfaceBlockProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderInterfaceBlockProto.base);
  return *internal_default_instance();
}


void ShaderInterfaceBlockProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderInterfaceBlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mapped_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      instance_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&array_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&static_use_) -
        reinterpret_cast<char*>(&array_size_)) + sizeof(static_use_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderInterfaceBlockProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderInterfaceBlockProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mapped_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapped_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instance_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 array_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_array_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &array_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 layout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_row_major_layout = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_row_major_layout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_row_major_layout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool static_use = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_static_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &static_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderInterfaceBlockFieldProto fields = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderInterfaceBlockProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderInterfaceBlockProto)
  return false;
#undef DO_
}

void ShaderInterfaceBlockProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderInterfaceBlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mapped_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mapped_name(), output);
  }

  // optional string instance_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instance_name(), output);
  }

  // optional uint32 array_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->array_size(), output);
  }

  // optional int32 layout = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->layout(), output);
  }

  // optional bool is_row_major_layout = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_row_major_layout(), output);
  }

  // optional bool static_use = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->static_use(), output);
  }

  // repeated .ShaderInterfaceBlockFieldProto fields = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8,
      this->fields(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderInterfaceBlockProto)
}

size_t ShaderInterfaceBlockProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderInterfaceBlockProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .ShaderInterfaceBlockFieldProto fields = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mapped_name = 2;
    if (has_mapped_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapped_name());
    }

    // optional string instance_name = 3;
    if (has_instance_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instance_name());
    }

    // optional uint32 array_size = 4;
    if (has_array_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->array_size());
    }

    // optional int32 layout = 5;
    if (has_layout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layout());
    }

    // optional bool is_row_major_layout = 6;
    if (has_is_row_major_layout()) {
      total_size += 1 + 1;
    }

    // optional bool static_use = 7;
    if (has_static_use()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderInterfaceBlockProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderInterfaceBlockProto*>(&from));
}

void ShaderInterfaceBlockProto::MergeFrom(const ShaderInterfaceBlockProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderInterfaceBlockProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mapped_name();
      mapped_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapped_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_instance_name();
      instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      array_size_ = from.array_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      layout_ = from.layout_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_row_major_layout_ = from.is_row_major_layout_;
    }
    if (cached_has_bits & 0x00000040u) {
      static_use_ = from.static_use_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShaderInterfaceBlockProto::CopyFrom(const ShaderInterfaceBlockProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderInterfaceBlockProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderInterfaceBlockProto::IsInitialized() const {
  return true;
}

void ShaderInterfaceBlockProto::Swap(ShaderInterfaceBlockProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderInterfaceBlockProto::InternalSwap(ShaderInterfaceBlockProto* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mapped_name_.Swap(&other->mapped_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_name_.Swap(&other->instance_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(array_size_, other->array_size_);
  swap(layout_, other->layout_);
  swap(is_row_major_layout_, other->is_row_major_layout_);
  swap(static_use_, other->static_use_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderInterfaceBlockProto::GetTypeName() const {
  return "ShaderInterfaceBlockProto";
}


// ===================================================================

void ShaderProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderProto::kShaFieldNumber;
const int ShaderProto::kAttribsFieldNumber;
const int ShaderProto::kUniformsFieldNumber;
const int ShaderProto::kVaryingsFieldNumber;
const int ShaderProto::kOutputVariablesFieldNumber;
const int ShaderProto::kInterfaceBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderProto::ShaderProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShaderProto)
}
ShaderProto::ShaderProto(const ShaderProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attribs_(from.attribs_),
      uniforms_(from.uniforms_),
      varyings_(from.varyings_),
      output_variables_(from.output_variables_),
      interface_blocks_(from.interface_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  // @@protoc_insertion_point(copy_constructor:ShaderProto)
}

void ShaderProto::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShaderProto::~ShaderProto() {
  // @@protoc_insertion_point(destructor:ShaderProto)
  SharedDtor();
}

void ShaderProto::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShaderProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShaderProto& ShaderProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_ShaderProto.base);
  return *internal_default_instance();
}


void ShaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribs_.Clear();
  uniforms_.Clear();
  varyings_.Clear();
  output_variables_.Clear();
  interface_blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sha_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShaderProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:ShaderProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderAttributeProto attribs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attribs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderUniformProto uniforms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_uniforms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderVaryingProto varyings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_varyings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderOutputVariableProto output_variables = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interface_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShaderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShaderProto)
  return false;
#undef DO_
}

void ShaderProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha(), output);
  }

  // repeated .ShaderAttributeProto attribs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->attribs(static_cast<int>(i)),
      output);
  }

  // repeated .ShaderUniformProto uniforms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uniforms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->uniforms(static_cast<int>(i)),
      output);
  }

  // repeated .ShaderVaryingProto varyings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->varyings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->varyings(static_cast<int>(i)),
      output);
  }

  // repeated .ShaderOutputVariableProto output_variables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->output_variables(static_cast<int>(i)),
      output);
  }

  // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->interface_blocks(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:ShaderProto)
}

size_t ShaderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShaderProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .ShaderAttributeProto attribs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attribs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attribs(static_cast<int>(i)));
    }
  }

  // repeated .ShaderUniformProto uniforms = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->uniforms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uniforms(static_cast<int>(i)));
    }
  }

  // repeated .ShaderVaryingProto varyings = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->varyings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->varyings(static_cast<int>(i)));
    }
  }

  // repeated .ShaderOutputVariableProto output_variables = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->output_variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_variables(static_cast<int>(i)));
    }
  }

  // repeated .ShaderInterfaceBlockProto interface_blocks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->interface_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface_blocks(static_cast<int>(i)));
    }
  }

  // optional bytes sha = 1;
  if (has_sha()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sha());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShaderProto*>(&from));
}

void ShaderProto::MergeFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribs_.MergeFrom(from.attribs_);
  uniforms_.MergeFrom(from.uniforms_);
  varyings_.MergeFrom(from.varyings_);
  output_variables_.MergeFrom(from.output_variables_);
  interface_blocks_.MergeFrom(from.interface_blocks_);
  if (from.has_sha()) {
    set_has_sha();
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
}

void ShaderProto::CopyFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderProto::IsInitialized() const {
  return true;
}

void ShaderProto::Swap(ShaderProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderProto::InternalSwap(ShaderProto* other) {
  using std::swap;
  CastToBase(&attribs_)->InternalSwap(CastToBase(&other->attribs_));
  CastToBase(&uniforms_)->InternalSwap(CastToBase(&other->uniforms_));
  CastToBase(&varyings_)->InternalSwap(CastToBase(&other->varyings_));
  CastToBase(&output_variables_)->InternalSwap(CastToBase(&other->output_variables_));
  CastToBase(&interface_blocks_)->InternalSwap(CastToBase(&other->interface_blocks_));
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ShaderProto::GetTypeName() const {
  return "ShaderProto";
}


// ===================================================================

void GpuProgramProto::InitAsDefaultInstance() {
  ::_GpuProgramProto_default_instance_._instance.get_mutable()->vertex_shader_ = const_cast< ::ShaderProto*>(
      ::ShaderProto::internal_default_instance());
  ::_GpuProgramProto_default_instance_._instance.get_mutable()->fragment_shader_ = const_cast< ::ShaderProto*>(
      ::ShaderProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpuProgramProto::kShaFieldNumber;
const int GpuProgramProto::kFormatFieldNumber;
const int GpuProgramProto::kProgramFieldNumber;
const int GpuProgramProto::kProgramIsCompressedFieldNumber;
const int GpuProgramProto::kProgramDecompressedLengthFieldNumber;
const int GpuProgramProto::kVertexShaderFieldNumber;
const int GpuProgramProto::kFragmentShaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpuProgramProto::GpuProgramProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_disk_5fcache_5fproto_2eproto::scc_info_GpuProgramProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GpuProgramProto)
}
GpuProgramProto::GpuProgramProto(const GpuProgramProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_program()) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.has_vertex_shader()) {
    vertex_shader_ = new ::ShaderProto(*from.vertex_shader_);
  } else {
    vertex_shader_ = NULL;
  }
  if (from.has_fragment_shader()) {
    fragment_shader_ = new ::ShaderProto(*from.fragment_shader_);
  } else {
    fragment_shader_ = NULL;
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&program_decompressed_length_) -
    reinterpret_cast<char*>(&format_)) + sizeof(program_decompressed_length_));
  // @@protoc_insertion_point(copy_constructor:GpuProgramProto)
}

void GpuProgramProto::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vertex_shader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&program_decompressed_length_) -
      reinterpret_cast<char*>(&vertex_shader_)) + sizeof(program_decompressed_length_));
}

GpuProgramProto::~GpuProgramProto() {
  // @@protoc_insertion_point(destructor:GpuProgramProto)
  SharedDtor();
}

void GpuProgramProto::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vertex_shader_;
  if (this != internal_default_instance()) delete fragment_shader_;
}

void GpuProgramProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuProgramProto& GpuProgramProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_disk_5fcache_5fproto_2eproto::scc_info_GpuProgramProto.base);
  return *internal_default_instance();
}


void GpuProgramProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GpuProgramProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      program_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(vertex_shader_ != NULL);
      vertex_shader_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(fragment_shader_ != NULL);
      fragment_shader_->Clear();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&format_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&program_decompressed_length_) -
        reinterpret_cast<char*>(&format_)) + sizeof(program_decompressed_length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GpuProgramProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GpuProgramProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_format();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes program = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ShaderProto vertex_shader = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vertex_shader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ShaderProto fragment_shader = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fragment_shader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool program_is_compressed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_program_is_compressed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &program_is_compressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 program_decompressed_length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_program_decompressed_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &program_decompressed_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GpuProgramProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GpuProgramProto)
  return false;
#undef DO_
}

void GpuProgramProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GpuProgramProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha(), output);
  }

  // optional uint32 format = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->format(), output);
  }

  // optional bytes program = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->program(), output);
  }

  // optional .ShaderProto vertex_shader = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_vertex_shader(), output);
  }

  // optional .ShaderProto fragment_shader = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_fragment_shader(), output);
  }

  // optional bool program_is_compressed = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->program_is_compressed(), output);
  }

  // optional uint32 program_decompressed_length = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->program_decompressed_length(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GpuProgramProto)
}

size_t GpuProgramProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GpuProgramProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes sha = 1;
    if (has_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha());
    }

    // optional bytes program = 3;
    if (has_program()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->program());
    }

    // optional .ShaderProto vertex_shader = 4;
    if (has_vertex_shader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vertex_shader_);
    }

    // optional .ShaderProto fragment_shader = 5;
    if (has_fragment_shader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fragment_shader_);
    }

    // optional uint32 format = 2;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->format());
    }

    // optional bool program_is_compressed = 6;
    if (has_program_is_compressed()) {
      total_size += 1 + 1;
    }

    // optional uint32 program_decompressed_length = 7;
    if (has_program_decompressed_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->program_decompressed_length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuProgramProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GpuProgramProto*>(&from));
}

void GpuProgramProto::MergeFrom(const GpuProgramProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GpuProgramProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha();
      sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_program();
      program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_vertex_shader()->::ShaderProto::MergeFrom(from.vertex_shader());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_fragment_shader()->::ShaderProto::MergeFrom(from.fragment_shader());
    }
    if (cached_has_bits & 0x00000010u) {
      format_ = from.format_;
    }
    if (cached_has_bits & 0x00000020u) {
      program_is_compressed_ = from.program_is_compressed_;
    }
    if (cached_has_bits & 0x00000040u) {
      program_decompressed_length_ = from.program_decompressed_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuProgramProto::CopyFrom(const GpuProgramProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GpuProgramProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuProgramProto::IsInitialized() const {
  return true;
}

void GpuProgramProto::Swap(GpuProgramProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpuProgramProto::InternalSwap(GpuProgramProto* other) {
  using std::swap;
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vertex_shader_, other->vertex_shader_);
  swap(fragment_shader_, other->fragment_shader_);
  swap(format_, other->format_);
  swap(program_is_compressed_, other->program_is_compressed_);
  swap(program_decompressed_length_, other->program_decompressed_length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GpuProgramProto::GetTypeName() const {
  return "GpuProgramProto";
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderVariableProto* Arena::CreateMaybeMessage< ::ShaderVariableProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderVariableProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderAttributeProto* Arena::CreateMaybeMessage< ::ShaderAttributeProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderAttributeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderUniformProto* Arena::CreateMaybeMessage< ::ShaderUniformProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderUniformProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderVaryingProto* Arena::CreateMaybeMessage< ::ShaderVaryingProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderVaryingProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderOutputVariableProto* Arena::CreateMaybeMessage< ::ShaderOutputVariableProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderOutputVariableProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderInterfaceBlockFieldProto* Arena::CreateMaybeMessage< ::ShaderInterfaceBlockFieldProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderInterfaceBlockFieldProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderInterfaceBlockProto* Arena::CreateMaybeMessage< ::ShaderInterfaceBlockProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderInterfaceBlockProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ShaderProto* Arena::CreateMaybeMessage< ::ShaderProto >(Arena* arena) {
  return Arena::CreateInternal< ::ShaderProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GpuProgramProto* Arena::CreateMaybeMessage< ::GpuProgramProto >(Arena* arena) {
  return Arena::CreateInternal< ::GpuProgramProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
