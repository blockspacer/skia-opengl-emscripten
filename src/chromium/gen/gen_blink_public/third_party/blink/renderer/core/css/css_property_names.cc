// Generated by third_party/blink/renderer/build/scripts/gperf.py
/* C++ code produced by gperf version 3.1 */
/* Command-line: gperf --key-positions='*' -P -n -m 50 -D -Q CSSPropStringPool  */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gperf@gnu.org>."
#endif


// Copyright (c) 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/renderer/core/css/css_property_names.h"

#include <string.h>
#include "third_party/blink/renderer/core/css/hash_tools.h"
#include "third_party/blink/renderer/platform/wtf/text/ascii_ctype.h"
#include "third_party/blink/renderer/platform/wtf/text/atomic_string.h"
#include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"

#ifdef _MSC_VER
// Disable the warnings from casting a 64-bit pointer to 32-bit long
// warning C4302: 'type cast': truncation from 'char (*)[28]' to 'long'
// warning C4311: 'type cast': pointer truncation from 'char (*)[18]' to 'long'
#pragma warning(disable : 4302 4311)
#endif

namespace blink {
/* maximum key range = 3579, duplicates = 0 */

class CSSPropertyNamesHash
{
private:
  static inline unsigned int property_hash_function (const char *str, size_t len);
public:
  static const struct Property *findPropertyImpl (const char *str, size_t len);
};

inline unsigned int
CSSPropertyNamesHash::property_hash_function (const char *str, size_t len)
{
  static const unsigned short asso_values[] =
    {
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588,    9, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588,   14,  116,   10,
        20,    9,  524,   29,  434,   10,    9,  136,    9,   38,
        10,    9,   10,    9,    9,   10,   11,  360,  253,  227,
       856, 1581,   77, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588, 3588,
      3588, 3588, 3588, 3588, 3588, 3588
    };
  unsigned int hval = 0;

  switch (len)
    {
      default:
        hval += asso_values[static_cast<unsigned char>(str[33])];
        FALLTHROUGH;
      case 33:
        hval += asso_values[static_cast<unsigned char>(str[32])];
        FALLTHROUGH;
      case 32:
        hval += asso_values[static_cast<unsigned char>(str[31])];
        FALLTHROUGH;
      case 31:
        hval += asso_values[static_cast<unsigned char>(str[30])];
        FALLTHROUGH;
      case 30:
        hval += asso_values[static_cast<unsigned char>(str[29])];
        FALLTHROUGH;
      case 29:
        hval += asso_values[static_cast<unsigned char>(str[28])];
        FALLTHROUGH;
      case 28:
        hval += asso_values[static_cast<unsigned char>(str[27])];
        FALLTHROUGH;
      case 27:
        hval += asso_values[static_cast<unsigned char>(str[26])];
        FALLTHROUGH;
      case 26:
        hval += asso_values[static_cast<unsigned char>(str[25])];
        FALLTHROUGH;
      case 25:
        hval += asso_values[static_cast<unsigned char>(str[24])];
        FALLTHROUGH;
      case 24:
        hval += asso_values[static_cast<unsigned char>(str[23])];
        FALLTHROUGH;
      case 23:
        hval += asso_values[static_cast<unsigned char>(str[22])];
        FALLTHROUGH;
      case 22:
        hval += asso_values[static_cast<unsigned char>(str[21])];
        FALLTHROUGH;
      case 21:
        hval += asso_values[static_cast<unsigned char>(str[20])];
        FALLTHROUGH;
      case 20:
        hval += asso_values[static_cast<unsigned char>(str[19])];
        FALLTHROUGH;
      case 19:
        hval += asso_values[static_cast<unsigned char>(str[18])];
        FALLTHROUGH;
      case 18:
        hval += asso_values[static_cast<unsigned char>(str[17])];
        FALLTHROUGH;
      case 17:
        hval += asso_values[static_cast<unsigned char>(str[16])];
        FALLTHROUGH;
      case 16:
        hval += asso_values[static_cast<unsigned char>(str[15])];
        FALLTHROUGH;
      case 15:
        hval += asso_values[static_cast<unsigned char>(str[14])];
        FALLTHROUGH;
      case 14:
        hval += asso_values[static_cast<unsigned char>(str[13])];
        FALLTHROUGH;
      case 13:
        hval += asso_values[static_cast<unsigned char>(str[12])];
        FALLTHROUGH;
      case 12:
        hval += asso_values[static_cast<unsigned char>(str[11])];
        FALLTHROUGH;
      case 11:
        hval += asso_values[static_cast<unsigned char>(str[10])];
        FALLTHROUGH;
      case 10:
        hval += asso_values[static_cast<unsigned char>(str[9])];
        FALLTHROUGH;
      case 9:
        hval += asso_values[static_cast<unsigned char>(str[8])];
        FALLTHROUGH;
      case 8:
        hval += asso_values[static_cast<unsigned char>(str[7])];
        FALLTHROUGH;
      case 7:
        hval += asso_values[static_cast<unsigned char>(str[6])];
        FALLTHROUGH;
      case 6:
        hval += asso_values[static_cast<unsigned char>(str[5])];
        FALLTHROUGH;
      case 5:
        hval += asso_values[static_cast<unsigned char>(str[4])];
        FALLTHROUGH;
      case 4:
        hval += asso_values[static_cast<unsigned char>(str[3])];
        FALLTHROUGH;
      case 3:
        hval += asso_values[static_cast<unsigned char>(str[2])];
        FALLTHROUGH;
      case 2:
        hval += asso_values[static_cast<unsigned char>(str[1])];
        FALLTHROUGH;
      case 1:
        hval += asso_values[static_cast<unsigned char>(str[0])];
        break;
    }
  return hval;
}

struct CSSPropStringPool_t
  {
    char CSSPropStringPool_str0[sizeof("r")];
    char CSSPropStringPool_str1[sizeof("d")];
    char CSSPropStringPool_str2[sizeof("src")];
    char CSSPropStringPool_str3[sizeof("top")];
    char CSSPropStringPool_str4[sizeof("all")];
    char CSSPropStringPool_str5[sizeof("clip")];
    char CSSPropStringPool_str6[sizeof("color")];
    char CSSPropStringPool_str7[sizeof("inset")];
    char CSSPropStringPool_str8[sizeof("clear")];
    char CSSPropStringPool_str9[sizeof("scale")];
    char CSSPropStringPool_str10[sizeof("gap")];
    char CSSPropStringPool_str11[sizeof("order")];
    char CSSPropStringPool_str12[sizeof("page")];
    char CSSPropStringPool_str13[sizeof("rotate")];
    char CSSPropStringPool_str14[sizeof("grid")];
    char CSSPropStringPool_str15[sizeof("content")];
    char CSSPropStringPool_str16[sizeof("contain")];
    char CSSPropStringPool_str17[sizeof("position")];
    char CSSPropStringPool_str18[sizeof("isolation")];
    char CSSPropStringPool_str19[sizeof("stop-color")];
    char CSSPropStringPool_str20[sizeof("translate")];
    char CSSPropStringPool_str21[sizeof("direction")];
    char CSSPropStringPool_str22[sizeof("transition")];
    char CSSPropStringPool_str23[sizeof("size")];
    char CSSPropStringPool_str24[sizeof("caret-color")];
    char CSSPropStringPool_str25[sizeof("margin")];
    char CSSPropStringPool_str26[sizeof("orientation")];
    char CSSPropStringPool_str27[sizeof("padding")];
    char CSSPropStringPool_str28[sizeof("inset-inline")];
    char CSSPropStringPool_str29[sizeof("paint-order")];
    char CSSPropStringPool_str30[sizeof("grid-area")];
    char CSSPropStringPool_str31[sizeof("resize")];
    char CSSPropStringPool_str32[sizeof("animation")];
    char CSSPropStringPool_str33[sizeof("grid-gap")];
    char CSSPropStringPool_str34[sizeof("place-content")];
    char CSSPropStringPool_str35[sizeof("caption-side")];
    char CSSPropStringPool_str36[sizeof("zoom")];
    char CSSPropStringPool_str37[sizeof("place-items")];
    char CSSPropStringPool_str38[sizeof("margin-top")];
    char CSSPropStringPool_str39[sizeof("align-content")];
    char CSSPropStringPool_str40[sizeof("padding-top")];
    char CSSPropStringPool_str41[sizeof("scroll-snap-stop")];
    char CSSPropStringPool_str42[sizeof("align-items")];
    char CSSPropStringPool_str43[sizeof("letter-spacing")];
    char CSSPropStringPool_str44[sizeof("inset-inline-end")];
    char CSSPropStringPool_str45[sizeof("color-rendering")];
    char CSSPropStringPool_str46[sizeof("border")];
    char CSSPropStringPool_str47[sizeof("inline-size")];
    char CSSPropStringPool_str48[sizeof("scroll-margin")];
    char CSSPropStringPool_str49[sizeof("margin-inline")];
    char CSSPropStringPool_str50[sizeof("scroll-padding")];
    char CSSPropStringPool_str51[sizeof("speak")];
    char CSSPropStringPool_str52[sizeof("padding-inline")];
    char CSSPropStringPool_str53[sizeof("inset-inline-start")];
    char CSSPropStringPool_str54[sizeof("stroke")];
    char CSSPropStringPool_str55[sizeof("color-interpolation")];
    char CSSPropStringPool_str56[sizeof("grid-template")];
    char CSSPropStringPool_str57[sizeof("scroll-snap-align")];
    char CSSPropStringPool_str58[sizeof("bottom")];
    char CSSPropStringPool_str59[sizeof("mask")];
    char CSSPropStringPool_str60[sizeof("min-zoom")];
    char CSSPropStringPool_str61[sizeof("animation-name")];
    char CSSPropStringPool_str62[sizeof("border-top")];
    char CSSPropStringPool_str63[sizeof("scroll-margin-top")];
    char CSSPropStringPool_str64[sizeof("marker")];
    char CSSPropStringPool_str65[sizeof("scroll-padding-top")];
    char CSSPropStringPool_str66[sizeof("image-orientation")];
    char CSSPropStringPool_str67[sizeof("image-rendering")];
    char CSSPropStringPool_str68[sizeof("margin-inline-end")];
    char CSSPropStringPool_str69[sizeof("border-color")];
    char CSSPropStringPool_str70[sizeof("padding-inline-end")];
    char CSSPropStringPool_str71[sizeof("animation-direction")];
    char CSSPropStringPool_str72[sizeof("border-inline")];
    char CSSPropStringPool_str73[sizeof("min-inline-size")];
    char CSSPropStringPool_str74[sizeof("margin-inline-start")];
    char CSSPropStringPool_str75[sizeof("scroll-margin-inline")];
    char CSSPropStringPool_str76[sizeof("padding-inline-start")];
    char CSSPropStringPool_str77[sizeof("scroll-padding-inline")];
    char CSSPropStringPool_str78[sizeof("object-position")];
    char CSSPropStringPool_str79[sizeof("grid-template-areas")];
    char CSSPropStringPool_str80[sizeof("tab-size")];
    char CSSPropStringPool_str81[sizeof("border-collapse")];
    char CSSPropStringPool_str82[sizeof("marker-end")];
    char CSSPropStringPool_str83[sizeof("stroke-linecap")];
    char CSSPropStringPool_str84[sizeof("border-top-color")];
    char CSSPropStringPool_str85[sizeof("stroke-linejoin")];
    char CSSPropStringPool_str86[sizeof("border-spacing")];
    char CSSPropStringPool_str87[sizeof("marker-start")];
    char CSSPropStringPool_str88[sizeof("border-image")];
    char CSSPropStringPool_str89[sizeof("border-inline-end")];
    char CSSPropStringPool_str90[sizeof("scroll-margin-inline-end")];
    char CSSPropStringPool_str91[sizeof("marker-mid")];
    char CSSPropStringPool_str92[sizeof("scroll-padding-inline-end")];
    char CSSPropStringPool_str93[sizeof("border-inline-color")];
    char CSSPropStringPool_str94[sizeof("border-inline-start")];
    char CSSPropStringPool_str95[sizeof("scroll-margin-inline-start")];
    char CSSPropStringPool_str96[sizeof("row-gap")];
    char CSSPropStringPool_str97[sizeof("scroll-padding-inline-start")];
    char CSSPropStringPool_str98[sizeof("margin-bottom")];
    char CSSPropStringPool_str99[sizeof("padding-bottom")];
    char CSSPropStringPool_str100[sizeof("dominant-baseline")];
    char CSSPropStringPool_str101[sizeof("grid-row")];
    char CSSPropStringPool_str102[sizeof("line-break")];
    char CSSPropStringPool_str103[sizeof("alignment-baseline")];
    char CSSPropStringPool_str104[sizeof("border-image-slice")];
    char CSSPropStringPool_str105[sizeof("inset-block")];
    char CSSPropStringPool_str106[sizeof("border-inline-end-color")];
    char CSSPropStringPool_str107[sizeof("stroke-miterlimit")];
    char CSSPropStringPool_str108[sizeof("perspective")];
    char CSSPropStringPool_str109[sizeof("border-image-repeat")];
    char CSSPropStringPool_str110[sizeof("border-inline-start-color")];
    char CSSPropStringPool_str111[sizeof("break-inside")];
    char CSSPropStringPool_str112[sizeof("word-spacing")];
    char CSSPropStringPool_str113[sizeof("grid-row-end")];
    char CSSPropStringPool_str114[sizeof("border-bottom")];
    char CSSPropStringPool_str115[sizeof("scroll-margin-bottom")];
    char CSSPropStringPool_str116[sizeof("pointer-events")];
    char CSSPropStringPool_str117[sizeof("scroll-padding-bottom")];
    char CSSPropStringPool_str118[sizeof("grid-row-gap")];
    char CSSPropStringPool_str119[sizeof("grid-row-start")];
    char CSSPropStringPool_str120[sizeof("inset-block-end")];
    char CSSPropStringPool_str121[sizeof("writing-mode")];
    char CSSPropStringPool_str122[sizeof("block-size")];
    char CSSPropStringPool_str123[sizeof("margin-block")];
    char CSSPropStringPool_str124[sizeof("padding-block")];
    char CSSPropStringPool_str125[sizeof("inset-block-start")];
    char CSSPropStringPool_str126[sizeof("vertical-align")];
    char CSSPropStringPool_str127[sizeof("cursor")];
    char CSSPropStringPool_str128[sizeof("quotes")];
    char CSSPropStringPool_str129[sizeof("outline")];
    char CSSPropStringPool_str130[sizeof("border-bottom-color")];
    char CSSPropStringPool_str131[sizeof("page-break-inside")];
    char CSSPropStringPool_str132[sizeof("clip-rule")];
    char CSSPropStringPool_str133[sizeof("perspective-origin")];
    char CSSPropStringPool_str134[sizeof("columns")];
    char CSSPropStringPool_str135[sizeof("margin-block-end")];
    char CSSPropStringPool_str136[sizeof("padding-block-end")];
    char CSSPropStringPool_str137[sizeof("grid-template-rows")];
    char CSSPropStringPool_str138[sizeof("user-select")];
    char CSSPropStringPool_str139[sizeof("border-block")];
    char CSSPropStringPool_str140[sizeof("min-block-size")];
    char CSSPropStringPool_str141[sizeof("margin-block-start")];
    char CSSPropStringPool_str142[sizeof("scroll-margin-block")];
    char CSSPropStringPool_str143[sizeof("padding-block-start")];
    char CSSPropStringPool_str144[sizeof("scroll-padding-block")];
    char CSSPropStringPool_str145[sizeof("outline-color")];
    char CSSPropStringPool_str146[sizeof("counter-reset")];
    char CSSPropStringPool_str147[sizeof("column-span")];
    char CSSPropStringPool_str148[sizeof("right")];
    char CSSPropStringPool_str149[sizeof("orphans")];
    char CSSPropStringPool_str150[sizeof("column-gap")];
    char CSSPropStringPool_str151[sizeof("widows")];
    char CSSPropStringPool_str152[sizeof("unicode-range")];
    char CSSPropStringPool_str153[sizeof("border-block-end")];
    char CSSPropStringPool_str154[sizeof("scroll-margin-block-end")];
    char CSSPropStringPool_str155[sizeof("grid-column")];
    char CSSPropStringPool_str156[sizeof("scroll-padding-block-end")];
    char CSSPropStringPool_str157[sizeof("border-block-color")];
    char CSSPropStringPool_str158[sizeof("clip-path")];
    char CSSPropStringPool_str159[sizeof("border-block-start")];
    char CSSPropStringPool_str160[sizeof("scroll-margin-block-start")];
    char CSSPropStringPool_str161[sizeof("user-zoom")];
    char CSSPropStringPool_str162[sizeof("scroll-padding-block-start")];
    char CSSPropStringPool_str163[sizeof("word-wrap")];
    char CSSPropStringPool_str164[sizeof("counter-increment")];
    char CSSPropStringPool_str165[sizeof("fill")];
    char CSSPropStringPool_str166[sizeof("left")];
    char CSSPropStringPool_str167[sizeof("font")];
    char CSSPropStringPool_str168[sizeof("transition-duration")];
    char CSSPropStringPool_str169[sizeof("word-break")];
    char CSSPropStringPool_str170[sizeof("grid-column-end")];
    char CSSPropStringPool_str171[sizeof("border-block-end-color")];
    char CSSPropStringPool_str172[sizeof("float")];
    char CSSPropStringPool_str173[sizeof("filter")];
    char CSSPropStringPool_str174[sizeof("grid-column-gap")];
    char CSSPropStringPool_str175[sizeof("grid-column-start")];
    char CSSPropStringPool_str176[sizeof("animation-duration")];
    char CSSPropStringPool_str177[sizeof("border-block-start-color")];
    char CSSPropStringPool_str178[sizeof("-webkit-order")];
    char CSSPropStringPool_str179[sizeof("-webkit-locale")];
    char CSSPropStringPool_str180[sizeof("unicode-bidi")];
    char CSSPropStringPool_str181[sizeof("shape-margin")];
    char CSSPropStringPool_str182[sizeof("lighting-color")];
    char CSSPropStringPool_str183[sizeof("shape-rendering")];
    char CSSPropStringPool_str184[sizeof("border-radius")];
    char CSSPropStringPool_str185[sizeof("margin-right")];
    char CSSPropStringPool_str186[sizeof("place-self")];
    char CSSPropStringPool_str187[sizeof("padding-right")];
    char CSSPropStringPool_str188[sizeof("flood-color")];
    char CSSPropStringPool_str189[sizeof("-webkit-transition")];
    char CSSPropStringPool_str190[sizeof("align-self")];
    char CSSPropStringPool_str191[sizeof("transform")];
    char CSSPropStringPool_str192[sizeof("-webkit-appearance")];
    char CSSPropStringPool_str193[sizeof("animation-iteration-count")];
    char CSSPropStringPool_str194[sizeof("grid-template-columns")];
    char CSSPropStringPool_str195[sizeof("scroll-customization")];
    char CSSPropStringPool_str196[sizeof("-epub-caption-side")];
    char CSSPropStringPool_str197[sizeof("-webkit-app-region")];
    char CSSPropStringPool_str198[sizeof("-webkit-animation")];
    char CSSPropStringPool_str199[sizeof("-webkit-line-clamp")];
    char CSSPropStringPool_str200[sizeof("font-size")];
    char CSSPropStringPool_str201[sizeof("-webkit-rtl-ordering")];
    char CSSPropStringPool_str202[sizeof("margin-left")];
    char CSSPropStringPool_str203[sizeof("border-right")];
    char CSSPropStringPool_str204[sizeof("padding-left")];
    char CSSPropStringPool_str205[sizeof("scroll-margin-right")];
    char CSSPropStringPool_str206[sizeof("-webkit-align-content")];
    char CSSPropStringPool_str207[sizeof("scroll-padding-right")];
    char CSSPropStringPool_str208[sizeof("-webkit-margin-end")];
    char CSSPropStringPool_str209[sizeof("-webkit-align-items")];
    char CSSPropStringPool_str210[sizeof("-webkit-padding-end")];
    char CSSPropStringPool_str211[sizeof("border-image-source")];
    char CSSPropStringPool_str212[sizeof("border-image-outset")];
    char CSSPropStringPool_str213[sizeof("-webkit-margin-start")];
    char CSSPropStringPool_str214[sizeof("width")];
    char CSSPropStringPool_str215[sizeof("-webkit-padding-start")];
    char CSSPropStringPool_str216[sizeof("background")];
    char CSSPropStringPool_str217[sizeof("object-fit")];
    char CSSPropStringPool_str218[sizeof("transform-origin")];
    char CSSPropStringPool_str219[sizeof("-webkit-mask")];
    char CSSPropStringPool_str220[sizeof("-webkit-margin-collapse")];
    char CSSPropStringPool_str221[sizeof("border-right-color")];
    char CSSPropStringPool_str222[sizeof("-webkit-animation-name")];
    char CSSPropStringPool_str223[sizeof("border-left")];
    char CSSPropStringPool_str224[sizeof("grid-auto-rows")];
    char CSSPropStringPool_str225[sizeof("scroll-margin-left")];
    char CSSPropStringPool_str226[sizeof("scroll-padding-left")];
    char CSSPropStringPool_str227[sizeof("-webkit-border-end")];
    char CSSPropStringPool_str228[sizeof("white-space")];
    char CSSPropStringPool_str229[sizeof("-webkit-animation-direction")];
    char CSSPropStringPool_str230[sizeof("background-clip")];
    char CSSPropStringPool_str231[sizeof("-webkit-border-start")];
    char CSSPropStringPool_str232[sizeof("-webkit-margin-top-collapse")];
    char CSSPropStringPool_str233[sizeof("background-color")];
    char CSSPropStringPool_str234[sizeof("min-width")];
    char CSSPropStringPool_str235[sizeof("will-change")];
    char CSSPropStringPool_str236[sizeof("animation-fill-mode")];
    char CSSPropStringPool_str237[sizeof("-webkit-mask-clip")];
    char CSSPropStringPool_str238[sizeof("font-kerning")];
    char CSSPropStringPool_str239[sizeof("color-interpolation-filters")];
    char CSSPropStringPool_str240[sizeof("background-repeat")];
    char CSSPropStringPool_str241[sizeof("border-left-color")];
    char CSSPropStringPool_str242[sizeof("-webkit-mask-repeat")];
    char CSSPropStringPool_str243[sizeof("background-origin")];
    char CSSPropStringPool_str244[sizeof("background-position")];
    char CSSPropStringPool_str245[sizeof("-webkit-border-end-color")];
    char CSSPropStringPool_str246[sizeof("-webkit-border-image")];
    char CSSPropStringPool_str247[sizeof("-webkit-mask-origin")];
    char CSSPropStringPool_str248[sizeof("-webkit-mask-position")];
    char CSSPropStringPool_str249[sizeof("-webkit-border-start-color")];
    char CSSPropStringPool_str250[sizeof("background-image")];
    char CSSPropStringPool_str251[sizeof("background-size")];
    char CSSPropStringPool_str252[sizeof("column-rule")];
    char CSSPropStringPool_str253[sizeof("-webkit-mask-image")];
    char CSSPropStringPool_str254[sizeof("-webkit-mask-size")];
    char CSSPropStringPool_str255[sizeof("column-count")];
    char CSSPropStringPool_str256[sizeof("-webkit-mask-composite")];
    char CSSPropStringPool_str257[sizeof("x")];
    char CSSPropStringPool_str258[sizeof("-webkit-line-break")];
    char CSSPropStringPool_str259[sizeof("break-after")];
    char CSSPropStringPool_str260[sizeof("rx")];
    char CSSPropStringPool_str261[sizeof("cx")];
    char CSSPropStringPool_str262[sizeof("-webkit-perspective")];
    char CSSPropStringPool_str263[sizeof("border-width")];
    char CSSPropStringPool_str264[sizeof("font-variant")];
    char CSSPropStringPool_str265[sizeof("column-rule-color")];
    char CSSPropStringPool_str266[sizeof("stroke-width")];
    char CSSPropStringPool_str267[sizeof("touch-action")];
    char CSSPropStringPool_str268[sizeof("-epub-writing-mode")];
    char CSSPropStringPool_str269[sizeof("backdrop-filter")];
    char CSSPropStringPool_str270[sizeof("shape-outside")];
    char CSSPropStringPool_str271[sizeof("-webkit-writing-mode")];
    char CSSPropStringPool_str272[sizeof("scroll-behavior")];
    char CSSPropStringPool_str273[sizeof("border-top-width")];
    char CSSPropStringPool_str274[sizeof("grid-auto-columns")];
    char CSSPropStringPool_str275[sizeof("height")];
    char CSSPropStringPool_str276[sizeof("-webkit-margin-bottom-collapse")];
    char CSSPropStringPool_str277[sizeof("page-break-after")];
    char CSSPropStringPool_str278[sizeof("font-variant-caps")];
    char CSSPropStringPool_str279[sizeof("fill-rule")];
    char CSSPropStringPool_str280[sizeof("border-inline-width")];
    char CSSPropStringPool_str281[sizeof("-webkit-perspective-origin")];
    char CSSPropStringPool_str282[sizeof("text-indent")];
    char CSSPropStringPool_str283[sizeof("text-align")];
    char CSSPropStringPool_str284[sizeof("break-before")];
    char CSSPropStringPool_str285[sizeof("background-blend-mode")];
    char CSSPropStringPool_str286[sizeof("-webkit-columns")];
    char CSSPropStringPool_str287[sizeof("line-height")];
    char CSSPropStringPool_str288[sizeof("-webkit-user-select")];
    char CSSPropStringPool_str289[sizeof("z-index")];
    char CSSPropStringPool_str290[sizeof("border-image-width")];
    char CSSPropStringPool_str291[sizeof("min-height")];
    char CSSPropStringPool_str292[sizeof("-webkit-user-drag")];
    char CSSPropStringPool_str293[sizeof("column-fill")];
    char CSSPropStringPool_str294[sizeof("border-inline-end-width")];
    char CSSPropStringPool_str295[sizeof("font-variant-east-asian")];
    char CSSPropStringPool_str296[sizeof("text-decoration")];
    char CSSPropStringPool_str297[sizeof("text-orientation")];
    char CSSPropStringPool_str298[sizeof("text-rendering")];
    char CSSPropStringPool_str299[sizeof("font-variation-settings")];
    char CSSPropStringPool_str300[sizeof("border-inline-start-width")];
    char CSSPropStringPool_str301[sizeof("-webkit-column-span")];
    char CSSPropStringPool_str302[sizeof("text-align-last")];
    char CSSPropStringPool_str303[sizeof("line-height-step")];
    char CSSPropStringPool_str304[sizeof("-webkit-column-gap")];
    char CSSPropStringPool_str305[sizeof("page-break-before")];
    char CSSPropStringPool_str306[sizeof("-webkit-clip-path")];
    char CSSPropStringPool_str307[sizeof("overflow")];
    char CSSPropStringPool_str308[sizeof("max-zoom")];
    char CSSPropStringPool_str309[sizeof("text-decoration-line")];
    char CSSPropStringPool_str310[sizeof("font-stretch")];
    char CSSPropStringPool_str311[sizeof("text-decoration-color")];
    char CSSPropStringPool_str312[sizeof("-webkit-print-color-adjust")];
    char CSSPropStringPool_str313[sizeof("-epub-word-break")];
    char CSSPropStringPool_str314[sizeof("-webkit-transition-duration")];
    char CSSPropStringPool_str315[sizeof("border-bottom-width")];
    char CSSPropStringPool_str316[sizeof("offset")];
    char CSSPropStringPool_str317[sizeof("max-inline-size")];
    char CSSPropStringPool_str318[sizeof("viewport-fit")];
    char CSSPropStringPool_str319[sizeof("-webkit-filter")];
    char CSSPropStringPool_str320[sizeof("font-size-adjust")];
    char CSSPropStringPool_str321[sizeof("-webkit-animation-duration")];
    char CSSPropStringPool_str322[sizeof("-webkit-shape-margin")];
    char CSSPropStringPool_str323[sizeof("outline-width")];
    char CSSPropStringPool_str324[sizeof("-webkit-border-radius")];
    char CSSPropStringPool_str325[sizeof("-webkit-border-vertical-spacing")];
    char CSSPropStringPool_str326[sizeof("box-sizing")];
    char CSSPropStringPool_str327[sizeof("border-top-right-radius")];
    char CSSPropStringPool_str328[sizeof("column-width")];
    char CSSPropStringPool_str329[sizeof("offset-rotate")];
    char CSSPropStringPool_str330[sizeof("-webkit-align-self")];
    char CSSPropStringPool_str331[sizeof("-webkit-transform")];
    char CSSPropStringPool_str332[sizeof("mix-blend-mode")];
    char CSSPropStringPool_str333[sizeof("-webkit-animation-iteration-count")];
    char CSSPropStringPool_str334[sizeof("border-block-width")];
    char CSSPropStringPool_str335[sizeof("transition-timing-function")];
    char CSSPropStringPool_str336[sizeof("offset-position")];
    char CSSPropStringPool_str337[sizeof("baseline-shift")];
    char CSSPropStringPool_str338[sizeof("offset-distance")];
    char CSSPropStringPool_str339[sizeof("animation-timing-function")];
    char CSSPropStringPool_str340[sizeof("overscroll-behavior")];
    char CSSPropStringPool_str341[sizeof("border-top-left-radius")];
    char CSSPropStringPool_str342[sizeof("-webkit-margin-after")];
    char CSSPropStringPool_str343[sizeof("-webkit-padding-after")];
    char CSSPropStringPool_str344[sizeof("border-block-end-width")];
    char CSSPropStringPool_str345[sizeof("border-block-start-width")];
    char CSSPropStringPool_str346[sizeof("-webkit-transform-origin")];
    char CSSPropStringPool_str347[sizeof("grid-auto-flow")];
    char CSSPropStringPool_str348[sizeof("-webkit-font-size-delta")];
    char CSSPropStringPool_str349[sizeof("-webkit-border-after")];
    char CSSPropStringPool_str350[sizeof("font-weight")];
    char CSSPropStringPool_str351[sizeof("background-attachment")];
    char CSSPropStringPool_str352[sizeof("-webkit-background-clip")];
    char CSSPropStringPool_str353[sizeof("-webkit-animation-fill-mode")];
    char CSSPropStringPool_str354[sizeof("-webkit-margin-after-collapse")];
    char CSSPropStringPool_str355[sizeof("border-bottom-right-radius")];
    char CSSPropStringPool_str356[sizeof("max-block-size")];
    char CSSPropStringPool_str357[sizeof("overflow-wrap")];
    char CSSPropStringPool_str358[sizeof("-webkit-margin-before")];
    char CSSPropStringPool_str359[sizeof("-webkit-padding-before")];
    char CSSPropStringPool_str360[sizeof("-webkit-background-origin")];
    char CSSPropStringPool_str361[sizeof("-webkit-logical-width")];
    char CSSPropStringPool_str362[sizeof("-webkit-border-after-color")];
    char CSSPropStringPool_str363[sizeof("-webkit-transform-origin-z")];
    char CSSPropStringPool_str364[sizeof("-webkit-column-break-inside")];
    char CSSPropStringPool_str365[sizeof("font-variant-numeric")];
    char CSSPropStringPool_str366[sizeof("text-decoration-skip-ink")];
    char CSSPropStringPool_str367[sizeof("font-variant-ligatures")];
    char CSSPropStringPool_str368[sizeof("-webkit-background-size")];
    char CSSPropStringPool_str369[sizeof("-webkit-column-rule")];
    char CSSPropStringPool_str370[sizeof("border-bottom-left-radius")];
    char CSSPropStringPool_str371[sizeof("-webkit-column-count")];
    char CSSPropStringPool_str372[sizeof("text-anchor")];
    char CSSPropStringPool_str373[sizeof("-webkit-border-before")];
    char CSSPropStringPool_str374[sizeof("border-right-width")];
    char CSSPropStringPool_str375[sizeof("-webkit-min-logical-width")];
    char CSSPropStringPool_str376[sizeof("vector-effect")];
    char CSSPropStringPool_str377[sizeof("flex")];
    char CSSPropStringPool_str378[sizeof("-webkit-border-horizontal-spacing")];
    char CSSPropStringPool_str379[sizeof("-webkit-margin-before-collapse")];
    char CSSPropStringPool_str380[sizeof("-webkit-column-rule-color")];
    char CSSPropStringPool_str381[sizeof("text-underline-position")];
    char CSSPropStringPool_str382[sizeof("text-size-adjust")];
    char CSSPropStringPool_str383[sizeof("-webkit-border-before-color")];
    char CSSPropStringPool_str384[sizeof("-webkit-shape-outside")];
    char CSSPropStringPool_str385[sizeof("border-left-width")];
    char CSSPropStringPool_str386[sizeof("-webkit-border-end-width")];
    char CSSPropStringPool_str387[sizeof("-webkit-border-start-width")];
    char CSSPropStringPool_str388[sizeof("flex-direction")];
    char CSSPropStringPool_str389[sizeof("outline-offset")];
    char CSSPropStringPool_str390[sizeof("-epub-text-orientation")];
    char CSSPropStringPool_str391[sizeof("text-transform")];
    char CSSPropStringPool_str392[sizeof("-webkit-text-orientation")];
    char CSSPropStringPool_str393[sizeof("shape-image-threshold")];
    char CSSPropStringPool_str394[sizeof("column-rule-width")];
    char CSSPropStringPool_str395[sizeof("overflow-anchor")];
    char CSSPropStringPool_str396[sizeof("-webkit-logical-height")];
    char CSSPropStringPool_str397[sizeof("offset-path")];
    char CSSPropStringPool_str398[sizeof("flex-basis")];
    char CSSPropStringPool_str399[sizeof("-webkit-box-orient")];
    char CSSPropStringPool_str400[sizeof("y")];
    char CSSPropStringPool_str401[sizeof("offset-anchor")];
    char CSSPropStringPool_str402[sizeof("-webkit-box-align")];
    char CSSPropStringPool_str403[sizeof("ry")];
    char CSSPropStringPool_str404[sizeof("cy")];
    char CSSPropStringPool_str405[sizeof("-webkit-text-stroke")];
    char CSSPropStringPool_str406[sizeof("font-feature-settings")];
    char CSSPropStringPool_str407[sizeof("text-shadow")];
    char CSSPropStringPool_str408[sizeof("-epub-text-combine")];
    char CSSPropStringPool_str409[sizeof("-webkit-box-direction")];
    char CSSPropStringPool_str410[sizeof("max-width")];
    char CSSPropStringPool_str411[sizeof("-webkit-min-logical-height")];
    char CSSPropStringPool_str412[sizeof("transform-box")];
    char CSSPropStringPool_str413[sizeof("-webkit-text-combine")];
    char CSSPropStringPool_str414[sizeof("opacity")];
    char CSSPropStringPool_str415[sizeof("background-repeat-x")];
    char CSSPropStringPool_str416[sizeof("-webkit-font-smoothing")];
    char CSSPropStringPool_str417[sizeof("display")];
    char CSSPropStringPool_str418[sizeof("-webkit-mask-repeat-x")];
    char CSSPropStringPool_str419[sizeof("-webkit-text-stroke-color")];
    char CSSPropStringPool_str420[sizeof("-webkit-box-sizing")];
    char CSSPropStringPool_str421[sizeof("background-position-x")];
    char CSSPropStringPool_str422[sizeof("flex-wrap")];
    char CSSPropStringPool_str423[sizeof("list-style")];
    char CSSPropStringPool_str424[sizeof("-webkit-border-top-right-radius")];
    char CSSPropStringPool_str425[sizeof("-webkit-column-width")];
    char CSSPropStringPool_str426[sizeof("-webkit-mask-position-x")];
    char CSSPropStringPool_str427[sizeof("flex-grow")];
    char CSSPropStringPool_str428[sizeof("-webkit-box-pack")];
    char CSSPropStringPool_str429[sizeof("stop-opacity")];
    char CSSPropStringPool_str430[sizeof("buffered-rendering")];
    char CSSPropStringPool_str431[sizeof("-webkit-transition-timing-function")];
    char CSSPropStringPool_str432[sizeof("box-shadow")];
    char CSSPropStringPool_str433[sizeof("empty-cells")];
    char CSSPropStringPool_str434[sizeof("-webkit-animation-timing-function")];
    char CSSPropStringPool_str435[sizeof("scroll-snap-type")];
    char CSSPropStringPool_str436[sizeof("-webkit-border-top-left-radius")];
    char CSSPropStringPool_str437[sizeof("transition-delay")];
    char CSSPropStringPool_str438[sizeof("list-style-position")];
    char CSSPropStringPool_str439[sizeof("stroke-dashoffset")];
    char CSSPropStringPool_str440[sizeof("transition-property")];
    char CSSPropStringPool_str441[sizeof("animation-delay")];
    char CSSPropStringPool_str442[sizeof("list-style-image")];
    char CSSPropStringPool_str443[sizeof("border-style")];
    char CSSPropStringPool_str444[sizeof("animation-play-state")];
    char CSSPropStringPool_str445[sizeof("mask-type")];
    char CSSPropStringPool_str446[sizeof("-webkit-mask-box-image")];
    char CSSPropStringPool_str447[sizeof("-webkit-perspective-origin-x")];
    char CSSPropStringPool_str448[sizeof("-webkit-column-break-after")];
    char CSSPropStringPool_str449[sizeof("-webkit-border-bottom-right-radius")];
    char CSSPropStringPool_str450[sizeof("stroke-opacity")];
    char CSSPropStringPool_str451[sizeof("border-top-style")];
    char CSSPropStringPool_str452[sizeof("max-height")];
    char CSSPropStringPool_str453[sizeof("border-inline-style")];
    char CSSPropStringPool_str454[sizeof("-webkit-mask-box-image-slice")];
    char CSSPropStringPool_str455[sizeof("-webkit-mask-box-image-repeat")];
    char CSSPropStringPool_str456[sizeof("-webkit-border-bottom-left-radius")];
    char CSSPropStringPool_str457[sizeof("overflow-x")];
    char CSSPropStringPool_str458[sizeof("border-inline-end-style")];
    char CSSPropStringPool_str459[sizeof("-webkit-box-decoration-break")];
    char CSSPropStringPool_str460[sizeof("-webkit-flex")];
    char CSSPropStringPool_str461[sizeof("-webkit-highlight")];
    char CSSPropStringPool_str462[sizeof("border-inline-start-style")];
    char CSSPropStringPool_str463[sizeof("-webkit-column-break-before")];
    char CSSPropStringPool_str464[sizeof("-epub-text-emphasis")];
    char CSSPropStringPool_str465[sizeof("text-overflow")];
    char CSSPropStringPool_str466[sizeof("-webkit-text-emphasis")];
    char CSSPropStringPool_str467[sizeof("-webkit-text-size-adjust")];
    char CSSPropStringPool_str468[sizeof("text-combine-upright")];
    char CSSPropStringPool_str469[sizeof("-webkit-border-after-width")];
    char CSSPropStringPool_str470[sizeof("-epub-text-emphasis-color")];
    char CSSPropStringPool_str471[sizeof("border-bottom-style")];
    char CSSPropStringPool_str472[sizeof("-webkit-text-emphasis-color")];
    char CSSPropStringPool_str473[sizeof("flex-shrink")];
    char CSSPropStringPool_str474[sizeof("visibility")];
    char CSSPropStringPool_str475[sizeof("-webkit-box-ordinal-group")];
    char CSSPropStringPool_str476[sizeof("-webkit-tap-highlight-color")];
    char CSSPropStringPool_str477[sizeof("-webkit-text-fill-color")];
    char CSSPropStringPool_str478[sizeof("-webkit-flex-direction")];
    char CSSPropStringPool_str479[sizeof("-epub-text-transform")];
    char CSSPropStringPool_str480[sizeof("-webkit-text-emphasis-position")];
    char CSSPropStringPool_str481[sizeof("outline-style")];
    char CSSPropStringPool_str482[sizeof("overscroll-behavior-x")];
    char CSSPropStringPool_str483[sizeof("-webkit-shape-image-threshold")];
    char CSSPropStringPool_str484[sizeof("-webkit-column-rule-width")];
    char CSSPropStringPool_str485[sizeof("border-block-style")];
    char CSSPropStringPool_str486[sizeof("-webkit-flex-basis")];
    char CSSPropStringPool_str487[sizeof("-webkit-border-before-width")];
    char CSSPropStringPool_str488[sizeof("-webkit-box-reflect")];
    char CSSPropStringPool_str489[sizeof("-webkit-transform-origin-x")];
    char CSSPropStringPool_str490[sizeof("-webkit-font-feature-settings")];
    char CSSPropStringPool_str491[sizeof("border-block-end-style")];
    char CSSPropStringPool_str492[sizeof("table-layout")];
    char CSSPropStringPool_str493[sizeof("border-block-start-style")];
    char CSSPropStringPool_str494[sizeof("-webkit-opacity")];
    char CSSPropStringPool_str495[sizeof("flex-flow")];
    char CSSPropStringPool_str496[sizeof("font-style")];
    char CSSPropStringPool_str497[sizeof("-webkit-flex-wrap")];
    char CSSPropStringPool_str498[sizeof("fill-opacity")];
    char CSSPropStringPool_str499[sizeof("-webkit-flex-grow")];
    char CSSPropStringPool_str500[sizeof("font-display")];
    char CSSPropStringPool_str501[sizeof("flood-opacity")];
    char CSSPropStringPool_str502[sizeof("-webkit-box-shadow")];
    char CSSPropStringPool_str503[sizeof("mask-source-type")];
    char CSSPropStringPool_str504[sizeof("-webkit-mask-box-image-source")];
    char CSSPropStringPool_str505[sizeof("-webkit-mask-box-image-outset")];
    char CSSPropStringPool_str506[sizeof("-webkit-max-logical-width")];
    char CSSPropStringPool_str507[sizeof("transform-style")];
    char CSSPropStringPool_str508[sizeof("-webkit-transition-delay")];
    char CSSPropStringPool_str509[sizeof("-webkit-transition-property")];
    char CSSPropStringPool_str510[sizeof("-webkit-animation-delay")];
    char CSSPropStringPool_str511[sizeof("stroke-dasharray")];
    char CSSPropStringPool_str512[sizeof("border-right-style")];
    char CSSPropStringPool_str513[sizeof("-webkit-text-stroke-width")];
    char CSSPropStringPool_str514[sizeof("-webkit-animation-play-state")];
    char CSSPropStringPool_str515[sizeof("border-left-style")];
    char CSSPropStringPool_str516[sizeof("background-repeat-y")];
    char CSSPropStringPool_str517[sizeof("-webkit-border-end-style")];
    char CSSPropStringPool_str518[sizeof("-webkit-mask-repeat-y")];
    char CSSPropStringPool_str519[sizeof("background-position-y")];
    char CSSPropStringPool_str520[sizeof("-webkit-border-start-style")];
    char CSSPropStringPool_str521[sizeof("-webkit-mask-position-y")];
    char CSSPropStringPool_str522[sizeof("column-rule-style")];
    char CSSPropStringPool_str523[sizeof("-webkit-max-logical-height")];
    char CSSPropStringPool_str524[sizeof("hyphens")];
    char CSSPropStringPool_str525[sizeof("-webkit-mask-box-image-width")];
    char CSSPropStringPool_str526[sizeof("-webkit-flex-shrink")];
    char CSSPropStringPool_str527[sizeof("-webkit-perspective-origin-y")];
    char CSSPropStringPool_str528[sizeof("justify-content")];
    char CSSPropStringPool_str529[sizeof("justify-items")];
    char CSSPropStringPool_str530[sizeof("text-decoration-style")];
    char CSSPropStringPool_str531[sizeof("overflow-y")];
    char CSSPropStringPool_str532[sizeof("-webkit-text-decorations-in-effect")];
    char CSSPropStringPool_str533[sizeof("-webkit-ruby-position")];
    char CSSPropStringPool_str534[sizeof("-webkit-flex-flow")];
    char CSSPropStringPool_str535[sizeof("font-family")];
    char CSSPropStringPool_str536[sizeof("overscroll-behavior-y")];
    char CSSPropStringPool_str537[sizeof("-webkit-transform-style")];
    char CSSPropStringPool_str538[sizeof("-webkit-transform-origin-y")];
    char CSSPropStringPool_str539[sizeof("backface-visibility")];
    char CSSPropStringPool_str540[sizeof("-webkit-border-after-style")];
    char CSSPropStringPool_str541[sizeof("-webkit-box-flex")];
    char CSSPropStringPool_str542[sizeof("-webkit-column-rule-style")];
    char CSSPropStringPool_str543[sizeof("-webkit-border-before-style")];
    char CSSPropStringPool_str544[sizeof("justify-self")];
    char CSSPropStringPool_str545[sizeof("-webkit-user-modify")];
    char CSSPropStringPool_str546[sizeof("-webkit-justify-content")];
    char CSSPropStringPool_str547[sizeof("list-style-type")];
    char CSSPropStringPool_str548[sizeof("-webkit-backface-visibility")];
    char CSSPropStringPool_str549[sizeof("text-justify")];
    char CSSPropStringPool_str550[sizeof("-webkit-text-security")];
    char CSSPropStringPool_str551[sizeof("-webkit-hyphenate-character")];
    char CSSPropStringPool_str552[sizeof("-epub-text-emphasis-style")];
    char CSSPropStringPool_str553[sizeof("-webkit-text-emphasis-style")];
  };
static const struct CSSPropStringPool_t CSSPropStringPool_contents =
  {
    "r",
    "d",
    "src",
    "top",
    "all",
    "clip",
    "color",
    "inset",
    "clear",
    "scale",
    "gap",
    "order",
    "page",
    "rotate",
    "grid",
    "content",
    "contain",
    "position",
    "isolation",
    "stop-color",
    "translate",
    "direction",
    "transition",
    "size",
    "caret-color",
    "margin",
    "orientation",
    "padding",
    "inset-inline",
    "paint-order",
    "grid-area",
    "resize",
    "animation",
    "grid-gap",
    "place-content",
    "caption-side",
    "zoom",
    "place-items",
    "margin-top",
    "align-content",
    "padding-top",
    "scroll-snap-stop",
    "align-items",
    "letter-spacing",
    "inset-inline-end",
    "color-rendering",
    "border",
    "inline-size",
    "scroll-margin",
    "margin-inline",
    "scroll-padding",
    "speak",
    "padding-inline",
    "inset-inline-start",
    "stroke",
    "color-interpolation",
    "grid-template",
    "scroll-snap-align",
    "bottom",
    "mask",
    "min-zoom",
    "animation-name",
    "border-top",
    "scroll-margin-top",
    "marker",
    "scroll-padding-top",
    "image-orientation",
    "image-rendering",
    "margin-inline-end",
    "border-color",
    "padding-inline-end",
    "animation-direction",
    "border-inline",
    "min-inline-size",
    "margin-inline-start",
    "scroll-margin-inline",
    "padding-inline-start",
    "scroll-padding-inline",
    "object-position",
    "grid-template-areas",
    "tab-size",
    "border-collapse",
    "marker-end",
    "stroke-linecap",
    "border-top-color",
    "stroke-linejoin",
    "border-spacing",
    "marker-start",
    "border-image",
    "border-inline-end",
    "scroll-margin-inline-end",
    "marker-mid",
    "scroll-padding-inline-end",
    "border-inline-color",
    "border-inline-start",
    "scroll-margin-inline-start",
    "row-gap",
    "scroll-padding-inline-start",
    "margin-bottom",
    "padding-bottom",
    "dominant-baseline",
    "grid-row",
    "line-break",
    "alignment-baseline",
    "border-image-slice",
    "inset-block",
    "border-inline-end-color",
    "stroke-miterlimit",
    "perspective",
    "border-image-repeat",
    "border-inline-start-color",
    "break-inside",
    "word-spacing",
    "grid-row-end",
    "border-bottom",
    "scroll-margin-bottom",
    "pointer-events",
    "scroll-padding-bottom",
    "grid-row-gap",
    "grid-row-start",
    "inset-block-end",
    "writing-mode",
    "block-size",
    "margin-block",
    "padding-block",
    "inset-block-start",
    "vertical-align",
    "cursor",
    "quotes",
    "outline",
    "border-bottom-color",
    "page-break-inside",
    "clip-rule",
    "perspective-origin",
    "columns",
    "margin-block-end",
    "padding-block-end",
    "grid-template-rows",
    "user-select",
    "border-block",
    "min-block-size",
    "margin-block-start",
    "scroll-margin-block",
    "padding-block-start",
    "scroll-padding-block",
    "outline-color",
    "counter-reset",
    "column-span",
    "right",
    "orphans",
    "column-gap",
    "widows",
    "unicode-range",
    "border-block-end",
    "scroll-margin-block-end",
    "grid-column",
    "scroll-padding-block-end",
    "border-block-color",
    "clip-path",
    "border-block-start",
    "scroll-margin-block-start",
    "user-zoom",
    "scroll-padding-block-start",
    "word-wrap",
    "counter-increment",
    "fill",
    "left",
    "font",
    "transition-duration",
    "word-break",
    "grid-column-end",
    "border-block-end-color",
    "float",
    "filter",
    "grid-column-gap",
    "grid-column-start",
    "animation-duration",
    "border-block-start-color",
    "-webkit-order",
    "-webkit-locale",
    "unicode-bidi",
    "shape-margin",
    "lighting-color",
    "shape-rendering",
    "border-radius",
    "margin-right",
    "place-self",
    "padding-right",
    "flood-color",
    "-webkit-transition",
    "align-self",
    "transform",
    "-webkit-appearance",
    "animation-iteration-count",
    "grid-template-columns",
    "scroll-customization",
    "-epub-caption-side",
    "-webkit-app-region",
    "-webkit-animation",
    "-webkit-line-clamp",
    "font-size",
    "-webkit-rtl-ordering",
    "margin-left",
    "border-right",
    "padding-left",
    "scroll-margin-right",
    "-webkit-align-content",
    "scroll-padding-right",
    "-webkit-margin-end",
    "-webkit-align-items",
    "-webkit-padding-end",
    "border-image-source",
    "border-image-outset",
    "-webkit-margin-start",
    "width",
    "-webkit-padding-start",
    "background",
    "object-fit",
    "transform-origin",
    "-webkit-mask",
    "-webkit-margin-collapse",
    "border-right-color",
    "-webkit-animation-name",
    "border-left",
    "grid-auto-rows",
    "scroll-margin-left",
    "scroll-padding-left",
    "-webkit-border-end",
    "white-space",
    "-webkit-animation-direction",
    "background-clip",
    "-webkit-border-start",
    "-webkit-margin-top-collapse",
    "background-color",
    "min-width",
    "will-change",
    "animation-fill-mode",
    "-webkit-mask-clip",
    "font-kerning",
    "color-interpolation-filters",
    "background-repeat",
    "border-left-color",
    "-webkit-mask-repeat",
    "background-origin",
    "background-position",
    "-webkit-border-end-color",
    "-webkit-border-image",
    "-webkit-mask-origin",
    "-webkit-mask-position",
    "-webkit-border-start-color",
    "background-image",
    "background-size",
    "column-rule",
    "-webkit-mask-image",
    "-webkit-mask-size",
    "column-count",
    "-webkit-mask-composite",
    "x",
    "-webkit-line-break",
    "break-after",
    "rx",
    "cx",
    "-webkit-perspective",
    "border-width",
    "font-variant",
    "column-rule-color",
    "stroke-width",
    "touch-action",
    "-epub-writing-mode",
    "backdrop-filter",
    "shape-outside",
    "-webkit-writing-mode",
    "scroll-behavior",
    "border-top-width",
    "grid-auto-columns",
    "height",
    "-webkit-margin-bottom-collapse",
    "page-break-after",
    "font-variant-caps",
    "fill-rule",
    "border-inline-width",
    "-webkit-perspective-origin",
    "text-indent",
    "text-align",
    "break-before",
    "background-blend-mode",
    "-webkit-columns",
    "line-height",
    "-webkit-user-select",
    "z-index",
    "border-image-width",
    "min-height",
    "-webkit-user-drag",
    "column-fill",
    "border-inline-end-width",
    "font-variant-east-asian",
    "text-decoration",
    "text-orientation",
    "text-rendering",
    "font-variation-settings",
    "border-inline-start-width",
    "-webkit-column-span",
    "text-align-last",
    "line-height-step",
    "-webkit-column-gap",
    "page-break-before",
    "-webkit-clip-path",
    "overflow",
    "max-zoom",
    "text-decoration-line",
    "font-stretch",
    "text-decoration-color",
    "-webkit-print-color-adjust",
    "-epub-word-break",
    "-webkit-transition-duration",
    "border-bottom-width",
    "offset",
    "max-inline-size",
    "viewport-fit",
    "-webkit-filter",
    "font-size-adjust",
    "-webkit-animation-duration",
    "-webkit-shape-margin",
    "outline-width",
    "-webkit-border-radius",
    "-webkit-border-vertical-spacing",
    "box-sizing",
    "border-top-right-radius",
    "column-width",
    "offset-rotate",
    "-webkit-align-self",
    "-webkit-transform",
    "mix-blend-mode",
    "-webkit-animation-iteration-count",
    "border-block-width",
    "transition-timing-function",
    "offset-position",
    "baseline-shift",
    "offset-distance",
    "animation-timing-function",
    "overscroll-behavior",
    "border-top-left-radius",
    "-webkit-margin-after",
    "-webkit-padding-after",
    "border-block-end-width",
    "border-block-start-width",
    "-webkit-transform-origin",
    "grid-auto-flow",
    "-webkit-font-size-delta",
    "-webkit-border-after",
    "font-weight",
    "background-attachment",
    "-webkit-background-clip",
    "-webkit-animation-fill-mode",
    "-webkit-margin-after-collapse",
    "border-bottom-right-radius",
    "max-block-size",
    "overflow-wrap",
    "-webkit-margin-before",
    "-webkit-padding-before",
    "-webkit-background-origin",
    "-webkit-logical-width",
    "-webkit-border-after-color",
    "-webkit-transform-origin-z",
    "-webkit-column-break-inside",
    "font-variant-numeric",
    "text-decoration-skip-ink",
    "font-variant-ligatures",
    "-webkit-background-size",
    "-webkit-column-rule",
    "border-bottom-left-radius",
    "-webkit-column-count",
    "text-anchor",
    "-webkit-border-before",
    "border-right-width",
    "-webkit-min-logical-width",
    "vector-effect",
    "flex",
    "-webkit-border-horizontal-spacing",
    "-webkit-margin-before-collapse",
    "-webkit-column-rule-color",
    "text-underline-position",
    "text-size-adjust",
    "-webkit-border-before-color",
    "-webkit-shape-outside",
    "border-left-width",
    "-webkit-border-end-width",
    "-webkit-border-start-width",
    "flex-direction",
    "outline-offset",
    "-epub-text-orientation",
    "text-transform",
    "-webkit-text-orientation",
    "shape-image-threshold",
    "column-rule-width",
    "overflow-anchor",
    "-webkit-logical-height",
    "offset-path",
    "flex-basis",
    "-webkit-box-orient",
    "y",
    "offset-anchor",
    "-webkit-box-align",
    "ry",
    "cy",
    "-webkit-text-stroke",
    "font-feature-settings",
    "text-shadow",
    "-epub-text-combine",
    "-webkit-box-direction",
    "max-width",
    "-webkit-min-logical-height",
    "transform-box",
    "-webkit-text-combine",
    "opacity",
    "background-repeat-x",
    "-webkit-font-smoothing",
    "display",
    "-webkit-mask-repeat-x",
    "-webkit-text-stroke-color",
    "-webkit-box-sizing",
    "background-position-x",
    "flex-wrap",
    "list-style",
    "-webkit-border-top-right-radius",
    "-webkit-column-width",
    "-webkit-mask-position-x",
    "flex-grow",
    "-webkit-box-pack",
    "stop-opacity",
    "buffered-rendering",
    "-webkit-transition-timing-function",
    "box-shadow",
    "empty-cells",
    "-webkit-animation-timing-function",
    "scroll-snap-type",
    "-webkit-border-top-left-radius",
    "transition-delay",
    "list-style-position",
    "stroke-dashoffset",
    "transition-property",
    "animation-delay",
    "list-style-image",
    "border-style",
    "animation-play-state",
    "mask-type",
    "-webkit-mask-box-image",
    "-webkit-perspective-origin-x",
    "-webkit-column-break-after",
    "-webkit-border-bottom-right-radius",
    "stroke-opacity",
    "border-top-style",
    "max-height",
    "border-inline-style",
    "-webkit-mask-box-image-slice",
    "-webkit-mask-box-image-repeat",
    "-webkit-border-bottom-left-radius",
    "overflow-x",
    "border-inline-end-style",
    "-webkit-box-decoration-break",
    "-webkit-flex",
    "-webkit-highlight",
    "border-inline-start-style",
    "-webkit-column-break-before",
    "-epub-text-emphasis",
    "text-overflow",
    "-webkit-text-emphasis",
    "-webkit-text-size-adjust",
    "text-combine-upright",
    "-webkit-border-after-width",
    "-epub-text-emphasis-color",
    "border-bottom-style",
    "-webkit-text-emphasis-color",
    "flex-shrink",
    "visibility",
    "-webkit-box-ordinal-group",
    "-webkit-tap-highlight-color",
    "-webkit-text-fill-color",
    "-webkit-flex-direction",
    "-epub-text-transform",
    "-webkit-text-emphasis-position",
    "outline-style",
    "overscroll-behavior-x",
    "-webkit-shape-image-threshold",
    "-webkit-column-rule-width",
    "border-block-style",
    "-webkit-flex-basis",
    "-webkit-border-before-width",
    "-webkit-box-reflect",
    "-webkit-transform-origin-x",
    "-webkit-font-feature-settings",
    "border-block-end-style",
    "table-layout",
    "border-block-start-style",
    "-webkit-opacity",
    "flex-flow",
    "font-style",
    "-webkit-flex-wrap",
    "fill-opacity",
    "-webkit-flex-grow",
    "font-display",
    "flood-opacity",
    "-webkit-box-shadow",
    "mask-source-type",
    "-webkit-mask-box-image-source",
    "-webkit-mask-box-image-outset",
    "-webkit-max-logical-width",
    "transform-style",
    "-webkit-transition-delay",
    "-webkit-transition-property",
    "-webkit-animation-delay",
    "stroke-dasharray",
    "border-right-style",
    "-webkit-text-stroke-width",
    "-webkit-animation-play-state",
    "border-left-style",
    "background-repeat-y",
    "-webkit-border-end-style",
    "-webkit-mask-repeat-y",
    "background-position-y",
    "-webkit-border-start-style",
    "-webkit-mask-position-y",
    "column-rule-style",
    "-webkit-max-logical-height",
    "hyphens",
    "-webkit-mask-box-image-width",
    "-webkit-flex-shrink",
    "-webkit-perspective-origin-y",
    "justify-content",
    "justify-items",
    "text-decoration-style",
    "overflow-y",
    "-webkit-text-decorations-in-effect",
    "-webkit-ruby-position",
    "-webkit-flex-flow",
    "font-family",
    "overscroll-behavior-y",
    "-webkit-transform-style",
    "-webkit-transform-origin-y",
    "backface-visibility",
    "-webkit-border-after-style",
    "-webkit-box-flex",
    "-webkit-column-rule-style",
    "-webkit-border-before-style",
    "justify-self",
    "-webkit-user-modify",
    "-webkit-justify-content",
    "list-style-type",
    "-webkit-backface-visibility",
    "text-justify",
    "-webkit-text-security",
    "-webkit-hyphenate-character",
    "-epub-text-emphasis-style",
    "-webkit-text-emphasis-style"
  };
#define CSSPropStringPool ((const char *) &CSSPropStringPool_contents)
const struct Property *
CSSPropertyNamesHash::findPropertyImpl (const char *str, size_t len)
{
  enum
    {
      TOTAL_KEYWORDS = 554,
      MIN_WORD_LENGTH = 1,
      MAX_WORD_LENGTH = 34,
      MIN_HASH_VALUE = 9,
      MAX_HASH_VALUE = 3587
    };

  static const struct Property property_word_list[] =
    {
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str0, static_cast<int>(CSSPropertyID::kR)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str1, static_cast<int>(CSSPropertyID::kD)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str2, static_cast<int>(CSSPropertyID::kSrc)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str3, static_cast<int>(CSSPropertyID::kTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str4, static_cast<int>(CSSPropertyID::kAll)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str5, static_cast<int>(CSSPropertyID::kClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str6, static_cast<int>(CSSPropertyID::kColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str7, static_cast<int>(CSSPropertyID::kInset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str8, static_cast<int>(CSSPropertyID::kClear)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str9, static_cast<int>(CSSPropertyID::kScale)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str10, static_cast<int>(CSSPropertyID::kGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str11, static_cast<int>(CSSPropertyID::kOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str12, static_cast<int>(CSSPropertyID::kPage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str13, static_cast<int>(CSSPropertyID::kRotate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str14, static_cast<int>(CSSPropertyID::kGrid)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str15, static_cast<int>(CSSPropertyID::kContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str16, static_cast<int>(CSSPropertyID::kContain)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str17, static_cast<int>(CSSPropertyID::kPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str18, static_cast<int>(CSSPropertyID::kIsolation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str19, static_cast<int>(CSSPropertyID::kStopColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str20, static_cast<int>(CSSPropertyID::kTranslate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str21, static_cast<int>(CSSPropertyID::kDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str22, static_cast<int>(CSSPropertyID::kTransition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str23, static_cast<int>(CSSPropertyID::kSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str24, static_cast<int>(CSSPropertyID::kCaretColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str25, static_cast<int>(CSSPropertyID::kMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str26, static_cast<int>(CSSPropertyID::kOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str27, static_cast<int>(CSSPropertyID::kPadding)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str28, static_cast<int>(CSSPropertyID::kInsetInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str29, static_cast<int>(CSSPropertyID::kPaintOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str30, static_cast<int>(CSSPropertyID::kGridArea)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str31, static_cast<int>(CSSPropertyID::kResize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str32, static_cast<int>(CSSPropertyID::kAnimation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str33, static_cast<int>(CSSPropertyID::kGridGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str34, static_cast<int>(CSSPropertyID::kPlaceContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str35, static_cast<int>(CSSPropertyID::kCaptionSide)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str36, static_cast<int>(CSSPropertyID::kZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str37, static_cast<int>(CSSPropertyID::kPlaceItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str38, static_cast<int>(CSSPropertyID::kMarginTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str39, static_cast<int>(CSSPropertyID::kAlignContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str40, static_cast<int>(CSSPropertyID::kPaddingTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str41, static_cast<int>(CSSPropertyID::kScrollSnapStop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str42, static_cast<int>(CSSPropertyID::kAlignItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str43, static_cast<int>(CSSPropertyID::kLetterSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str44, static_cast<int>(CSSPropertyID::kInsetInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str45, static_cast<int>(CSSPropertyID::kColorRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str46, static_cast<int>(CSSPropertyID::kBorder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str47, static_cast<int>(CSSPropertyID::kInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str48, static_cast<int>(CSSPropertyID::kScrollMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str49, static_cast<int>(CSSPropertyID::kMarginInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str50, static_cast<int>(CSSPropertyID::kScrollPadding)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str51, static_cast<int>(CSSPropertyID::kSpeak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str52, static_cast<int>(CSSPropertyID::kPaddingInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str53, static_cast<int>(CSSPropertyID::kInsetInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str54, static_cast<int>(CSSPropertyID::kStroke)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str55, static_cast<int>(CSSPropertyID::kColorInterpolation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str56, static_cast<int>(CSSPropertyID::kGridTemplate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str57, static_cast<int>(CSSPropertyID::kScrollSnapAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str58, static_cast<int>(CSSPropertyID::kBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str59, static_cast<int>(CSSPropertyID::kMask)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str60, static_cast<int>(CSSPropertyID::kMinZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str61, static_cast<int>(CSSPropertyID::kAnimationName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str62, static_cast<int>(CSSPropertyID::kBorderTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str63, static_cast<int>(CSSPropertyID::kScrollMarginTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str64, static_cast<int>(CSSPropertyID::kMarker)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str65, static_cast<int>(CSSPropertyID::kScrollPaddingTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str66, static_cast<int>(CSSPropertyID::kImageOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str67, static_cast<int>(CSSPropertyID::kImageRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str68, static_cast<int>(CSSPropertyID::kMarginInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str69, static_cast<int>(CSSPropertyID::kBorderColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str70, static_cast<int>(CSSPropertyID::kPaddingInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str71, static_cast<int>(CSSPropertyID::kAnimationDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str72, static_cast<int>(CSSPropertyID::kBorderInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str73, static_cast<int>(CSSPropertyID::kMinInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str74, static_cast<int>(CSSPropertyID::kMarginInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str75, static_cast<int>(CSSPropertyID::kScrollMarginInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str76, static_cast<int>(CSSPropertyID::kPaddingInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str77, static_cast<int>(CSSPropertyID::kScrollPaddingInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str78, static_cast<int>(CSSPropertyID::kObjectPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str79, static_cast<int>(CSSPropertyID::kGridTemplateAreas)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str80, static_cast<int>(CSSPropertyID::kTabSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str81, static_cast<int>(CSSPropertyID::kBorderCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str82, static_cast<int>(CSSPropertyID::kMarkerEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str83, static_cast<int>(CSSPropertyID::kStrokeLinecap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str84, static_cast<int>(CSSPropertyID::kBorderTopColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str85, static_cast<int>(CSSPropertyID::kStrokeLinejoin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str86, static_cast<int>(CSSPropertyID::kBorderSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str87, static_cast<int>(CSSPropertyID::kMarkerStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str88, static_cast<int>(CSSPropertyID::kBorderImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str89, static_cast<int>(CSSPropertyID::kBorderInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str90, static_cast<int>(CSSPropertyID::kScrollMarginInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str91, static_cast<int>(CSSPropertyID::kMarkerMid)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str92, static_cast<int>(CSSPropertyID::kScrollPaddingInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str93, static_cast<int>(CSSPropertyID::kBorderInlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str94, static_cast<int>(CSSPropertyID::kBorderInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str95, static_cast<int>(CSSPropertyID::kScrollMarginInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str96, static_cast<int>(CSSPropertyID::kRowGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str97, static_cast<int>(CSSPropertyID::kScrollPaddingInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str98, static_cast<int>(CSSPropertyID::kMarginBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str99, static_cast<int>(CSSPropertyID::kPaddingBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str100, static_cast<int>(CSSPropertyID::kDominantBaseline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str101, static_cast<int>(CSSPropertyID::kGridRow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str102, static_cast<int>(CSSPropertyID::kLineBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str103, static_cast<int>(CSSPropertyID::kAlignmentBaseline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str104, static_cast<int>(CSSPropertyID::kBorderImageSlice)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str105, static_cast<int>(CSSPropertyID::kInsetBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str106, static_cast<int>(CSSPropertyID::kBorderInlineEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str107, static_cast<int>(CSSPropertyID::kStrokeMiterlimit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str108, static_cast<int>(CSSPropertyID::kPerspective)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str109, static_cast<int>(CSSPropertyID::kBorderImageRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str110, static_cast<int>(CSSPropertyID::kBorderInlineStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str111, static_cast<int>(CSSPropertyID::kBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str112, static_cast<int>(CSSPropertyID::kWordSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str113, static_cast<int>(CSSPropertyID::kGridRowEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str114, static_cast<int>(CSSPropertyID::kBorderBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str115, static_cast<int>(CSSPropertyID::kScrollMarginBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str116, static_cast<int>(CSSPropertyID::kPointerEvents)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str117, static_cast<int>(CSSPropertyID::kScrollPaddingBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str118, static_cast<int>(CSSPropertyID::kGridRowGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str119, static_cast<int>(CSSPropertyID::kGridRowStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str120, static_cast<int>(CSSPropertyID::kInsetBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str121, static_cast<int>(CSSPropertyID::kWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str122, static_cast<int>(CSSPropertyID::kBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str123, static_cast<int>(CSSPropertyID::kMarginBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str124, static_cast<int>(CSSPropertyID::kPaddingBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str125, static_cast<int>(CSSPropertyID::kInsetBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str126, static_cast<int>(CSSPropertyID::kVerticalAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str127, static_cast<int>(CSSPropertyID::kCursor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str128, static_cast<int>(CSSPropertyID::kQuotes)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str129, static_cast<int>(CSSPropertyID::kOutline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str130, static_cast<int>(CSSPropertyID::kBorderBottomColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str131, static_cast<int>(CSSPropertyID::kPageBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str132, static_cast<int>(CSSPropertyID::kClipRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str133, static_cast<int>(CSSPropertyID::kPerspectiveOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str134, static_cast<int>(CSSPropertyID::kColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str135, static_cast<int>(CSSPropertyID::kMarginBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str136, static_cast<int>(CSSPropertyID::kPaddingBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str137, static_cast<int>(CSSPropertyID::kGridTemplateRows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str138, static_cast<int>(CSSPropertyID::kUserSelect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str139, static_cast<int>(CSSPropertyID::kBorderBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str140, static_cast<int>(CSSPropertyID::kMinBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str141, static_cast<int>(CSSPropertyID::kMarginBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str142, static_cast<int>(CSSPropertyID::kScrollMarginBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str143, static_cast<int>(CSSPropertyID::kPaddingBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str144, static_cast<int>(CSSPropertyID::kScrollPaddingBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str145, static_cast<int>(CSSPropertyID::kOutlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str146, static_cast<int>(CSSPropertyID::kCounterReset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str147, static_cast<int>(CSSPropertyID::kColumnSpan)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str148, static_cast<int>(CSSPropertyID::kRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str149, static_cast<int>(CSSPropertyID::kOrphans)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str150, static_cast<int>(CSSPropertyID::kColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str151, static_cast<int>(CSSPropertyID::kWidows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str152, static_cast<int>(CSSPropertyID::kUnicodeRange)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str153, static_cast<int>(CSSPropertyID::kBorderBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str154, static_cast<int>(CSSPropertyID::kScrollMarginBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str155, static_cast<int>(CSSPropertyID::kGridColumn)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str156, static_cast<int>(CSSPropertyID::kScrollPaddingBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str157, static_cast<int>(CSSPropertyID::kBorderBlockColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str158, static_cast<int>(CSSPropertyID::kClipPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str159, static_cast<int>(CSSPropertyID::kBorderBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str160, static_cast<int>(CSSPropertyID::kScrollMarginBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str161, static_cast<int>(CSSPropertyID::kUserZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str162, static_cast<int>(CSSPropertyID::kScrollPaddingBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str163, static_cast<int>(CSSPropertyID::kAliasWordWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str164, static_cast<int>(CSSPropertyID::kCounterIncrement)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str165, static_cast<int>(CSSPropertyID::kFill)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str166, static_cast<int>(CSSPropertyID::kLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str167, static_cast<int>(CSSPropertyID::kFont)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str168, static_cast<int>(CSSPropertyID::kTransitionDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str169, static_cast<int>(CSSPropertyID::kWordBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str170, static_cast<int>(CSSPropertyID::kGridColumnEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str171, static_cast<int>(CSSPropertyID::kBorderBlockEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str172, static_cast<int>(CSSPropertyID::kFloat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str173, static_cast<int>(CSSPropertyID::kFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str174, static_cast<int>(CSSPropertyID::kGridColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str175, static_cast<int>(CSSPropertyID::kGridColumnStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str176, static_cast<int>(CSSPropertyID::kAnimationDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str177, static_cast<int>(CSSPropertyID::kBorderBlockStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str178, static_cast<int>(CSSPropertyID::kAliasWebkitOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str179, static_cast<int>(CSSPropertyID::kWebkitLocale)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str180, static_cast<int>(CSSPropertyID::kUnicodeBidi)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str181, static_cast<int>(CSSPropertyID::kShapeMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str182, static_cast<int>(CSSPropertyID::kLightingColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str183, static_cast<int>(CSSPropertyID::kShapeRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str184, static_cast<int>(CSSPropertyID::kBorderRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str185, static_cast<int>(CSSPropertyID::kMarginRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str186, static_cast<int>(CSSPropertyID::kPlaceSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str187, static_cast<int>(CSSPropertyID::kPaddingRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str188, static_cast<int>(CSSPropertyID::kFloodColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str189, static_cast<int>(CSSPropertyID::kAliasWebkitTransition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str190, static_cast<int>(CSSPropertyID::kAlignSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str191, static_cast<int>(CSSPropertyID::kTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str192, static_cast<int>(CSSPropertyID::kWebkitAppearance)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str193, static_cast<int>(CSSPropertyID::kAnimationIterationCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str194, static_cast<int>(CSSPropertyID::kGridTemplateColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str195, static_cast<int>(CSSPropertyID::kScrollCustomization)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str196, static_cast<int>(CSSPropertyID::kAliasEpubCaptionSide)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str197, static_cast<int>(CSSPropertyID::kWebkitAppRegion)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str198, static_cast<int>(CSSPropertyID::kAliasWebkitAnimation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str199, static_cast<int>(CSSPropertyID::kWebkitLineClamp)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str200, static_cast<int>(CSSPropertyID::kFontSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str201, static_cast<int>(CSSPropertyID::kWebkitRtlOrdering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str202, static_cast<int>(CSSPropertyID::kMarginLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str203, static_cast<int>(CSSPropertyID::kBorderRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str204, static_cast<int>(CSSPropertyID::kPaddingLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str205, static_cast<int>(CSSPropertyID::kScrollMarginRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str206, static_cast<int>(CSSPropertyID::kAliasWebkitAlignContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str207, static_cast<int>(CSSPropertyID::kScrollPaddingRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str208, static_cast<int>(CSSPropertyID::kAliasWebkitMarginEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str209, static_cast<int>(CSSPropertyID::kAliasWebkitAlignItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str210, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str211, static_cast<int>(CSSPropertyID::kBorderImageSource)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str212, static_cast<int>(CSSPropertyID::kBorderImageOutset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str213, static_cast<int>(CSSPropertyID::kAliasWebkitMarginStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str214, static_cast<int>(CSSPropertyID::kWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str215, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str216, static_cast<int>(CSSPropertyID::kBackground)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str217, static_cast<int>(CSSPropertyID::kObjectFit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str218, static_cast<int>(CSSPropertyID::kTransformOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str219, static_cast<int>(CSSPropertyID::kWebkitMask)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str220, static_cast<int>(CSSPropertyID::kWebkitMarginCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str221, static_cast<int>(CSSPropertyID::kBorderRightColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str222, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str223, static_cast<int>(CSSPropertyID::kBorderLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str224, static_cast<int>(CSSPropertyID::kGridAutoRows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str225, static_cast<int>(CSSPropertyID::kScrollMarginLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str226, static_cast<int>(CSSPropertyID::kScrollPaddingLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str227, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str228, static_cast<int>(CSSPropertyID::kWhiteSpace)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str229, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str230, static_cast<int>(CSSPropertyID::kBackgroundClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str231, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str232, static_cast<int>(CSSPropertyID::kWebkitMarginTopCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str233, static_cast<int>(CSSPropertyID::kBackgroundColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str234, static_cast<int>(CSSPropertyID::kMinWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str235, static_cast<int>(CSSPropertyID::kWillChange)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str236, static_cast<int>(CSSPropertyID::kAnimationFillMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str237, static_cast<int>(CSSPropertyID::kWebkitMaskClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str238, static_cast<int>(CSSPropertyID::kFontKerning)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str239, static_cast<int>(CSSPropertyID::kColorInterpolationFilters)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str240, static_cast<int>(CSSPropertyID::kBackgroundRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str241, static_cast<int>(CSSPropertyID::kBorderLeftColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str242, static_cast<int>(CSSPropertyID::kWebkitMaskRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str243, static_cast<int>(CSSPropertyID::kBackgroundOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str244, static_cast<int>(CSSPropertyID::kBackgroundPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str245, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str246, static_cast<int>(CSSPropertyID::kWebkitBorderImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str247, static_cast<int>(CSSPropertyID::kWebkitMaskOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str248, static_cast<int>(CSSPropertyID::kWebkitMaskPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str249, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str250, static_cast<int>(CSSPropertyID::kBackgroundImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str251, static_cast<int>(CSSPropertyID::kBackgroundSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str252, static_cast<int>(CSSPropertyID::kColumnRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str253, static_cast<int>(CSSPropertyID::kWebkitMaskImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str254, static_cast<int>(CSSPropertyID::kWebkitMaskSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str255, static_cast<int>(CSSPropertyID::kColumnCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str256, static_cast<int>(CSSPropertyID::kWebkitMaskComposite)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str257, static_cast<int>(CSSPropertyID::kX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str258, static_cast<int>(CSSPropertyID::kWebkitLineBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str259, static_cast<int>(CSSPropertyID::kBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str260, static_cast<int>(CSSPropertyID::kRx)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str261, static_cast<int>(CSSPropertyID::kCx)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str262, static_cast<int>(CSSPropertyID::kAliasWebkitPerspective)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str263, static_cast<int>(CSSPropertyID::kBorderWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str264, static_cast<int>(CSSPropertyID::kFontVariant)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str265, static_cast<int>(CSSPropertyID::kColumnRuleColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str266, static_cast<int>(CSSPropertyID::kStrokeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str267, static_cast<int>(CSSPropertyID::kTouchAction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str268, static_cast<int>(CSSPropertyID::kAliasEpubWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str269, static_cast<int>(CSSPropertyID::kBackdropFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str270, static_cast<int>(CSSPropertyID::kShapeOutside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str271, static_cast<int>(CSSPropertyID::kWebkitWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str272, static_cast<int>(CSSPropertyID::kScrollBehavior)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str273, static_cast<int>(CSSPropertyID::kBorderTopWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str274, static_cast<int>(CSSPropertyID::kGridAutoColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str275, static_cast<int>(CSSPropertyID::kHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str276, static_cast<int>(CSSPropertyID::kWebkitMarginBottomCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str277, static_cast<int>(CSSPropertyID::kPageBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str278, static_cast<int>(CSSPropertyID::kFontVariantCaps)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str279, static_cast<int>(CSSPropertyID::kFillRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str280, static_cast<int>(CSSPropertyID::kBorderInlineWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str281, static_cast<int>(CSSPropertyID::kAliasWebkitPerspectiveOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str282, static_cast<int>(CSSPropertyID::kTextIndent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str283, static_cast<int>(CSSPropertyID::kTextAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str284, static_cast<int>(CSSPropertyID::kBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str285, static_cast<int>(CSSPropertyID::kBackgroundBlendMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str286, static_cast<int>(CSSPropertyID::kAliasWebkitColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str287, static_cast<int>(CSSPropertyID::kLineHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str288, static_cast<int>(CSSPropertyID::kAliasWebkitUserSelect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str289, static_cast<int>(CSSPropertyID::kZIndex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str290, static_cast<int>(CSSPropertyID::kBorderImageWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str291, static_cast<int>(CSSPropertyID::kMinHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str292, static_cast<int>(CSSPropertyID::kWebkitUserDrag)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str293, static_cast<int>(CSSPropertyID::kColumnFill)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str294, static_cast<int>(CSSPropertyID::kBorderInlineEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str295, static_cast<int>(CSSPropertyID::kFontVariantEastAsian)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str296, static_cast<int>(CSSPropertyID::kTextDecoration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str297, static_cast<int>(CSSPropertyID::kTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str298, static_cast<int>(CSSPropertyID::kTextRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str299, static_cast<int>(CSSPropertyID::kFontVariationSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str300, static_cast<int>(CSSPropertyID::kBorderInlineStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str301, static_cast<int>(CSSPropertyID::kAliasWebkitColumnSpan)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str302, static_cast<int>(CSSPropertyID::kTextAlignLast)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str303, static_cast<int>(CSSPropertyID::kLineHeightStep)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str304, static_cast<int>(CSSPropertyID::kAliasWebkitColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str305, static_cast<int>(CSSPropertyID::kPageBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str306, static_cast<int>(CSSPropertyID::kAliasWebkitClipPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str307, static_cast<int>(CSSPropertyID::kOverflow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str308, static_cast<int>(CSSPropertyID::kMaxZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str309, static_cast<int>(CSSPropertyID::kTextDecorationLine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str310, static_cast<int>(CSSPropertyID::kFontStretch)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str311, static_cast<int>(CSSPropertyID::kTextDecorationColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str312, static_cast<int>(CSSPropertyID::kWebkitPrintColorAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str313, static_cast<int>(CSSPropertyID::kAliasEpubWordBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str314, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str315, static_cast<int>(CSSPropertyID::kBorderBottomWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str316, static_cast<int>(CSSPropertyID::kOffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str317, static_cast<int>(CSSPropertyID::kMaxInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str318, static_cast<int>(CSSPropertyID::kViewportFit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str319, static_cast<int>(CSSPropertyID::kAliasWebkitFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str320, static_cast<int>(CSSPropertyID::kFontSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str321, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str322, static_cast<int>(CSSPropertyID::kAliasWebkitShapeMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str323, static_cast<int>(CSSPropertyID::kOutlineWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str324, static_cast<int>(CSSPropertyID::kAliasWebkitBorderRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str325, static_cast<int>(CSSPropertyID::kWebkitBorderVerticalSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str326, static_cast<int>(CSSPropertyID::kBoxSizing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str327, static_cast<int>(CSSPropertyID::kBorderTopRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str328, static_cast<int>(CSSPropertyID::kColumnWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str329, static_cast<int>(CSSPropertyID::kOffsetRotate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str330, static_cast<int>(CSSPropertyID::kAliasWebkitAlignSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str331, static_cast<int>(CSSPropertyID::kAliasWebkitTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str332, static_cast<int>(CSSPropertyID::kMixBlendMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str333, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationIterationCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str334, static_cast<int>(CSSPropertyID::kBorderBlockWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str335, static_cast<int>(CSSPropertyID::kTransitionTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str336, static_cast<int>(CSSPropertyID::kOffsetPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str337, static_cast<int>(CSSPropertyID::kBaselineShift)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str338, static_cast<int>(CSSPropertyID::kOffsetDistance)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str339, static_cast<int>(CSSPropertyID::kAnimationTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str340, static_cast<int>(CSSPropertyID::kOverscrollBehavior)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str341, static_cast<int>(CSSPropertyID::kBorderTopLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str342, static_cast<int>(CSSPropertyID::kAliasWebkitMarginAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str343, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str344, static_cast<int>(CSSPropertyID::kBorderBlockEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str345, static_cast<int>(CSSPropertyID::kBorderBlockStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str346, static_cast<int>(CSSPropertyID::kAliasWebkitTransformOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str347, static_cast<int>(CSSPropertyID::kGridAutoFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str348, static_cast<int>(CSSPropertyID::kWebkitFontSizeDelta)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str349, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str350, static_cast<int>(CSSPropertyID::kFontWeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str351, static_cast<int>(CSSPropertyID::kBackgroundAttachment)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str352, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str353, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationFillMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str354, static_cast<int>(CSSPropertyID::kWebkitMarginAfterCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str355, static_cast<int>(CSSPropertyID::kBorderBottomRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str356, static_cast<int>(CSSPropertyID::kMaxBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str357, static_cast<int>(CSSPropertyID::kOverflowWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str358, static_cast<int>(CSSPropertyID::kAliasWebkitMarginBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str359, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str360, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str361, static_cast<int>(CSSPropertyID::kAliasWebkitLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str362, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str363, static_cast<int>(CSSPropertyID::kWebkitTransformOriginZ)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str364, static_cast<int>(CSSPropertyID::kWebkitColumnBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str365, static_cast<int>(CSSPropertyID::kFontVariantNumeric)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str366, static_cast<int>(CSSPropertyID::kTextDecorationSkipInk)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str367, static_cast<int>(CSSPropertyID::kFontVariantLigatures)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str368, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str369, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str370, static_cast<int>(CSSPropertyID::kBorderBottomLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str371, static_cast<int>(CSSPropertyID::kAliasWebkitColumnCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str372, static_cast<int>(CSSPropertyID::kTextAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str373, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str374, static_cast<int>(CSSPropertyID::kBorderRightWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str375, static_cast<int>(CSSPropertyID::kAliasWebkitMinLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str376, static_cast<int>(CSSPropertyID::kVectorEffect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str377, static_cast<int>(CSSPropertyID::kFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str378, static_cast<int>(CSSPropertyID::kWebkitBorderHorizontalSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str379, static_cast<int>(CSSPropertyID::kWebkitMarginBeforeCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str380, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str381, static_cast<int>(CSSPropertyID::kTextUnderlinePosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str382, static_cast<int>(CSSPropertyID::kTextSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str383, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str384, static_cast<int>(CSSPropertyID::kAliasWebkitShapeOutside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str385, static_cast<int>(CSSPropertyID::kBorderLeftWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str386, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str387, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str388, static_cast<int>(CSSPropertyID::kFlexDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str389, static_cast<int>(CSSPropertyID::kOutlineOffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str390, static_cast<int>(CSSPropertyID::kAliasEpubTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str391, static_cast<int>(CSSPropertyID::kTextTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str392, static_cast<int>(CSSPropertyID::kWebkitTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str393, static_cast<int>(CSSPropertyID::kShapeImageThreshold)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str394, static_cast<int>(CSSPropertyID::kColumnRuleWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str395, static_cast<int>(CSSPropertyID::kOverflowAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str396, static_cast<int>(CSSPropertyID::kAliasWebkitLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str397, static_cast<int>(CSSPropertyID::kOffsetPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str398, static_cast<int>(CSSPropertyID::kFlexBasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str399, static_cast<int>(CSSPropertyID::kWebkitBoxOrient)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str400, static_cast<int>(CSSPropertyID::kY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str401, static_cast<int>(CSSPropertyID::kOffsetAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str402, static_cast<int>(CSSPropertyID::kWebkitBoxAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str403, static_cast<int>(CSSPropertyID::kRy)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str404, static_cast<int>(CSSPropertyID::kCy)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str405, static_cast<int>(CSSPropertyID::kWebkitTextStroke)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str406, static_cast<int>(CSSPropertyID::kFontFeatureSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str407, static_cast<int>(CSSPropertyID::kTextShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str408, static_cast<int>(CSSPropertyID::kAliasEpubTextCombine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str409, static_cast<int>(CSSPropertyID::kWebkitBoxDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str410, static_cast<int>(CSSPropertyID::kMaxWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str411, static_cast<int>(CSSPropertyID::kAliasWebkitMinLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str412, static_cast<int>(CSSPropertyID::kTransformBox)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str413, static_cast<int>(CSSPropertyID::kWebkitTextCombine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str414, static_cast<int>(CSSPropertyID::kOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str415, static_cast<int>(CSSPropertyID::kBackgroundRepeatX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str416, static_cast<int>(CSSPropertyID::kWebkitFontSmoothing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str417, static_cast<int>(CSSPropertyID::kDisplay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str418, static_cast<int>(CSSPropertyID::kWebkitMaskRepeatX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str419, static_cast<int>(CSSPropertyID::kWebkitTextStrokeColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str420, static_cast<int>(CSSPropertyID::kAliasWebkitBoxSizing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str421, static_cast<int>(CSSPropertyID::kBackgroundPositionX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str422, static_cast<int>(CSSPropertyID::kFlexWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str423, static_cast<int>(CSSPropertyID::kListStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str424, static_cast<int>(CSSPropertyID::kAliasWebkitBorderTopRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str425, static_cast<int>(CSSPropertyID::kAliasWebkitColumnWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str426, static_cast<int>(CSSPropertyID::kWebkitMaskPositionX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str427, static_cast<int>(CSSPropertyID::kFlexGrow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str428, static_cast<int>(CSSPropertyID::kWebkitBoxPack)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str429, static_cast<int>(CSSPropertyID::kStopOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str430, static_cast<int>(CSSPropertyID::kBufferedRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str431, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str432, static_cast<int>(CSSPropertyID::kBoxShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str433, static_cast<int>(CSSPropertyID::kEmptyCells)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str434, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str435, static_cast<int>(CSSPropertyID::kScrollSnapType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str436, static_cast<int>(CSSPropertyID::kAliasWebkitBorderTopLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str437, static_cast<int>(CSSPropertyID::kTransitionDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str438, static_cast<int>(CSSPropertyID::kListStylePosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str439, static_cast<int>(CSSPropertyID::kStrokeDashoffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str440, static_cast<int>(CSSPropertyID::kTransitionProperty)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str441, static_cast<int>(CSSPropertyID::kAnimationDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str442, static_cast<int>(CSSPropertyID::kListStyleImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str443, static_cast<int>(CSSPropertyID::kBorderStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str444, static_cast<int>(CSSPropertyID::kAnimationPlayState)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str445, static_cast<int>(CSSPropertyID::kMaskType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str446, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str447, static_cast<int>(CSSPropertyID::kWebkitPerspectiveOriginX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str448, static_cast<int>(CSSPropertyID::kWebkitColumnBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str449, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBottomRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str450, static_cast<int>(CSSPropertyID::kStrokeOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str451, static_cast<int>(CSSPropertyID::kBorderTopStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str452, static_cast<int>(CSSPropertyID::kMaxHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str453, static_cast<int>(CSSPropertyID::kBorderInlineStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str454, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageSlice)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str455, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str456, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBottomLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str457, static_cast<int>(CSSPropertyID::kOverflowX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str458, static_cast<int>(CSSPropertyID::kBorderInlineEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str459, static_cast<int>(CSSPropertyID::kWebkitBoxDecorationBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str460, static_cast<int>(CSSPropertyID::kAliasWebkitFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str461, static_cast<int>(CSSPropertyID::kWebkitHighlight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str462, static_cast<int>(CSSPropertyID::kBorderInlineStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str463, static_cast<int>(CSSPropertyID::kWebkitColumnBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str464, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str465, static_cast<int>(CSSPropertyID::kTextOverflow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str466, static_cast<int>(CSSPropertyID::kWebkitTextEmphasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str467, static_cast<int>(CSSPropertyID::kAliasWebkitTextSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str468, static_cast<int>(CSSPropertyID::kTextCombineUpright)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str469, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str470, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str471, static_cast<int>(CSSPropertyID::kBorderBottomStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str472, static_cast<int>(CSSPropertyID::kWebkitTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str473, static_cast<int>(CSSPropertyID::kFlexShrink)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str474, static_cast<int>(CSSPropertyID::kVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str475, static_cast<int>(CSSPropertyID::kWebkitBoxOrdinalGroup)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str476, static_cast<int>(CSSPropertyID::kWebkitTapHighlightColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str477, static_cast<int>(CSSPropertyID::kWebkitTextFillColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str478, static_cast<int>(CSSPropertyID::kAliasWebkitFlexDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str479, static_cast<int>(CSSPropertyID::kAliasEpubTextTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str480, static_cast<int>(CSSPropertyID::kWebkitTextEmphasisPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str481, static_cast<int>(CSSPropertyID::kOutlineStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str482, static_cast<int>(CSSPropertyID::kOverscrollBehaviorX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str483, static_cast<int>(CSSPropertyID::kAliasWebkitShapeImageThreshold)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str484, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str485, static_cast<int>(CSSPropertyID::kBorderBlockStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str486, static_cast<int>(CSSPropertyID::kAliasWebkitFlexBasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str487, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str488, static_cast<int>(CSSPropertyID::kWebkitBoxReflect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str489, static_cast<int>(CSSPropertyID::kWebkitTransformOriginX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str490, static_cast<int>(CSSPropertyID::kAliasWebkitFontFeatureSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str491, static_cast<int>(CSSPropertyID::kBorderBlockEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str492, static_cast<int>(CSSPropertyID::kTableLayout)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str493, static_cast<int>(CSSPropertyID::kBorderBlockStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str494, static_cast<int>(CSSPropertyID::kAliasWebkitOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str495, static_cast<int>(CSSPropertyID::kFlexFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str496, static_cast<int>(CSSPropertyID::kFontStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str497, static_cast<int>(CSSPropertyID::kAliasWebkitFlexWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str498, static_cast<int>(CSSPropertyID::kFillOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str499, static_cast<int>(CSSPropertyID::kAliasWebkitFlexGrow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str500, static_cast<int>(CSSPropertyID::kFontDisplay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str501, static_cast<int>(CSSPropertyID::kFloodOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str502, static_cast<int>(CSSPropertyID::kAliasWebkitBoxShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str503, static_cast<int>(CSSPropertyID::kMaskSourceType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str504, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageSource)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str505, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageOutset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str506, static_cast<int>(CSSPropertyID::kAliasWebkitMaxLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str507, static_cast<int>(CSSPropertyID::kTransformStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str508, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str509, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionProperty)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str510, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str511, static_cast<int>(CSSPropertyID::kStrokeDasharray)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str512, static_cast<int>(CSSPropertyID::kBorderRightStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str513, static_cast<int>(CSSPropertyID::kWebkitTextStrokeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str514, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationPlayState)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str515, static_cast<int>(CSSPropertyID::kBorderLeftStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str516, static_cast<int>(CSSPropertyID::kBackgroundRepeatY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str517, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str518, static_cast<int>(CSSPropertyID::kWebkitMaskRepeatY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str519, static_cast<int>(CSSPropertyID::kBackgroundPositionY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str520, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str521, static_cast<int>(CSSPropertyID::kWebkitMaskPositionY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str522, static_cast<int>(CSSPropertyID::kColumnRuleStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str523, static_cast<int>(CSSPropertyID::kAliasWebkitMaxLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str524, static_cast<int>(CSSPropertyID::kHyphens)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str525, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str526, static_cast<int>(CSSPropertyID::kAliasWebkitFlexShrink)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str527, static_cast<int>(CSSPropertyID::kWebkitPerspectiveOriginY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str528, static_cast<int>(CSSPropertyID::kJustifyContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str529, static_cast<int>(CSSPropertyID::kJustifyItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str530, static_cast<int>(CSSPropertyID::kTextDecorationStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str531, static_cast<int>(CSSPropertyID::kOverflowY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str532, static_cast<int>(CSSPropertyID::kWebkitTextDecorationsInEffect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str533, static_cast<int>(CSSPropertyID::kWebkitRubyPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str534, static_cast<int>(CSSPropertyID::kAliasWebkitFlexFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str535, static_cast<int>(CSSPropertyID::kFontFamily)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str536, static_cast<int>(CSSPropertyID::kOverscrollBehaviorY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str537, static_cast<int>(CSSPropertyID::kAliasWebkitTransformStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str538, static_cast<int>(CSSPropertyID::kWebkitTransformOriginY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str539, static_cast<int>(CSSPropertyID::kBackfaceVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str540, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str541, static_cast<int>(CSSPropertyID::kWebkitBoxFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str542, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str543, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str544, static_cast<int>(CSSPropertyID::kJustifySelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str545, static_cast<int>(CSSPropertyID::kWebkitUserModify)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str546, static_cast<int>(CSSPropertyID::kAliasWebkitJustifyContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str547, static_cast<int>(CSSPropertyID::kListStyleType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str548, static_cast<int>(CSSPropertyID::kAliasWebkitBackfaceVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str549, static_cast<int>(CSSPropertyID::kTextJustify)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str550, static_cast<int>(CSSPropertyID::kWebkitTextSecurity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str551, static_cast<int>(CSSPropertyID::kWebkitHyphenateCharacter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str552, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasisStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str553, static_cast<int>(CSSPropertyID::kWebkitTextEmphasisStyle)}
    };

  static const short lookup[] =
    {
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   0,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   2,
        3,  -1,   4,  -1,  -1,  -1,  -1,  -1,  -1,   5,
       -1,  -1,  -1,  -1,  -1,  -1,   6,  -1,  -1,  -1,
        7,   8,   9,  10,  -1,  -1,  11,  -1,  -1,  -1,
       -1,  -1,  12,  13,  -1,  -1,  -1,  -1,  14,  -1,
       15,  -1,  -1,  -1,  16,  -1,  -1,  -1,  -1,  17,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  18,  -1,  -1,  19,  -1,  20,  21,  -1,
       -1,  -1,  -1,  -1,  22,  -1,  23,  -1,  24,  -1,
       25,  -1,  26,  27,  -1,  -1,  -1,  28,  -1,  -1,
       29,  -1,  -1,  30,  31,  -1,  32,  -1,  -1,  -1,
       33,  34,  35,  36,  -1,  -1,  -1,  -1,  -1,  37,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  38,
       -1,  39,  40,  -1,  -1,  -1,  -1,  -1,  41,  42,
       43,  -1,  -1,  -1,  -1,  44,  -1,  -1,  -1,  -1,
       45,  -1,  46,  47,  -1,  48,  -1,  49,  50,  51,
       52,  53,  -1,  -1,  54,  -1,  55,  -1,  56,  -1,
       57,  -1,  -1,  -1,  58,  -1,  -1,  -1,  59,  -1,
       60,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,
       -1,  62,  -1,  -1,  63,  64,  -1,  65,  -1,  -1,
       -1,  66,  -1,  -1,  67,  68,  -1,  69,  70,  -1,
       -1,  -1,  -1,  71,  -1,  -1,  -1,  -1,  -1,  72,
       73,  74,  75,  -1,  76,  77,  -1,  -1,  -1,  -1,
       -1,  -1,  78,  79,  -1,  -1,  80,  -1,  -1,  -1,
       -1,  81,  -1,  82,  -1,  83,  84,  -1,  -1,  85,
       -1,  -1,  -1,  -1,  86,  -1,  -1,  -1,  -1,  87,
       -1,  88,  -1,  -1,  -1,  -1,  -1,  89,  -1,  -1,
       90,  -1,  91,  92,  93,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  94,  -1,  -1,  95,  96,  -1,  97,
       -1,  -1,  -1,  98,  -1,  -1,  99,  -1, 100,  -1,
       -1,  -1, 101,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 102,  -1,  -1,  -1,  -1, 103,  -1, 104, 105,
       -1,  -1, 106,  -1,  -1,  -1,  -1,  -1, 107,  -1,
      108,  -1, 109,  -1,  -1,  -1,  -1,  -1, 110,  -1,
       -1,  -1, 111,  -1,  -1,  -1,  -1, 112,  -1,  -1,
      113,  -1,  -1,  -1,  -1, 114,  -1,  -1, 115, 116,
       -1, 117,  -1,  -1, 118,  -1, 119, 120,  -1,  -1,
       -1, 121,  -1,  -1,  -1, 122,  -1,  -1,  -1, 123,
       -1,  -1, 124, 125,  -1,  -1, 126, 127, 128,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 129,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      130,  -1,  -1, 131,  -1, 132, 133,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 134, 135,  -1,  -1,
      136,  -1, 137,  -1,  -1, 138,  -1,  -1,  -1,  -1,
       -1, 139, 140, 141, 142,  -1, 143, 144,  -1,  -1,
       -1,  -1,  -1, 145,  -1, 146,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 147,
       -1,  -1,  -1, 148,  -1,  -1, 149,  -1, 150,  -1,
       -1,  -1,  -1, 151,  -1,  -1,  -1,  -1, 152, 153,
       -1,  -1, 154, 155,  -1, 156, 157, 158,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 159,  -1,  -1, 160,  -1,
      161, 162,  -1,  -1, 163,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 164,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 165, 166, 167,  -1, 168,  -1, 169,  -1,
       -1, 170,  -1,  -1, 171,  -1,  -1, 172,  -1,  -1,
       -1,  -1, 173,  -1,  -1, 174,  -1, 175, 176,  -1,
      177,  -1,  -1, 178,  -1,  -1,  -1, 179,  -1,  -1,
       -1,  -1,  -1, 180,  -1,  -1, 181, 182,  -1,  -1,
       -1, 183,  -1,  -1, 184,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 185, 186,  -1, 187,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 188,  -1,  -1,  -1,
       -1, 189,  -1, 190, 191,  -1, 192, 193,  -1,  -1,
       -1,  -1,  -1, 194, 195, 196, 197,  -1,  -1,  -1,
       -1,  -1,  -1, 198,  -1, 199,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 200,
      201,  -1, 202,  -1, 203, 204,  -1, 205, 206,  -1,
      207,  -1,  -1,  -1,  -1, 208, 209,  -1, 210,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 211,  -1,  -1,
      212, 213, 214,  -1, 215,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 216,  -1,  -1,  -1,  -1, 217,  -1,
      218,  -1,  -1,  -1,  -1, 219, 220,  -1,  -1, 221,
       -1,  -1,  -1, 222, 223, 224,  -1, 225,  -1,  -1,
      226,  -1,  -1,  -1,  -1,  -1,  -1, 227,  -1,  -1,
       -1,  -1,  -1, 228,  -1,  -1,  -1,  -1,  -1,  -1,
      229, 230,  -1, 231,  -1, 232,  -1,  -1, 233, 234,
      235,  -1, 236, 237,  -1,  -1, 238, 239,  -1,  -1,
       -1,  -1,  -1,  -1, 240,  -1,  -1,  -1,  -1, 241,
       -1,  -1,  -1,  -1,  -1,  -1, 242,  -1,  -1, 243,
       -1, 244, 245,  -1,  -1,  -1,  -1,  -1, 246,  -1,
       -1, 247,  -1, 248,  -1,  -1,  -1,  -1, 249,  -1,
       -1,  -1, 250,  -1,  -1,  -1,  -1,  -1, 251,  -1,
       -1,  -1, 252,  -1, 253,  -1,  -1,  -1,  -1,  -1,
      254,  -1,  -1,  -1,  -1, 255,  -1,  -1,  -1,  -1,
      256,  -1,  -1,  -1,  -1,  -1, 257,  -1, 258,  -1,
      259,  -1,  -1,  -1,  -1, 260, 261,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 262,  -1,  -1,
       -1,  -1,  -1, 263, 264,  -1,  -1, 265,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 266,  -1, 267,  -1,  -1,
       -1,  -1,  -1,  -1, 268, 269,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 270,  -1,  -1, 271, 272,
       -1,  -1, 273,  -1,  -1,  -1, 274, 275,  -1, 276,
       -1, 277,  -1,  -1,  -1,  -1,  -1, 278,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 279,  -1,
      280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 281,  -1,  -1, 282,  -1, 283, 284,
       -1, 285,  -1, 286, 287,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 288,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 289, 290,  -1, 291,  -1, 292, 293, 294,  -1,
       -1,  -1,  -1,  -1, 295,  -1,  -1, 296, 297,  -1,
       -1, 298, 299,  -1, 300,  -1, 301,  -1,  -1,  -1,
       -1, 302,  -1, 303,  -1, 304,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      305,  -1,  -1,  -1, 306,  -1,  -1,  -1,  -1, 307,
      308,  -1,  -1,  -1, 309,  -1,  -1, 310,  -1,  -1,
       -1,  -1, 311,  -1,  -1, 312,  -1,  -1,  -1,  -1,
       -1, 313,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 314,  -1,  -1, 315, 316,  -1,  -1,
      317,  -1, 318,  -1,  -1,  -1,  -1,  -1,  -1, 319,
       -1,  -1, 320,  -1,  -1, 321,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 322,  -1,  -1,  -1,  -1,  -1, 323,
       -1, 324,  -1,  -1,  -1, 325, 326,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 327,  -1, 328,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 329,
      330, 331, 332,  -1, 333,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 334,  -1, 335, 336,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 337,  -1,  -1,  -1,  -1,
      338,  -1,  -1,  -1,  -1,  -1, 339,  -1,  -1, 340,
       -1,  -1,  -1,  -1,  -1, 341,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 342,  -1,  -1, 343,  -1,  -1,  -1,
      344,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 345,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 346,  -1, 347,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 348,  -1,
       -1,  -1,  -1,  -1,  -1, 349,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 350, 351,  -1,  -1,  -1, 352,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 353,
       -1,  -1, 354,  -1,  -1,  -1,  -1,  -1,  -1, 355,
       -1,  -1, 356,  -1,  -1,  -1,  -1,  -1, 357,  -1,
       -1,  -1, 358,  -1,  -1, 359, 360,  -1, 361,  -1,
      362,  -1,  -1, 363, 364,  -1,  -1,  -1,  -1, 365,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 366,  -1,  -1,
       -1,  -1,  -1,  -1, 367, 368,  -1,  -1,  -1, 369,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 370,
       -1,  -1, 371,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 372,  -1, 373, 374,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 375,  -1, 376, 377,  -1,
       -1,  -1, 378,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 379,  -1,  -1, 380,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      381,  -1,  -1,  -1,  -1, 382,  -1,  -1,  -1, 383,
       -1,  -1, 384,  -1,  -1, 385,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 386,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 387,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 388,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 389,  -1,  -1,  -1,  -1,  -1,
       -1, 390,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      391,  -1,  -1,  -1,  -1, 392,  -1,  -1,  -1,  -1,
      393,  -1,  -1, 394, 395,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 396,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 397,  -1, 398,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 399,  -1,  -1,  -1,  -1,
       -1, 400, 401,  -1,  -1,  -1,  -1,  -1,  -1, 402,
      403, 404,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 405, 406,  -1,
      407, 408,  -1,  -1,  -1, 409,  -1,  -1,  -1, 410,
      411,  -1,  -1,  -1, 412, 413,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 414,  -1,  -1,  -1, 415,
      416,  -1,  -1,  -1, 417,  -1,  -1,  -1,  -1,  -1,
       -1, 418, 419, 420,  -1,  -1, 421, 422,  -1, 423,
       -1,  -1, 424,  -1, 425,  -1,  -1,  -1, 426,  -1,
       -1, 427,  -1,  -1,  -1,  -1,  -1, 428,  -1,  -1,
       -1,  -1,  -1,  -1, 429, 430,  -1,  -1,  -1,  -1,
       -1, 431,  -1,  -1, 432, 433,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 434,  -1,  -1,  -1,  -1,  -1, 435,
       -1,  -1, 436,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 437,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 438, 439,  -1,
       -1, 440,  -1,  -1,  -1,  -1,  -1,  -1, 441,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 442,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 443,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 444,  -1,  -1,  -1,  -1, 445,  -1,
       -1,  -1,  -1,  -1, 446,  -1,  -1,  -1, 447,  -1,
       -1,  -1, 448,  -1,  -1,  -1, 449,  -1, 450,  -1,
      451,  -1,  -1,  -1, 452,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 453,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 454,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 455, 456,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 457,  -1, 458,  -1,  -1,  -1,
       -1, 459,  -1,  -1,  -1, 460,  -1, 461,  -1,  -1,
       -1,  -1, 462,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 463,  -1,  -1, 464, 465,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 466,  -1,
       -1,  -1, 467,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      468,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 469,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 470,
       -1,  -1,  -1,  -1, 471,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 472,  -1,  -1, 473,  -1,  -1,  -1,
      474,  -1,  -1,  -1, 475,  -1, 476,  -1,  -1,  -1,
      477,  -1, 478,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 479,  -1,  -1, 480, 481,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 482,  -1,  -1, 483,  -1,  -1,
      484,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      485,  -1,  -1,  -1, 486, 487,  -1,  -1, 488,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 489,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 490,  -1,  -1, 491,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 492,  -1, 493,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 494,  -1,  -1,  -1, 495,  -1,  -1,  -1,
       -1,  -1,  -1, 496,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 497,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 498,  -1, 499,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 500,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 501,  -1,  -1,  -1,  -1,
       -1, 502,  -1,  -1, 503,  -1,  -1,  -1,  -1,  -1,
      504,  -1,  -1, 505,  -1, 506,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 507,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 508,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 509,  -1,
       -1,  -1,  -1,  -1,  -1, 510,  -1,  -1, 511,  -1,
       -1,  -1,  -1, 512,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 513,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      514,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 515,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 516,  -1, 517,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 518,  -1,  -1,  -1,
       -1, 519, 520,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 521,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 522,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      523,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 524,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 525,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 526,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 527,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 528,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 529,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 530,  -1,  -1, 531,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 532,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 533,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 534,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 535,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 536,
      537,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 538,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 539,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 540,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 541,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 542,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 543,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 544,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 545,  -1,  -1,  -1,
       -1, 546,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 547,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 548,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 549,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 550,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 551,  -1,
       -1,  -1,  -1, 552,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 553
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = property_hash_function (str, len);

      if (key <= MAX_HASH_VALUE)
        {
          int index = lookup[key];

          if (index >= 0)
            {
              const char *s = property_word_list[index].name_offset + CSSPropStringPool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &property_word_list[index];
            }
        }
    }
  return 0;
}


const Property* FindProperty(const char* str, unsigned int len) {
  return CSSPropertyNamesHash::findPropertyImpl(str, len);
}

CSSPropertyID cssPropertyID(const String& string)
{
    return resolveCSSPropertyID(unresolvedCSSPropertyID(string));
}

}  // namespace blink
