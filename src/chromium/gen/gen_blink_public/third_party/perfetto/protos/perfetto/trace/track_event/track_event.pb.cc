// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/trace/track_event/track_event.proto

#include "perfetto/trace/track_event/track_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2fdebug_5fannotation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2ftrack_5fevent_2fdebug_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DebugAnnotation;
}  // namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2fdebug_5fannotation_2eproto
namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftask_5fexecution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftask_5fexecution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskExecution;
}  // namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftask_5fexecution_2eproto
namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrackEvent_LegacyEvent;
}  // namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto
namespace perfetto {
namespace protos {
class TrackEvent_LegacyEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackEvent_LegacyEvent>
      _instance;
  ::google::protobuf::uint64 unscoped_id_;
  ::google::protobuf::uint64 local_id_;
  ::google::protobuf::uint64 global_id_;
} _TrackEvent_LegacyEvent_default_instance_;
class TrackEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackEvent>
      _instance;
  ::google::protobuf::int64 timestamp_delta_us_;
  ::google::protobuf::int64 timestamp_absolute_us_;
  ::google::protobuf::int64 thread_time_delta_us_;
  ::google::protobuf::int64 thread_time_absolute_us_;
} _TrackEvent_default_instance_;
class EventCategoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventCategory>
      _instance;
} _EventCategory_default_instance_;
class LegacyEventNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LegacyEventName>
      _instance;
} _LegacyEventName_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto {
static void InitDefaultsTrackEvent_LegacyEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TrackEvent_LegacyEvent_default_instance_;
    new (ptr) ::perfetto::protos::TrackEvent_LegacyEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TrackEvent_LegacyEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrackEvent_LegacyEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrackEvent_LegacyEvent}, {}};

static void InitDefaultsTrackEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TrackEvent_default_instance_;
    new (ptr) ::perfetto::protos::TrackEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TrackEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TrackEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTrackEvent}, {
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2fdebug_5fannotation_2eproto::scc_info_DebugAnnotation.base,
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftask_5fexecution_2eproto::scc_info_TaskExecution.base,
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_TrackEvent_LegacyEvent.base,}};

static void InitDefaultsEventCategory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_EventCategory_default_instance_;
    new (ptr) ::perfetto::protos::EventCategory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::EventCategory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventCategory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventCategory}, {}};

static void InitDefaultsLegacyEventName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_LegacyEventName_default_instance_;
    new (ptr) ::perfetto::protos::LegacyEventName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::LegacyEventName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LegacyEventName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLegacyEventName}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TrackEvent_LegacyEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventCategory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LegacyEventName.base);
}

}  // namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto
namespace perfetto {
namespace protos {
bool TrackEvent_LegacyEvent_FlowDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FLOW_UNSPECIFIED;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FLOW_IN;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FLOW_OUT;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FLOW_INOUT;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FlowDirection_MIN;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::FlowDirection_MAX;
const int TrackEvent_LegacyEvent::FlowDirection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TrackEvent_LegacyEvent_InstantEventScope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::SCOPE_UNSPECIFIED;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::SCOPE_GLOBAL;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::SCOPE_PROCESS;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::SCOPE_THREAD;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::InstantEventScope_MIN;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::InstantEventScope_MAX;
const int TrackEvent_LegacyEvent::InstantEventScope_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TrackEvent_LegacyEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackEvent_LegacyEvent::kNameIidFieldNumber;
const int TrackEvent_LegacyEvent::kPhaseFieldNumber;
const int TrackEvent_LegacyEvent::kDurationUsFieldNumber;
const int TrackEvent_LegacyEvent::kThreadDurationUsFieldNumber;
const int TrackEvent_LegacyEvent::kUnscopedIdFieldNumber;
const int TrackEvent_LegacyEvent::kLocalIdFieldNumber;
const int TrackEvent_LegacyEvent::kGlobalIdFieldNumber;
const int TrackEvent_LegacyEvent::kIdScopeFieldNumber;
const int TrackEvent_LegacyEvent::kUseAsyncTtsFieldNumber;
const int TrackEvent_LegacyEvent::kBindIdFieldNumber;
const int TrackEvent_LegacyEvent::kBindToEnclosingFieldNumber;
const int TrackEvent_LegacyEvent::kFlowDirectionFieldNumber;
const int TrackEvent_LegacyEvent::kInstantEventScopeFieldNumber;
const int TrackEvent_LegacyEvent::kPidOverrideFieldNumber;
const int TrackEvent_LegacyEvent::kTidOverrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackEvent_LegacyEvent::TrackEvent_LegacyEvent()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_TrackEvent_LegacyEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TrackEvent.LegacyEvent)
}
TrackEvent_LegacyEvent::TrackEvent_LegacyEvent(const TrackEvent_LegacyEvent& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id_scope()) {
    id_scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_scope_);
  }
  ::memcpy(&name_iid_, &from.name_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_override_) -
    reinterpret_cast<char*>(&name_iid_)) + sizeof(pid_override_));
  clear_has_id();
  switch (from.id_case()) {
    case kUnscopedId: {
      set_unscoped_id(from.unscoped_id());
      break;
    }
    case kLocalId: {
      set_local_id(from.local_id());
      break;
    }
    case kGlobalId: {
      set_global_id(from.global_id());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TrackEvent.LegacyEvent)
}

void TrackEvent_LegacyEvent::SharedCtor() {
  id_scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&name_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_override_) -
      reinterpret_cast<char*>(&name_iid_)) + sizeof(pid_override_));
  clear_has_id();
}

TrackEvent_LegacyEvent::~TrackEvent_LegacyEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TrackEvent.LegacyEvent)
  SharedDtor();
}

void TrackEvent_LegacyEvent::SharedDtor() {
  id_scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_id()) {
    clear_id();
  }
}

void TrackEvent_LegacyEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrackEvent_LegacyEvent& TrackEvent_LegacyEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_TrackEvent_LegacyEvent.base);
  return *internal_default_instance();
}


void TrackEvent_LegacyEvent::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.TrackEvent.LegacyEvent)
  switch (id_case()) {
    case kUnscopedId: {
      // No need to clear
      break;
    }
    case kLocalId: {
      // No need to clear
      break;
    }
    case kGlobalId: {
      // No need to clear
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void TrackEvent_LegacyEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TrackEvent.LegacyEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_scope_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&name_iid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bind_to_enclosing_) -
        reinterpret_cast<char*>(&name_iid_)) + sizeof(bind_to_enclosing_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&flow_direction_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_override_) -
        reinterpret_cast<char*>(&flow_direction_)) + sizeof(pid_override_));
  }
  clear_id();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackEvent_LegacyEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TrackEvent.LegacyEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 name_iid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_name_iid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_phase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 duration_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_duration_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_duration_us = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_thread_duration_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_duration_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 unscoped_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_.unscoped_id_)));
          set_has_unscoped_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id_scope = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id_scope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bind_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_bind_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bind_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_async_tts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_use_async_tts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_async_tts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_.local_id_)));
          set_has_local_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 global_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_.global_id_)));
          set_has_global_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bind_to_enclosing = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_bind_to_enclosing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bind_to_enclosing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TrackEvent.LegacyEvent.FlowDirection flow_direction = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection_IsValid(value)) {
            set_flow_direction(static_cast< ::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection >(value));
          } else {
            unknown_fields_stream.WriteVarint32(104u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TrackEvent.LegacyEvent.InstantEventScope instant_event_scope = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope_IsValid(value)) {
            set_instant_event_scope(static_cast< ::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope >(value));
          } else {
            unknown_fields_stream.WriteVarint32(112u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid_override = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_pid_override();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_override_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tid_override = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_tid_override();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_override_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TrackEvent.LegacyEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TrackEvent.LegacyEvent)
  return false;
#undef DO_
}

void TrackEvent_LegacyEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TrackEvent.LegacyEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 name_iid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->name_iid(), output);
  }

  // optional int32 phase = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->phase(), output);
  }

  // optional int64 duration_us = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->duration_us(), output);
  }

  // optional int64 thread_duration_us = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->thread_duration_us(), output);
  }

  // optional uint64 unscoped_id = 6;
  if (has_unscoped_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->unscoped_id(), output);
  }

  // optional string id_scope = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->id_scope(), output);
  }

  // optional uint64 bind_id = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->bind_id(), output);
  }

  // optional bool use_async_tts = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->use_async_tts(), output);
  }

  switch (id_case()) {
    case kLocalId:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->local_id(), output);
      break;
    case kGlobalId:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->global_id(), output);
      break;
    default: ;
  }
  // optional bool bind_to_enclosing = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->bind_to_enclosing(), output);
  }

  // optional .perfetto.protos.TrackEvent.LegacyEvent.FlowDirection flow_direction = 13;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->flow_direction(), output);
  }

  // optional .perfetto.protos.TrackEvent.LegacyEvent.InstantEventScope instant_event_scope = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->instant_event_scope(), output);
  }

  // optional int32 pid_override = 18;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->pid_override(), output);
  }

  // optional int32 tid_override = 19;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->tid_override(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TrackEvent.LegacyEvent)
}

size_t TrackEvent_LegacyEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TrackEvent.LegacyEvent)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string id_scope = 7;
    if (has_id_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id_scope());
    }

    // optional uint32 name_iid = 1;
    if (has_name_iid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name_iid());
    }

    // optional int32 phase = 2;
    if (has_phase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phase());
    }

    // optional int64 duration_us = 3;
    if (has_duration_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duration_us());
    }

    // optional int64 thread_duration_us = 4;
    if (has_thread_duration_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->thread_duration_us());
    }

    // optional uint64 bind_id = 8;
    if (has_bind_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bind_id());
    }

    // optional bool use_async_tts = 9;
    if (has_use_async_tts()) {
      total_size += 1 + 1;
    }

    // optional bool bind_to_enclosing = 12;
    if (has_bind_to_enclosing()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .perfetto.protos.TrackEvent.LegacyEvent.FlowDirection flow_direction = 13;
    if (has_flow_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->flow_direction());
    }

    // optional int32 tid_override = 19;
    if (has_tid_override()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid_override());
    }

    // optional .perfetto.protos.TrackEvent.LegacyEvent.InstantEventScope instant_event_scope = 14;
    if (has_instant_event_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->instant_event_scope());
    }

    // optional int32 pid_override = 18;
    if (has_pid_override()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid_override());
    }

  }
  switch (id_case()) {
    // optional uint64 unscoped_id = 6;
    case kUnscopedId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->unscoped_id());
      break;
    }
    // optional uint64 local_id = 10;
    case kLocalId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_id());
      break;
    }
    // optional uint64 global_id = 11;
    case kGlobalId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->global_id());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackEvent_LegacyEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TrackEvent_LegacyEvent*>(&from));
}

void TrackEvent_LegacyEvent::MergeFrom(const TrackEvent_LegacyEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TrackEvent.LegacyEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id_scope();
      id_scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_scope_);
    }
    if (cached_has_bits & 0x00000002u) {
      name_iid_ = from.name_iid_;
    }
    if (cached_has_bits & 0x00000004u) {
      phase_ = from.phase_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_us_ = from.duration_us_;
    }
    if (cached_has_bits & 0x00000010u) {
      thread_duration_us_ = from.thread_duration_us_;
    }
    if (cached_has_bits & 0x00000020u) {
      bind_id_ = from.bind_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      use_async_tts_ = from.use_async_tts_;
    }
    if (cached_has_bits & 0x00000080u) {
      bind_to_enclosing_ = from.bind_to_enclosing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      flow_direction_ = from.flow_direction_;
    }
    if (cached_has_bits & 0x00000200u) {
      tid_override_ = from.tid_override_;
    }
    if (cached_has_bits & 0x00000400u) {
      instant_event_scope_ = from.instant_event_scope_;
    }
    if (cached_has_bits & 0x00000800u) {
      pid_override_ = from.pid_override_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.id_case()) {
    case kUnscopedId: {
      set_unscoped_id(from.unscoped_id());
      break;
    }
    case kLocalId: {
      set_local_id(from.local_id());
      break;
    }
    case kGlobalId: {
      set_global_id(from.global_id());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void TrackEvent_LegacyEvent::CopyFrom(const TrackEvent_LegacyEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TrackEvent.LegacyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackEvent_LegacyEvent::IsInitialized() const {
  return true;
}

void TrackEvent_LegacyEvent::Swap(TrackEvent_LegacyEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackEvent_LegacyEvent::InternalSwap(TrackEvent_LegacyEvent* other) {
  using std::swap;
  id_scope_.Swap(&other->id_scope_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(name_iid_, other->name_iid_);
  swap(phase_, other->phase_);
  swap(duration_us_, other->duration_us_);
  swap(thread_duration_us_, other->thread_duration_us_);
  swap(bind_id_, other->bind_id_);
  swap(use_async_tts_, other->use_async_tts_);
  swap(bind_to_enclosing_, other->bind_to_enclosing_);
  swap(flow_direction_, other->flow_direction_);
  swap(tid_override_, other->tid_override_);
  swap(instant_event_scope_, other->instant_event_scope_);
  swap(pid_override_, other->pid_override_);
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TrackEvent_LegacyEvent::GetTypeName() const {
  return "perfetto.protos.TrackEvent.LegacyEvent";
}


// ===================================================================

void TrackEvent::InitAsDefaultInstance() {
  ::perfetto::protos::_TrackEvent_default_instance_._instance.get_mutable()->task_execution_ = const_cast< ::perfetto::protos::TaskExecution*>(
      ::perfetto::protos::TaskExecution::internal_default_instance());
  ::perfetto::protos::_TrackEvent_default_instance_._instance.get_mutable()->legacy_event_ = const_cast< ::perfetto::protos::TrackEvent_LegacyEvent*>(
      ::perfetto::protos::TrackEvent_LegacyEvent::internal_default_instance());
}
void TrackEvent::clear_debug_annotations() {
  debug_annotations_.Clear();
}
void TrackEvent::clear_task_execution() {
  if (task_execution_ != NULL) task_execution_->Clear();
  clear_has_task_execution();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackEvent::kTimestampDeltaUsFieldNumber;
const int TrackEvent::kTimestampAbsoluteUsFieldNumber;
const int TrackEvent::kThreadTimeDeltaUsFieldNumber;
const int TrackEvent::kThreadTimeAbsoluteUsFieldNumber;
const int TrackEvent::kCategoryIidsFieldNumber;
const int TrackEvent::kDebugAnnotationsFieldNumber;
const int TrackEvent::kTaskExecutionFieldNumber;
const int TrackEvent::kLegacyEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackEvent::TrackEvent()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_TrackEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TrackEvent)
}
TrackEvent::TrackEvent(const TrackEvent& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      category_iids_(from.category_iids_),
      debug_annotations_(from.debug_annotations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task_execution()) {
    task_execution_ = new ::perfetto::protos::TaskExecution(*from.task_execution_);
  } else {
    task_execution_ = NULL;
  }
  if (from.has_legacy_event()) {
    legacy_event_ = new ::perfetto::protos::TrackEvent_LegacyEvent(*from.legacy_event_);
  } else {
    legacy_event_ = NULL;
  }
  clear_has_timestamp();
  switch (from.timestamp_case()) {
    case kTimestampDeltaUs: {
      set_timestamp_delta_us(from.timestamp_delta_us());
      break;
    }
    case kTimestampAbsoluteUs: {
      set_timestamp_absolute_us(from.timestamp_absolute_us());
      break;
    }
    case TIMESTAMP_NOT_SET: {
      break;
    }
  }
  clear_has_thread_time();
  switch (from.thread_time_case()) {
    case kThreadTimeDeltaUs: {
      set_thread_time_delta_us(from.thread_time_delta_us());
      break;
    }
    case kThreadTimeAbsoluteUs: {
      set_thread_time_absolute_us(from.thread_time_absolute_us());
      break;
    }
    case THREAD_TIME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TrackEvent)
}

void TrackEvent::SharedCtor() {
  ::memset(&task_execution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&legacy_event_) -
      reinterpret_cast<char*>(&task_execution_)) + sizeof(legacy_event_));
  clear_has_timestamp();
  clear_has_thread_time();
}

TrackEvent::~TrackEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TrackEvent)
  SharedDtor();
}

void TrackEvent::SharedDtor() {
  if (this != internal_default_instance()) delete task_execution_;
  if (this != internal_default_instance()) delete legacy_event_;
  if (has_timestamp()) {
    clear_timestamp();
  }
  if (has_thread_time()) {
    clear_thread_time();
  }
}

void TrackEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrackEvent& TrackEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_TrackEvent.base);
  return *internal_default_instance();
}


void TrackEvent::clear_timestamp() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.TrackEvent)
  switch (timestamp_case()) {
    case kTimestampDeltaUs: {
      // No need to clear
      break;
    }
    case kTimestampAbsoluteUs: {
      // No need to clear
      break;
    }
    case TIMESTAMP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TIMESTAMP_NOT_SET;
}

void TrackEvent::clear_thread_time() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.TrackEvent)
  switch (thread_time_case()) {
    case kThreadTimeDeltaUs: {
      // No need to clear
      break;
    }
    case kThreadTimeAbsoluteUs: {
      // No need to clear
      break;
    }
    case THREAD_TIME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = THREAD_TIME_NOT_SET;
}


void TrackEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TrackEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  category_iids_.Clear();
  debug_annotations_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(task_execution_ != NULL);
      task_execution_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(legacy_event_ != NULL);
      legacy_event_->Clear();
    }
  }
  clear_timestamp();
  clear_thread_time();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TrackEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 timestamp_delta_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_.timestamp_delta_us_)));
          set_has_timestamp_delta_us();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_time_delta_us = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_thread_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_time_.thread_time_delta_us_)));
          set_has_thread_time_delta_us();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 category_iids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_category_iids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_category_iids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.DebugAnnotation debug_annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_debug_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TaskExecution task_execution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_execution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TrackEvent.LegacyEvent legacy_event = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_legacy_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp_absolute_us = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          clear_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_.timestamp_absolute_us_)));
          set_has_timestamp_absolute_us();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_time_absolute_us = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          clear_thread_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_time_.thread_time_absolute_us_)));
          set_has_thread_time_absolute_us();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TrackEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TrackEvent)
  return false;
#undef DO_
}

void TrackEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TrackEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int64 timestamp_delta_us = 1;
  if (has_timestamp_delta_us()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp_delta_us(), output);
  }

  // optional int64 thread_time_delta_us = 2;
  if (has_thread_time_delta_us()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->thread_time_delta_us(), output);
  }

  // repeated uint32 category_iids = 3;
  for (int i = 0, n = this->category_iids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->category_iids(i), output);
  }

  // repeated .perfetto.protos.DebugAnnotation debug_annotations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->debug_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->debug_annotations(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.TaskExecution task_execution = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_task_execution(), output);
  }

  // optional .perfetto.protos.TrackEvent.LegacyEvent legacy_event = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_legacy_event(), output);
  }

  // optional int64 timestamp_absolute_us = 16;
  if (has_timestamp_absolute_us()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->timestamp_absolute_us(), output);
  }

  // optional int64 thread_time_absolute_us = 17;
  if (has_thread_time_absolute_us()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->thread_time_absolute_us(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TrackEvent)
}

size_t TrackEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TrackEvent)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated uint32 category_iids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->category_iids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->category_iids_size());
    total_size += data_size;
  }

  // repeated .perfetto.protos.DebugAnnotation debug_annotations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->debug_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->debug_annotations(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .perfetto.protos.TaskExecution task_execution = 5;
    if (has_task_execution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_execution_);
    }

    // optional .perfetto.protos.TrackEvent.LegacyEvent legacy_event = 6;
    if (has_legacy_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *legacy_event_);
    }

  }
  switch (timestamp_case()) {
    // optional int64 timestamp_delta_us = 1;
    case kTimestampDeltaUs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp_delta_us());
      break;
    }
    // optional int64 timestamp_absolute_us = 16;
    case kTimestampAbsoluteUs: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp_absolute_us());
      break;
    }
    case TIMESTAMP_NOT_SET: {
      break;
    }
  }
  switch (thread_time_case()) {
    // optional int64 thread_time_delta_us = 2;
    case kThreadTimeDeltaUs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->thread_time_delta_us());
      break;
    }
    // optional int64 thread_time_absolute_us = 17;
    case kThreadTimeAbsoluteUs: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->thread_time_absolute_us());
      break;
    }
    case THREAD_TIME_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TrackEvent*>(&from));
}

void TrackEvent::MergeFrom(const TrackEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TrackEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  category_iids_.MergeFrom(from.category_iids_);
  debug_annotations_.MergeFrom(from.debug_annotations_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_task_execution()->::perfetto::protos::TaskExecution::MergeFrom(from.task_execution());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_legacy_event()->::perfetto::protos::TrackEvent_LegacyEvent::MergeFrom(from.legacy_event());
    }
  }
  switch (from.timestamp_case()) {
    case kTimestampDeltaUs: {
      set_timestamp_delta_us(from.timestamp_delta_us());
      break;
    }
    case kTimestampAbsoluteUs: {
      set_timestamp_absolute_us(from.timestamp_absolute_us());
      break;
    }
    case TIMESTAMP_NOT_SET: {
      break;
    }
  }
  switch (from.thread_time_case()) {
    case kThreadTimeDeltaUs: {
      set_thread_time_delta_us(from.thread_time_delta_us());
      break;
    }
    case kThreadTimeAbsoluteUs: {
      set_thread_time_absolute_us(from.thread_time_absolute_us());
      break;
    }
    case THREAD_TIME_NOT_SET: {
      break;
    }
  }
}

void TrackEvent::CopyFrom(const TrackEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TrackEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackEvent::IsInitialized() const {
  return true;
}

void TrackEvent::Swap(TrackEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackEvent::InternalSwap(TrackEvent* other) {
  using std::swap;
  category_iids_.InternalSwap(&other->category_iids_);
  CastToBase(&debug_annotations_)->InternalSwap(CastToBase(&other->debug_annotations_));
  swap(task_execution_, other->task_execution_);
  swap(legacy_event_, other->legacy_event_);
  swap(timestamp_, other->timestamp_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(thread_time_, other->thread_time_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TrackEvent::GetTypeName() const {
  return "perfetto.protos.TrackEvent";
}


// ===================================================================

void EventCategory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventCategory::kIidFieldNumber;
const int EventCategory::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventCategory::EventCategory()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_EventCategory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.EventCategory)
}
EventCategory::EventCategory(const EventCategory& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  iid_ = from.iid_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.EventCategory)
}

void EventCategory::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iid_ = 0u;
}

EventCategory::~EventCategory() {
  // @@protoc_insertion_point(destructor:perfetto.protos.EventCategory)
  SharedDtor();
}

void EventCategory::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventCategory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventCategory& EventCategory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_EventCategory.base);
  return *internal_default_instance();
}


void EventCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.EventCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  iid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EventCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.EventCategory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 iid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_iid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.EventCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.EventCategory)
  return false;
#undef DO_
}

void EventCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.EventCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 iid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->iid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.EventCategory)
}

size_t EventCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.EventCategory)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 iid = 1;
    if (has_iid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventCategory::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EventCategory*>(&from));
}

void EventCategory::MergeFrom(const EventCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.EventCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      iid_ = from.iid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EventCategory::CopyFrom(const EventCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.EventCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventCategory::IsInitialized() const {
  return true;
}

void EventCategory::Swap(EventCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventCategory::InternalSwap(EventCategory* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iid_, other->iid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string EventCategory::GetTypeName() const {
  return "perfetto.protos.EventCategory";
}


// ===================================================================

void LegacyEventName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegacyEventName::kIidFieldNumber;
const int LegacyEventName::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegacyEventName::LegacyEventName()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_LegacyEventName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.LegacyEventName)
}
LegacyEventName::LegacyEventName(const LegacyEventName& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  iid_ = from.iid_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.LegacyEventName)
}

void LegacyEventName::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iid_ = 0u;
}

LegacyEventName::~LegacyEventName() {
  // @@protoc_insertion_point(destructor:perfetto.protos.LegacyEventName)
  SharedDtor();
}

void LegacyEventName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LegacyEventName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LegacyEventName& LegacyEventName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::scc_info_LegacyEventName.base);
  return *internal_default_instance();
}


void LegacyEventName::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.LegacyEventName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  iid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LegacyEventName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.LegacyEventName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 iid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_iid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.LegacyEventName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.LegacyEventName)
  return false;
#undef DO_
}

void LegacyEventName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.LegacyEventName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 iid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->iid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.LegacyEventName)
}

size_t LegacyEventName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.LegacyEventName)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 iid = 1;
    if (has_iid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LegacyEventName::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LegacyEventName*>(&from));
}

void LegacyEventName::MergeFrom(const LegacyEventName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.LegacyEventName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      iid_ = from.iid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LegacyEventName::CopyFrom(const LegacyEventName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.LegacyEventName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegacyEventName::IsInitialized() const {
  return true;
}

void LegacyEventName::Swap(LegacyEventName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegacyEventName::InternalSwap(LegacyEventName* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iid_, other->iid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LegacyEventName::GetTypeName() const {
  return "perfetto.protos.LegacyEventName";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TrackEvent_LegacyEvent* Arena::CreateMaybeMessage< ::perfetto::protos::TrackEvent_LegacyEvent >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TrackEvent_LegacyEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TrackEvent* Arena::CreateMaybeMessage< ::perfetto::protos::TrackEvent >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TrackEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::EventCategory* Arena::CreateMaybeMessage< ::perfetto::protos::EventCategory >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::EventCategory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::LegacyEventName* Arena::CreateMaybeMessage< ::perfetto::protos::LegacyEventName >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::LegacyEventName >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
