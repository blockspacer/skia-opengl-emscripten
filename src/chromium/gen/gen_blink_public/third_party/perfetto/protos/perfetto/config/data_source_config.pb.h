// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/data_source_config.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
#define PROTOBUF_INCLUDED_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "perfetto/config/android/android_log_config.pb.h"
#include "perfetto/config/chrome/chrome_config.pb.h"
#include "perfetto/config/ftrace/ftrace_config.pb.h"
#include "perfetto/config/inode_file/inode_file_config.pb.h"
#include "perfetto/config/power/android_power_config.pb.h"
#include "perfetto/config/process_stats/process_stats_config.pb.h"
#include "perfetto/config/profiling/heapprofd_config.pb.h"
#include "perfetto/config/sys_stats/sys_stats_config.pb.h"
#include "perfetto/config/test_config.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto 

namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
namespace perfetto {
namespace protos {
class DataSourceConfig;
class DataSourceConfigDefaultTypeInternal;
extern DataSourceConfigDefaultTypeInternal _DataSourceConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::DataSourceConfig* Arena::CreateMaybeMessage<::perfetto::protos::DataSourceConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

// ===================================================================

class DataSourceConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.DataSourceConfig) */ {
 public:
  DataSourceConfig();
  virtual ~DataSourceConfig();

  DataSourceConfig(const DataSourceConfig& from);

  inline DataSourceConfig& operator=(const DataSourceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataSourceConfig(DataSourceConfig&& from) noexcept
    : DataSourceConfig() {
    *this = ::std::move(from);
  }

  inline DataSourceConfig& operator=(DataSourceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSourceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSourceConfig* internal_default_instance() {
    return reinterpret_cast<const DataSourceConfig*>(
               &_DataSourceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DataSourceConfig* other);
  friend void swap(DataSourceConfig& a, DataSourceConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataSourceConfig* New() const final {
    return CreateMaybeMessage<DataSourceConfig>(NULL);
  }

  DataSourceConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataSourceConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const DataSourceConfig& from);
  void MergeFrom(const DataSourceConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSourceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string legacy_config = 1000;
  bool has_legacy_config() const;
  void clear_legacy_config();
  static const int kLegacyConfigFieldNumber = 1000;
  const ::std::string& legacy_config() const;
  void set_legacy_config(const ::std::string& value);
  #if LANG_CXX11
  void set_legacy_config(::std::string&& value);
  #endif
  void set_legacy_config(const char* value);
  void set_legacy_config(const char* value, size_t size);
  ::std::string* mutable_legacy_config();
  ::std::string* release_legacy_config();
  void set_allocated_legacy_config(::std::string* legacy_config);

  // optional .perfetto.protos.FtraceConfig ftrace_config = 100;
  bool has_ftrace_config() const;
  void clear_ftrace_config();
  static const int kFtraceConfigFieldNumber = 100;
  private:
  const ::perfetto::protos::FtraceConfig& _internal_ftrace_config() const;
  public:
  const ::perfetto::protos::FtraceConfig& ftrace_config() const;
  ::perfetto::protos::FtraceConfig* release_ftrace_config();
  ::perfetto::protos::FtraceConfig* mutable_ftrace_config();
  void set_allocated_ftrace_config(::perfetto::protos::FtraceConfig* ftrace_config);

  // optional .perfetto.protos.ChromeConfig chrome_config = 101;
  bool has_chrome_config() const;
  void clear_chrome_config();
  static const int kChromeConfigFieldNumber = 101;
  private:
  const ::perfetto::protos::ChromeConfig& _internal_chrome_config() const;
  public:
  const ::perfetto::protos::ChromeConfig& chrome_config() const;
  ::perfetto::protos::ChromeConfig* release_chrome_config();
  ::perfetto::protos::ChromeConfig* mutable_chrome_config();
  void set_allocated_chrome_config(::perfetto::protos::ChromeConfig* chrome_config);

  // optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
  bool has_inode_file_config() const;
  void clear_inode_file_config();
  static const int kInodeFileConfigFieldNumber = 102;
  private:
  const ::perfetto::protos::InodeFileConfig& _internal_inode_file_config() const;
  public:
  const ::perfetto::protos::InodeFileConfig& inode_file_config() const;
  ::perfetto::protos::InodeFileConfig* release_inode_file_config();
  ::perfetto::protos::InodeFileConfig* mutable_inode_file_config();
  void set_allocated_inode_file_config(::perfetto::protos::InodeFileConfig* inode_file_config);

  // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
  bool has_process_stats_config() const;
  void clear_process_stats_config();
  static const int kProcessStatsConfigFieldNumber = 103;
  private:
  const ::perfetto::protos::ProcessStatsConfig& _internal_process_stats_config() const;
  public:
  const ::perfetto::protos::ProcessStatsConfig& process_stats_config() const;
  ::perfetto::protos::ProcessStatsConfig* release_process_stats_config();
  ::perfetto::protos::ProcessStatsConfig* mutable_process_stats_config();
  void set_allocated_process_stats_config(::perfetto::protos::ProcessStatsConfig* process_stats_config);

  // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104;
  bool has_sys_stats_config() const;
  void clear_sys_stats_config();
  static const int kSysStatsConfigFieldNumber = 104;
  private:
  const ::perfetto::protos::SysStatsConfig& _internal_sys_stats_config() const;
  public:
  const ::perfetto::protos::SysStatsConfig& sys_stats_config() const;
  ::perfetto::protos::SysStatsConfig* release_sys_stats_config();
  ::perfetto::protos::SysStatsConfig* mutable_sys_stats_config();
  void set_allocated_sys_stats_config(::perfetto::protos::SysStatsConfig* sys_stats_config);

  // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105;
  bool has_heapprofd_config() const;
  void clear_heapprofd_config();
  static const int kHeapprofdConfigFieldNumber = 105;
  private:
  const ::perfetto::protos::HeapprofdConfig& _internal_heapprofd_config() const;
  public:
  const ::perfetto::protos::HeapprofdConfig& heapprofd_config() const;
  ::perfetto::protos::HeapprofdConfig* release_heapprofd_config();
  ::perfetto::protos::HeapprofdConfig* mutable_heapprofd_config();
  void set_allocated_heapprofd_config(::perfetto::protos::HeapprofdConfig* heapprofd_config);

  // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106;
  bool has_android_power_config() const;
  void clear_android_power_config();
  static const int kAndroidPowerConfigFieldNumber = 106;
  private:
  const ::perfetto::protos::AndroidPowerConfig& _internal_android_power_config() const;
  public:
  const ::perfetto::protos::AndroidPowerConfig& android_power_config() const;
  ::perfetto::protos::AndroidPowerConfig* release_android_power_config();
  ::perfetto::protos::AndroidPowerConfig* mutable_android_power_config();
  void set_allocated_android_power_config(::perfetto::protos::AndroidPowerConfig* android_power_config);

  // optional .perfetto.protos.AndroidLogConfig android_log_config = 107;
  bool has_android_log_config() const;
  void clear_android_log_config();
  static const int kAndroidLogConfigFieldNumber = 107;
  private:
  const ::perfetto::protos::AndroidLogConfig& _internal_android_log_config() const;
  public:
  const ::perfetto::protos::AndroidLogConfig& android_log_config() const;
  ::perfetto::protos::AndroidLogConfig* release_android_log_config();
  ::perfetto::protos::AndroidLogConfig* mutable_android_log_config();
  void set_allocated_android_log_config(::perfetto::protos::AndroidLogConfig* android_log_config);

  // optional .perfetto.protos.TestConfig for_testing = 268435455;
  bool has_for_testing() const;
  void clear_for_testing();
  static const int kForTestingFieldNumber = 268435455;
  private:
  const ::perfetto::protos::TestConfig& _internal_for_testing() const;
  public:
  const ::perfetto::protos::TestConfig& for_testing() const;
  ::perfetto::protos::TestConfig* release_for_testing();
  ::perfetto::protos::TestConfig* mutable_for_testing();
  void set_allocated_for_testing(::perfetto::protos::TestConfig* for_testing);

  // optional uint32 target_buffer = 2;
  bool has_target_buffer() const;
  void clear_target_buffer();
  static const int kTargetBufferFieldNumber = 2;
  ::google::protobuf::uint32 target_buffer() const;
  void set_target_buffer(::google::protobuf::uint32 value);

  // optional uint32 trace_duration_ms = 3;
  bool has_trace_duration_ms() const;
  void clear_trace_duration_ms();
  static const int kTraceDurationMsFieldNumber = 3;
  ::google::protobuf::uint32 trace_duration_ms() const;
  void set_trace_duration_ms(::google::protobuf::uint32 value);

  // optional uint64 tracing_session_id = 4;
  bool has_tracing_session_id() const;
  void clear_tracing_session_id();
  static const int kTracingSessionIdFieldNumber = 4;
  ::google::protobuf::uint64 tracing_session_id() const;
  void set_tracing_session_id(::google::protobuf::uint64 value);

  // optional bool enable_extra_guardrails = 6;
  bool has_enable_extra_guardrails() const;
  void clear_enable_extra_guardrails();
  static const int kEnableExtraGuardrailsFieldNumber = 6;
  bool enable_extra_guardrails() const;
  void set_enable_extra_guardrails(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.DataSourceConfig)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_target_buffer();
  void clear_has_target_buffer();
  void set_has_trace_duration_ms();
  void clear_has_trace_duration_ms();
  void set_has_enable_extra_guardrails();
  void clear_has_enable_extra_guardrails();
  void set_has_tracing_session_id();
  void clear_has_tracing_session_id();
  void set_has_ftrace_config();
  void clear_has_ftrace_config();
  void set_has_chrome_config();
  void clear_has_chrome_config();
  void set_has_inode_file_config();
  void clear_has_inode_file_config();
  void set_has_process_stats_config();
  void clear_has_process_stats_config();
  void set_has_sys_stats_config();
  void clear_has_sys_stats_config();
  void set_has_heapprofd_config();
  void clear_has_heapprofd_config();
  void set_has_android_power_config();
  void clear_has_android_power_config();
  void set_has_android_log_config();
  void clear_has_android_log_config();
  void set_has_legacy_config();
  void clear_has_legacy_config();
  void set_has_for_testing();
  void clear_has_for_testing();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr legacy_config_;
  ::perfetto::protos::FtraceConfig* ftrace_config_;
  ::perfetto::protos::ChromeConfig* chrome_config_;
  ::perfetto::protos::InodeFileConfig* inode_file_config_;
  ::perfetto::protos::ProcessStatsConfig* process_stats_config_;
  ::perfetto::protos::SysStatsConfig* sys_stats_config_;
  ::perfetto::protos::HeapprofdConfig* heapprofd_config_;
  ::perfetto::protos::AndroidPowerConfig* android_power_config_;
  ::perfetto::protos::AndroidLogConfig* android_log_config_;
  ::perfetto::protos::TestConfig* for_testing_;
  ::google::protobuf::uint32 target_buffer_;
  ::google::protobuf::uint32 trace_duration_ms_;
  ::google::protobuf::uint64 tracing_session_id_;
  bool enable_extra_guardrails_;
  friend struct ::protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataSourceConfig

// optional string name = 1;
inline bool DataSourceConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSourceConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataSourceConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataSourceConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DataSourceConfig::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.name)
  return name_.GetNoArena();
}
inline void DataSourceConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.name)
}
#if LANG_CXX11
inline void DataSourceConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.name)
}
#endif
inline void DataSourceConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.name)
}
inline void DataSourceConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.name)
}
inline ::std::string* DataSourceConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataSourceConfig::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSourceConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.name)
}

// optional uint32 target_buffer = 2;
inline bool DataSourceConfig::has_target_buffer() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DataSourceConfig::set_has_target_buffer() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DataSourceConfig::clear_has_target_buffer() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DataSourceConfig::clear_target_buffer() {
  target_buffer_ = 0u;
  clear_has_target_buffer();
}
inline ::google::protobuf::uint32 DataSourceConfig::target_buffer() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.target_buffer)
  return target_buffer_;
}
inline void DataSourceConfig::set_target_buffer(::google::protobuf::uint32 value) {
  set_has_target_buffer();
  target_buffer_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.target_buffer)
}

// optional uint32 trace_duration_ms = 3;
inline bool DataSourceConfig::has_trace_duration_ms() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DataSourceConfig::set_has_trace_duration_ms() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DataSourceConfig::clear_has_trace_duration_ms() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DataSourceConfig::clear_trace_duration_ms() {
  trace_duration_ms_ = 0u;
  clear_has_trace_duration_ms();
}
inline ::google::protobuf::uint32 DataSourceConfig::trace_duration_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.trace_duration_ms)
  return trace_duration_ms_;
}
inline void DataSourceConfig::set_trace_duration_ms(::google::protobuf::uint32 value) {
  set_has_trace_duration_ms();
  trace_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.trace_duration_ms)
}

// optional bool enable_extra_guardrails = 6;
inline bool DataSourceConfig::has_enable_extra_guardrails() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DataSourceConfig::set_has_enable_extra_guardrails() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DataSourceConfig::clear_has_enable_extra_guardrails() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DataSourceConfig::clear_enable_extra_guardrails() {
  enable_extra_guardrails_ = false;
  clear_has_enable_extra_guardrails();
}
inline bool DataSourceConfig::enable_extra_guardrails() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.enable_extra_guardrails)
  return enable_extra_guardrails_;
}
inline void DataSourceConfig::set_enable_extra_guardrails(bool value) {
  set_has_enable_extra_guardrails();
  enable_extra_guardrails_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.enable_extra_guardrails)
}

// optional uint64 tracing_session_id = 4;
inline bool DataSourceConfig::has_tracing_session_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DataSourceConfig::set_has_tracing_session_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DataSourceConfig::clear_has_tracing_session_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DataSourceConfig::clear_tracing_session_id() {
  tracing_session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tracing_session_id();
}
inline ::google::protobuf::uint64 DataSourceConfig::tracing_session_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.tracing_session_id)
  return tracing_session_id_;
}
inline void DataSourceConfig::set_tracing_session_id(::google::protobuf::uint64 value) {
  set_has_tracing_session_id();
  tracing_session_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.tracing_session_id)
}

// optional .perfetto.protos.FtraceConfig ftrace_config = 100;
inline bool DataSourceConfig::has_ftrace_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataSourceConfig::set_has_ftrace_config() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataSourceConfig::clear_has_ftrace_config() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::perfetto::protos::FtraceConfig& DataSourceConfig::_internal_ftrace_config() const {
  return *ftrace_config_;
}
inline const ::perfetto::protos::FtraceConfig& DataSourceConfig::ftrace_config() const {
  const ::perfetto::protos::FtraceConfig* p = ftrace_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.ftrace_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::FtraceConfig*>(
      &::perfetto::protos::_FtraceConfig_default_instance_);
}
inline ::perfetto::protos::FtraceConfig* DataSourceConfig::release_ftrace_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.ftrace_config)
  clear_has_ftrace_config();
  ::perfetto::protos::FtraceConfig* temp = ftrace_config_;
  ftrace_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::FtraceConfig* DataSourceConfig::mutable_ftrace_config() {
  set_has_ftrace_config();
  if (ftrace_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::FtraceConfig>(GetArenaNoVirtual());
    ftrace_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.ftrace_config)
  return ftrace_config_;
}
inline void DataSourceConfig::set_allocated_ftrace_config(::perfetto::protos::FtraceConfig* ftrace_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ftrace_config_);
  }
  if (ftrace_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ftrace_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ftrace_config, submessage_arena);
    }
    set_has_ftrace_config();
  } else {
    clear_has_ftrace_config();
  }
  ftrace_config_ = ftrace_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.ftrace_config)
}

// optional .perfetto.protos.ChromeConfig chrome_config = 101;
inline bool DataSourceConfig::has_chrome_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataSourceConfig::set_has_chrome_config() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataSourceConfig::clear_has_chrome_config() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::perfetto::protos::ChromeConfig& DataSourceConfig::_internal_chrome_config() const {
  return *chrome_config_;
}
inline const ::perfetto::protos::ChromeConfig& DataSourceConfig::chrome_config() const {
  const ::perfetto::protos::ChromeConfig* p = chrome_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.chrome_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::ChromeConfig*>(
      &::perfetto::protos::_ChromeConfig_default_instance_);
}
inline ::perfetto::protos::ChromeConfig* DataSourceConfig::release_chrome_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.chrome_config)
  clear_has_chrome_config();
  ::perfetto::protos::ChromeConfig* temp = chrome_config_;
  chrome_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::ChromeConfig* DataSourceConfig::mutable_chrome_config() {
  set_has_chrome_config();
  if (chrome_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::ChromeConfig>(GetArenaNoVirtual());
    chrome_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.chrome_config)
  return chrome_config_;
}
inline void DataSourceConfig::set_allocated_chrome_config(::perfetto::protos::ChromeConfig* chrome_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(chrome_config_);
  }
  if (chrome_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chrome_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chrome_config, submessage_arena);
    }
    set_has_chrome_config();
  } else {
    clear_has_chrome_config();
  }
  chrome_config_ = chrome_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.chrome_config)
}

// optional .perfetto.protos.InodeFileConfig inode_file_config = 102;
inline bool DataSourceConfig::has_inode_file_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataSourceConfig::set_has_inode_file_config() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataSourceConfig::clear_has_inode_file_config() {
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::perfetto::protos::InodeFileConfig& DataSourceConfig::_internal_inode_file_config() const {
  return *inode_file_config_;
}
inline const ::perfetto::protos::InodeFileConfig& DataSourceConfig::inode_file_config() const {
  const ::perfetto::protos::InodeFileConfig* p = inode_file_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.inode_file_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::InodeFileConfig*>(
      &::perfetto::protos::_InodeFileConfig_default_instance_);
}
inline ::perfetto::protos::InodeFileConfig* DataSourceConfig::release_inode_file_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.inode_file_config)
  clear_has_inode_file_config();
  ::perfetto::protos::InodeFileConfig* temp = inode_file_config_;
  inode_file_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::InodeFileConfig* DataSourceConfig::mutable_inode_file_config() {
  set_has_inode_file_config();
  if (inode_file_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::InodeFileConfig>(GetArenaNoVirtual());
    inode_file_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.inode_file_config)
  return inode_file_config_;
}
inline void DataSourceConfig::set_allocated_inode_file_config(::perfetto::protos::InodeFileConfig* inode_file_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(inode_file_config_);
  }
  if (inode_file_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inode_file_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inode_file_config, submessage_arena);
    }
    set_has_inode_file_config();
  } else {
    clear_has_inode_file_config();
  }
  inode_file_config_ = inode_file_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.inode_file_config)
}

// optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103;
inline bool DataSourceConfig::has_process_stats_config() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataSourceConfig::set_has_process_stats_config() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataSourceConfig::clear_has_process_stats_config() {
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::perfetto::protos::ProcessStatsConfig& DataSourceConfig::_internal_process_stats_config() const {
  return *process_stats_config_;
}
inline const ::perfetto::protos::ProcessStatsConfig& DataSourceConfig::process_stats_config() const {
  const ::perfetto::protos::ProcessStatsConfig* p = process_stats_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.process_stats_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::ProcessStatsConfig*>(
      &::perfetto::protos::_ProcessStatsConfig_default_instance_);
}
inline ::perfetto::protos::ProcessStatsConfig* DataSourceConfig::release_process_stats_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.process_stats_config)
  clear_has_process_stats_config();
  ::perfetto::protos::ProcessStatsConfig* temp = process_stats_config_;
  process_stats_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::ProcessStatsConfig* DataSourceConfig::mutable_process_stats_config() {
  set_has_process_stats_config();
  if (process_stats_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::ProcessStatsConfig>(GetArenaNoVirtual());
    process_stats_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.process_stats_config)
  return process_stats_config_;
}
inline void DataSourceConfig::set_allocated_process_stats_config(::perfetto::protos::ProcessStatsConfig* process_stats_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(process_stats_config_);
  }
  if (process_stats_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process_stats_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process_stats_config, submessage_arena);
    }
    set_has_process_stats_config();
  } else {
    clear_has_process_stats_config();
  }
  process_stats_config_ = process_stats_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.process_stats_config)
}

// optional .perfetto.protos.SysStatsConfig sys_stats_config = 104;
inline bool DataSourceConfig::has_sys_stats_config() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataSourceConfig::set_has_sys_stats_config() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataSourceConfig::clear_has_sys_stats_config() {
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::perfetto::protos::SysStatsConfig& DataSourceConfig::_internal_sys_stats_config() const {
  return *sys_stats_config_;
}
inline const ::perfetto::protos::SysStatsConfig& DataSourceConfig::sys_stats_config() const {
  const ::perfetto::protos::SysStatsConfig* p = sys_stats_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.sys_stats_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::SysStatsConfig*>(
      &::perfetto::protos::_SysStatsConfig_default_instance_);
}
inline ::perfetto::protos::SysStatsConfig* DataSourceConfig::release_sys_stats_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.sys_stats_config)
  clear_has_sys_stats_config();
  ::perfetto::protos::SysStatsConfig* temp = sys_stats_config_;
  sys_stats_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::SysStatsConfig* DataSourceConfig::mutable_sys_stats_config() {
  set_has_sys_stats_config();
  if (sys_stats_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::SysStatsConfig>(GetArenaNoVirtual());
    sys_stats_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.sys_stats_config)
  return sys_stats_config_;
}
inline void DataSourceConfig::set_allocated_sys_stats_config(::perfetto::protos::SysStatsConfig* sys_stats_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sys_stats_config_);
  }
  if (sys_stats_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sys_stats_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sys_stats_config, submessage_arena);
    }
    set_has_sys_stats_config();
  } else {
    clear_has_sys_stats_config();
  }
  sys_stats_config_ = sys_stats_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.sys_stats_config)
}

// optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105;
inline bool DataSourceConfig::has_heapprofd_config() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataSourceConfig::set_has_heapprofd_config() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DataSourceConfig::clear_has_heapprofd_config() {
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::perfetto::protos::HeapprofdConfig& DataSourceConfig::_internal_heapprofd_config() const {
  return *heapprofd_config_;
}
inline const ::perfetto::protos::HeapprofdConfig& DataSourceConfig::heapprofd_config() const {
  const ::perfetto::protos::HeapprofdConfig* p = heapprofd_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.heapprofd_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::HeapprofdConfig*>(
      &::perfetto::protos::_HeapprofdConfig_default_instance_);
}
inline ::perfetto::protos::HeapprofdConfig* DataSourceConfig::release_heapprofd_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.heapprofd_config)
  clear_has_heapprofd_config();
  ::perfetto::protos::HeapprofdConfig* temp = heapprofd_config_;
  heapprofd_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::HeapprofdConfig* DataSourceConfig::mutable_heapprofd_config() {
  set_has_heapprofd_config();
  if (heapprofd_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::HeapprofdConfig>(GetArenaNoVirtual());
    heapprofd_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.heapprofd_config)
  return heapprofd_config_;
}
inline void DataSourceConfig::set_allocated_heapprofd_config(::perfetto::protos::HeapprofdConfig* heapprofd_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(heapprofd_config_);
  }
  if (heapprofd_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      heapprofd_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heapprofd_config, submessage_arena);
    }
    set_has_heapprofd_config();
  } else {
    clear_has_heapprofd_config();
  }
  heapprofd_config_ = heapprofd_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.heapprofd_config)
}

// optional .perfetto.protos.AndroidPowerConfig android_power_config = 106;
inline bool DataSourceConfig::has_android_power_config() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DataSourceConfig::set_has_android_power_config() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DataSourceConfig::clear_has_android_power_config() {
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::perfetto::protos::AndroidPowerConfig& DataSourceConfig::_internal_android_power_config() const {
  return *android_power_config_;
}
inline const ::perfetto::protos::AndroidPowerConfig& DataSourceConfig::android_power_config() const {
  const ::perfetto::protos::AndroidPowerConfig* p = android_power_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.android_power_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::AndroidPowerConfig*>(
      &::perfetto::protos::_AndroidPowerConfig_default_instance_);
}
inline ::perfetto::protos::AndroidPowerConfig* DataSourceConfig::release_android_power_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.android_power_config)
  clear_has_android_power_config();
  ::perfetto::protos::AndroidPowerConfig* temp = android_power_config_;
  android_power_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::AndroidPowerConfig* DataSourceConfig::mutable_android_power_config() {
  set_has_android_power_config();
  if (android_power_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidPowerConfig>(GetArenaNoVirtual());
    android_power_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.android_power_config)
  return android_power_config_;
}
inline void DataSourceConfig::set_allocated_android_power_config(::perfetto::protos::AndroidPowerConfig* android_power_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(android_power_config_);
  }
  if (android_power_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      android_power_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, android_power_config, submessage_arena);
    }
    set_has_android_power_config();
  } else {
    clear_has_android_power_config();
  }
  android_power_config_ = android_power_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.android_power_config)
}

// optional .perfetto.protos.AndroidLogConfig android_log_config = 107;
inline bool DataSourceConfig::has_android_log_config() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DataSourceConfig::set_has_android_log_config() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DataSourceConfig::clear_has_android_log_config() {
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::perfetto::protos::AndroidLogConfig& DataSourceConfig::_internal_android_log_config() const {
  return *android_log_config_;
}
inline const ::perfetto::protos::AndroidLogConfig& DataSourceConfig::android_log_config() const {
  const ::perfetto::protos::AndroidLogConfig* p = android_log_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.android_log_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::AndroidLogConfig*>(
      &::perfetto::protos::_AndroidLogConfig_default_instance_);
}
inline ::perfetto::protos::AndroidLogConfig* DataSourceConfig::release_android_log_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.android_log_config)
  clear_has_android_log_config();
  ::perfetto::protos::AndroidLogConfig* temp = android_log_config_;
  android_log_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::AndroidLogConfig* DataSourceConfig::mutable_android_log_config() {
  set_has_android_log_config();
  if (android_log_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidLogConfig>(GetArenaNoVirtual());
    android_log_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.android_log_config)
  return android_log_config_;
}
inline void DataSourceConfig::set_allocated_android_log_config(::perfetto::protos::AndroidLogConfig* android_log_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(android_log_config_);
  }
  if (android_log_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      android_log_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, android_log_config, submessage_arena);
    }
    set_has_android_log_config();
  } else {
    clear_has_android_log_config();
  }
  android_log_config_ = android_log_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.android_log_config)
}

// optional string legacy_config = 1000;
inline bool DataSourceConfig::has_legacy_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSourceConfig::set_has_legacy_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataSourceConfig::clear_has_legacy_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataSourceConfig::clear_legacy_config() {
  legacy_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_legacy_config();
}
inline const ::std::string& DataSourceConfig::legacy_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.GetNoArena();
}
inline void DataSourceConfig::set_legacy_config(const ::std::string& value) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.legacy_config)
}
#if LANG_CXX11
inline void DataSourceConfig::set_legacy_config(::std::string&& value) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.legacy_config)
}
#endif
inline void DataSourceConfig::set_legacy_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.legacy_config)
}
inline void DataSourceConfig::set_legacy_config(const char* value, size_t size) {
  set_has_legacy_config();
  legacy_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.legacy_config)
}
inline ::std::string* DataSourceConfig::mutable_legacy_config() {
  set_has_legacy_config();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataSourceConfig::release_legacy_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.legacy_config)
  if (!has_legacy_config()) {
    return NULL;
  }
  clear_has_legacy_config();
  return legacy_config_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSourceConfig::set_allocated_legacy_config(::std::string* legacy_config) {
  if (legacy_config != NULL) {
    set_has_legacy_config();
  } else {
    clear_has_legacy_config();
  }
  legacy_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), legacy_config);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.legacy_config)
}

// optional .perfetto.protos.TestConfig for_testing = 268435455;
inline bool DataSourceConfig::has_for_testing() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DataSourceConfig::set_has_for_testing() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DataSourceConfig::clear_has_for_testing() {
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::perfetto::protos::TestConfig& DataSourceConfig::_internal_for_testing() const {
  return *for_testing_;
}
inline const ::perfetto::protos::TestConfig& DataSourceConfig::for_testing() const {
  const ::perfetto::protos::TestConfig* p = for_testing_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.for_testing)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TestConfig*>(
      &::perfetto::protos::_TestConfig_default_instance_);
}
inline ::perfetto::protos::TestConfig* DataSourceConfig::release_for_testing() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.for_testing)
  clear_has_for_testing();
  ::perfetto::protos::TestConfig* temp = for_testing_;
  for_testing_ = NULL;
  return temp;
}
inline ::perfetto::protos::TestConfig* DataSourceConfig::mutable_for_testing() {
  set_has_for_testing();
  if (for_testing_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TestConfig>(GetArenaNoVirtual());
    for_testing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.for_testing)
  return for_testing_;
}
inline void DataSourceConfig::set_allocated_for_testing(::perfetto::protos::TestConfig* for_testing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(for_testing_);
  }
  if (for_testing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      for_testing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, for_testing, submessage_arena);
    }
    set_has_for_testing();
  } else {
    clear_has_for_testing();
  }
  for_testing_ = for_testing;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.for_testing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
