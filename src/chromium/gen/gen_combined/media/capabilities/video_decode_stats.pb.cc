// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: video_decode_stats.proto

#include "video_decode_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace media {
class DecodeStatsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecodeStatsProto>
      _instance;
} _DecodeStatsProto_default_instance_;
}  // namespace media
namespace protobuf_video_5fdecode_5fstats_2eproto {
static void InitDefaultsDecodeStatsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::media::_DecodeStatsProto_default_instance_;
    new (ptr) ::media::DecodeStatsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::media::DecodeStatsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecodeStatsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecodeStatsProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DecodeStatsProto.base);
}

}  // namespace protobuf_video_5fdecode_5fstats_2eproto
namespace media {

// ===================================================================

void DecodeStatsProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecodeStatsProto::kFramesDecodedFieldNumber;
const int DecodeStatsProto::kFramesDroppedFieldNumber;
const int DecodeStatsProto::kFramesPowerEfficientFieldNumber;
const int DecodeStatsProto::kLastWriteDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecodeStatsProto::DecodeStatsProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_video_5fdecode_5fstats_2eproto::scc_info_DecodeStatsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:media.DecodeStatsProto)
}
DecodeStatsProto::DecodeStatsProto(const DecodeStatsProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frames_decoded_, &from.frames_decoded_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_write_date_) -
    reinterpret_cast<char*>(&frames_decoded_)) + sizeof(last_write_date_));
  // @@protoc_insertion_point(copy_constructor:media.DecodeStatsProto)
}

void DecodeStatsProto::SharedCtor() {
  ::memset(&frames_decoded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_write_date_) -
      reinterpret_cast<char*>(&frames_decoded_)) + sizeof(last_write_date_));
}

DecodeStatsProto::~DecodeStatsProto() {
  // @@protoc_insertion_point(destructor:media.DecodeStatsProto)
  SharedDtor();
}

void DecodeStatsProto::SharedDtor() {
}

void DecodeStatsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecodeStatsProto& DecodeStatsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_video_5fdecode_5fstats_2eproto::scc_info_DecodeStatsProto.base);
  return *internal_default_instance();
}


void DecodeStatsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:media.DecodeStatsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&frames_decoded_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_write_date_) -
        reinterpret_cast<char*>(&frames_decoded_)) + sizeof(last_write_date_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DecodeStatsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:media.DecodeStatsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 frames_decoded = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frames_decoded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frames_decoded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 frames_dropped = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_frames_dropped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frames_dropped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 frames_power_efficient = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_frames_power_efficient();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frames_power_efficient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double last_write_date = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_last_write_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_write_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:media.DecodeStatsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:media.DecodeStatsProto)
  return false;
#undef DO_
}

void DecodeStatsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:media.DecodeStatsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 frames_decoded = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->frames_decoded(), output);
  }

  // optional uint64 frames_dropped = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->frames_dropped(), output);
  }

  // optional uint64 frames_power_efficient = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->frames_power_efficient(), output);
  }

  // optional double last_write_date = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->last_write_date(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:media.DecodeStatsProto)
}

size_t DecodeStatsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:media.DecodeStatsProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 frames_decoded = 1;
    if (has_frames_decoded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->frames_decoded());
    }

    // optional uint64 frames_dropped = 2;
    if (has_frames_dropped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->frames_dropped());
    }

    // optional uint64 frames_power_efficient = 3;
    if (has_frames_power_efficient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->frames_power_efficient());
    }

    // optional double last_write_date = 7;
    if (has_last_write_date()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeStatsProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DecodeStatsProto*>(&from));
}

void DecodeStatsProto::MergeFrom(const DecodeStatsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:media.DecodeStatsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      frames_decoded_ = from.frames_decoded_;
    }
    if (cached_has_bits & 0x00000002u) {
      frames_dropped_ = from.frames_dropped_;
    }
    if (cached_has_bits & 0x00000004u) {
      frames_power_efficient_ = from.frames_power_efficient_;
    }
    if (cached_has_bits & 0x00000008u) {
      last_write_date_ = from.last_write_date_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DecodeStatsProto::CopyFrom(const DecodeStatsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:media.DecodeStatsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeStatsProto::IsInitialized() const {
  return true;
}

void DecodeStatsProto::Swap(DecodeStatsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecodeStatsProto::InternalSwap(DecodeStatsProto* other) {
  using std::swap;
  swap(frames_decoded_, other->frames_decoded_);
  swap(frames_dropped_, other->frames_dropped_);
  swap(frames_power_efficient_, other->frames_power_efficient_);
  swap(last_write_date_, other->last_write_date_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DecodeStatsProto::GetTypeName() const {
  return "media.DecodeStatsProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace media
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::media::DecodeStatsProto* Arena::CreateMaybeMessage< ::media::DecodeStatsProto >(Arena* arena) {
  return Arena::CreateInternal< ::media::DecodeStatsProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
