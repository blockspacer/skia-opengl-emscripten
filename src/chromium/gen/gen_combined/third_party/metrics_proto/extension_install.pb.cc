// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: extension_install.proto

#include "extension_install.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace metrics {
class ExtensionInstallProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionInstallProto>
      _instance;
} _ExtensionInstallProto_default_instance_;
}  // namespace metrics
namespace protobuf_extension_5finstall_2eproto {
static void InitDefaultsExtensionInstallProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metrics::_ExtensionInstallProto_default_instance_;
    new (ptr) ::metrics::ExtensionInstallProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metrics::ExtensionInstallProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExtensionInstallProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExtensionInstallProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExtensionInstallProto.base);
}

}  // namespace protobuf_extension_5finstall_2eproto
namespace metrics {
bool ExtensionInstallProto_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_Type ExtensionInstallProto::UNKNOWN_TYPE;
const ExtensionInstallProto_Type ExtensionInstallProto::EXTENSION;
const ExtensionInstallProto_Type ExtensionInstallProto::THEME;
const ExtensionInstallProto_Type ExtensionInstallProto::USER_SCRIPT;
const ExtensionInstallProto_Type ExtensionInstallProto::HOSTED_APP;
const ExtensionInstallProto_Type ExtensionInstallProto::LEGACY_PACKAGED_APP;
const ExtensionInstallProto_Type ExtensionInstallProto::PLATFORM_APP;
const ExtensionInstallProto_Type ExtensionInstallProto::SHARED_MODULE;
const ExtensionInstallProto_Type ExtensionInstallProto::Type_MIN;
const ExtensionInstallProto_Type ExtensionInstallProto::Type_MAX;
const int ExtensionInstallProto::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ExtensionInstallProto_InstallLocation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::UNKNOWN_LOCATION;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::INTERNAL;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_PREF;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_REGISTRY;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::UNPACKED;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::COMPONENT;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_PREF_DOWNLOAD;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_POLICY_DOWNLOAD;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::COMMAND_LINE;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_POLICY;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::EXTERNAL_COMPONENT;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::InstallLocation_MIN;
const ExtensionInstallProto_InstallLocation ExtensionInstallProto::InstallLocation_MAX;
const int ExtensionInstallProto::InstallLocation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ExtensionInstallProto_ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_ActionType ExtensionInstallProto::NO_ACTION;
const ExtensionInstallProto_ActionType ExtensionInstallProto::BROWSER_ACTION;
const ExtensionInstallProto_ActionType ExtensionInstallProto::PAGE_ACTION;
const ExtensionInstallProto_ActionType ExtensionInstallProto::SYSTEM_INDICATOR;
const ExtensionInstallProto_ActionType ExtensionInstallProto::ActionType_MIN;
const ExtensionInstallProto_ActionType ExtensionInstallProto::ActionType_MAX;
const int ExtensionInstallProto::ActionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ExtensionInstallProto_BackgroundScriptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_BackgroundScriptType ExtensionInstallProto::NO_BACKGROUND_SCRIPT;
const ExtensionInstallProto_BackgroundScriptType ExtensionInstallProto::PERSISTENT_BACKGROUND_PAGE;
const ExtensionInstallProto_BackgroundScriptType ExtensionInstallProto::EVENT_PAGE;
const ExtensionInstallProto_BackgroundScriptType ExtensionInstallProto::BackgroundScriptType_MIN;
const ExtensionInstallProto_BackgroundScriptType ExtensionInstallProto::BackgroundScriptType_MAX;
const int ExtensionInstallProto::BackgroundScriptType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ExtensionInstallProto_DisableReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_DisableReason ExtensionInstallProto::USER_ACTION;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::PERMISSIONS_INCREASE;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::RELOAD;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::UNSUPPORTED_REQUIREMENT;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::SIDELOAD_WIPEOUT;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::UNKNOWN_FROM_SYNC;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::NOT_VERIFIED;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::GREYLIST;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::CORRUPTED;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::REMOTE_INSTALL;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::EXTERNAL_EXTENSION;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::UPDATE_REQUIRED_BY_POLICY;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::CUSTODIAN_APPROVAL_REQUIRED;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::BLOCKED_BY_POLICY;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::DisableReason_MIN;
const ExtensionInstallProto_DisableReason ExtensionInstallProto::DisableReason_MAX;
const int ExtensionInstallProto::DisableReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ExtensionInstallProto_BlacklistState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::NOT_BLACKLISTED;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BLACKLISTED_MALWARE;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BLACKLISTED_SECURITY_VULNERABILITY;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BLACKLISTED_CWS_POLICY_VIOLATION;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BLACKLISTED_POTENTIALLY_UNWANTED;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BLACKLISTED_UNKNOWN;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BlacklistState_MIN;
const ExtensionInstallProto_BlacklistState ExtensionInstallProto::BlacklistState_MAX;
const int ExtensionInstallProto::BlacklistState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ExtensionInstallProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionInstallProto::kTypeFieldNumber;
const int ExtensionInstallProto::kInstallLocationFieldNumber;
const int ExtensionInstallProto::kManifestVersionFieldNumber;
const int ExtensionInstallProto::kActionTypeFieldNumber;
const int ExtensionInstallProto::kHasFileAccessFieldNumber;
const int ExtensionInstallProto::kHasIncognitoAccessFieldNumber;
const int ExtensionInstallProto::kIsFromStoreFieldNumber;
const int ExtensionInstallProto::kUpdatesFromStoreFieldNumber;
const int ExtensionInstallProto::kIsFromBookmarkFieldNumber;
const int ExtensionInstallProto::kIsConvertedFromUserScriptFieldNumber;
const int ExtensionInstallProto::kIsDefaultInstalledFieldNumber;
const int ExtensionInstallProto::kIsOemInstalledFieldNumber;
const int ExtensionInstallProto::kBackgroundScriptTypeFieldNumber;
const int ExtensionInstallProto::kDisableReasonsFieldNumber;
const int ExtensionInstallProto::kBlacklistStateFieldNumber;
const int ExtensionInstallProto::kInstalledInThisSamplePeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionInstallProto::ExtensionInstallProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_extension_5finstall_2eproto::scc_info_ExtensionInstallProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.ExtensionInstallProto)
}
ExtensionInstallProto::ExtensionInstallProto(const ExtensionInstallProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      disable_reasons_(from.disable_reasons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&installed_in_this_sample_period_) -
    reinterpret_cast<char*>(&type_)) + sizeof(installed_in_this_sample_period_));
  // @@protoc_insertion_point(copy_constructor:metrics.ExtensionInstallProto)
}

void ExtensionInstallProto::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&installed_in_this_sample_period_) -
      reinterpret_cast<char*>(&type_)) + sizeof(installed_in_this_sample_period_));
}

ExtensionInstallProto::~ExtensionInstallProto() {
  // @@protoc_insertion_point(destructor:metrics.ExtensionInstallProto)
  SharedDtor();
}

void ExtensionInstallProto::SharedDtor() {
}

void ExtensionInstallProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtensionInstallProto& ExtensionInstallProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_extension_5finstall_2eproto::scc_info_ExtensionInstallProto.base);
  return *internal_default_instance();
}


void ExtensionInstallProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.ExtensionInstallProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disable_reasons_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&updates_from_store_) -
        reinterpret_cast<char*>(&type_)) + sizeof(updates_from_store_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&is_from_bookmark_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&installed_in_this_sample_period_) -
        reinterpret_cast<char*>(&is_from_bookmark_)) + sizeof(installed_in_this_sample_period_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtensionInstallProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:metrics.ExtensionInstallProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metrics.ExtensionInstallProto.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_Type_IsValid(value)) {
            set_type(static_cast< ::metrics::ExtensionInstallProto_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ExtensionInstallProto.InstallLocation install_location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_InstallLocation_IsValid(value)) {
            set_install_location(static_cast< ::metrics::ExtensionInstallProto_InstallLocation >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 manifest_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_manifest_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &manifest_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ExtensionInstallProto.ActionType action_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_ActionType_IsValid(value)) {
            set_action_type(static_cast< ::metrics::ExtensionInstallProto_ActionType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_file_access = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_has_file_access();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_file_access_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_incognito_access = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_has_incognito_access();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_incognito_access_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_from_store = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_from_store();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_from_store_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool updates_from_store = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_updates_from_store();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updates_from_store_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_from_bookmark = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_from_bookmark();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_from_bookmark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_converted_from_user_script = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_converted_from_user_script();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_converted_from_user_script_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_default_installed = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_is_default_installed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_default_installed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_oem_installed = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_is_oem_installed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_oem_installed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ExtensionInstallProto.BackgroundScriptType background_script_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_BackgroundScriptType_IsValid(value)) {
            set_background_script_type(static_cast< ::metrics::ExtensionInstallProto_BackgroundScriptType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(104u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.ExtensionInstallProto.DisableReason disable_reasons = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_DisableReason_IsValid(value)) {
            add_disable_reasons(static_cast< ::metrics::ExtensionInstallProto_DisableReason >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 14,
                 ::metrics::ExtensionInstallProto_DisableReason_IsValid,
                 &unknown_fields_stream,
                 this->mutable_disable_reasons())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ExtensionInstallProto.BlacklistState blacklist_state = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ExtensionInstallProto_BlacklistState_IsValid(value)) {
            set_blacklist_state(static_cast< ::metrics::ExtensionInstallProto_BlacklistState >(value));
          } else {
            unknown_fields_stream.WriteVarint32(120u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool installed_in_this_sample_period = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_installed_in_this_sample_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &installed_in_this_sample_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.ExtensionInstallProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.ExtensionInstallProto)
  return false;
#undef DO_
}

void ExtensionInstallProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.ExtensionInstallProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .metrics.ExtensionInstallProto.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .metrics.ExtensionInstallProto.InstallLocation install_location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->install_location(), output);
  }

  // optional int32 manifest_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->manifest_version(), output);
  }

  // optional .metrics.ExtensionInstallProto.ActionType action_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action_type(), output);
  }

  // optional bool has_file_access = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->has_file_access(), output);
  }

  // optional bool has_incognito_access = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->has_incognito_access(), output);
  }

  // optional bool is_from_store = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_from_store(), output);
  }

  // optional bool updates_from_store = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->updates_from_store(), output);
  }

  // optional bool is_from_bookmark = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_from_bookmark(), output);
  }

  // optional bool is_converted_from_user_script = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_converted_from_user_script(), output);
  }

  // optional bool is_default_installed = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_default_installed(), output);
  }

  // optional bool is_oem_installed = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_oem_installed(), output);
  }

  // optional .metrics.ExtensionInstallProto.BackgroundScriptType background_script_type = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->background_script_type(), output);
  }

  // repeated .metrics.ExtensionInstallProto.DisableReason disable_reasons = 14;
  for (int i = 0, n = this->disable_reasons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->disable_reasons(i), output);
  }

  // optional .metrics.ExtensionInstallProto.BlacklistState blacklist_state = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->blacklist_state(), output);
  }

  // optional bool installed_in_this_sample_period = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->installed_in_this_sample_period(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:metrics.ExtensionInstallProto)
}

size_t ExtensionInstallProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.ExtensionInstallProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .metrics.ExtensionInstallProto.DisableReason disable_reasons = 14;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->disable_reasons_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->disable_reasons(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .metrics.ExtensionInstallProto.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .metrics.ExtensionInstallProto.InstallLocation install_location = 2;
    if (has_install_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->install_location());
    }

    // optional int32 manifest_version = 3;
    if (has_manifest_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->manifest_version());
    }

    // optional .metrics.ExtensionInstallProto.ActionType action_type = 4;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
    }

    // optional bool has_file_access = 5;
    if (has_has_file_access()) {
      total_size += 1 + 1;
    }

    // optional bool has_incognito_access = 6;
    if (has_has_incognito_access()) {
      total_size += 1 + 1;
    }

    // optional bool is_from_store = 7;
    if (has_is_from_store()) {
      total_size += 1 + 1;
    }

    // optional bool updates_from_store = 8;
    if (has_updates_from_store()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional bool is_from_bookmark = 9;
    if (has_is_from_bookmark()) {
      total_size += 1 + 1;
    }

    // optional bool is_converted_from_user_script = 10;
    if (has_is_converted_from_user_script()) {
      total_size += 1 + 1;
    }

    // optional bool is_default_installed = 11;
    if (has_is_default_installed()) {
      total_size += 1 + 1;
    }

    // optional bool is_oem_installed = 12;
    if (has_is_oem_installed()) {
      total_size += 1 + 1;
    }

    // optional .metrics.ExtensionInstallProto.BackgroundScriptType background_script_type = 13;
    if (has_background_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->background_script_type());
    }

    // optional .metrics.ExtensionInstallProto.BlacklistState blacklist_state = 15;
    if (has_blacklist_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->blacklist_state());
    }

    // optional bool installed_in_this_sample_period = 16;
    if (has_installed_in_this_sample_period()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionInstallProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ExtensionInstallProto*>(&from));
}

void ExtensionInstallProto::MergeFrom(const ExtensionInstallProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.ExtensionInstallProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disable_reasons_.MergeFrom(from.disable_reasons_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      install_location_ = from.install_location_;
    }
    if (cached_has_bits & 0x00000004u) {
      manifest_version_ = from.manifest_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      has_file_access_ = from.has_file_access_;
    }
    if (cached_has_bits & 0x00000020u) {
      has_incognito_access_ = from.has_incognito_access_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_from_store_ = from.is_from_store_;
    }
    if (cached_has_bits & 0x00000080u) {
      updates_from_store_ = from.updates_from_store_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      is_from_bookmark_ = from.is_from_bookmark_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_converted_from_user_script_ = from.is_converted_from_user_script_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_default_installed_ = from.is_default_installed_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_oem_installed_ = from.is_oem_installed_;
    }
    if (cached_has_bits & 0x00001000u) {
      background_script_type_ = from.background_script_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      blacklist_state_ = from.blacklist_state_;
    }
    if (cached_has_bits & 0x00004000u) {
      installed_in_this_sample_period_ = from.installed_in_this_sample_period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtensionInstallProto::CopyFrom(const ExtensionInstallProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.ExtensionInstallProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionInstallProto::IsInitialized() const {
  return true;
}

void ExtensionInstallProto::Swap(ExtensionInstallProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionInstallProto::InternalSwap(ExtensionInstallProto* other) {
  using std::swap;
  disable_reasons_.InternalSwap(&other->disable_reasons_);
  swap(type_, other->type_);
  swap(install_location_, other->install_location_);
  swap(manifest_version_, other->manifest_version_);
  swap(action_type_, other->action_type_);
  swap(has_file_access_, other->has_file_access_);
  swap(has_incognito_access_, other->has_incognito_access_);
  swap(is_from_store_, other->is_from_store_);
  swap(updates_from_store_, other->updates_from_store_);
  swap(is_from_bookmark_, other->is_from_bookmark_);
  swap(is_converted_from_user_script_, other->is_converted_from_user_script_);
  swap(is_default_installed_, other->is_default_installed_);
  swap(is_oem_installed_, other->is_oem_installed_);
  swap(background_script_type_, other->background_script_type_);
  swap(blacklist_state_, other->blacklist_state_);
  swap(installed_in_this_sample_period_, other->installed_in_this_sample_period_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ExtensionInstallProto::GetTypeName() const {
  return "metrics.ExtensionInstallProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace metrics
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metrics::ExtensionInstallProto* Arena::CreateMaybeMessage< ::metrics::ExtensionInstallProto >(Arena* arena) {
  return Arena::CreateInternal< ::metrics::ExtensionInstallProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
