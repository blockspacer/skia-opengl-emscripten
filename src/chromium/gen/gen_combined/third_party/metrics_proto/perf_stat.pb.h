// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perf_stat.proto

#ifndef PROTOBUF_INCLUDED_perf_5fstat_2eproto
#define PROTOBUF_INCLUDED_perf_5fstat_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perf_5fstat_2eproto 

namespace protobuf_perf_5fstat_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perf_5fstat_2eproto
namespace metrics {
class PerfStatProto;
class PerfStatProtoDefaultTypeInternal;
extern PerfStatProtoDefaultTypeInternal _PerfStatProto_default_instance_;
class PerfStatProto_PerfStatLine;
class PerfStatProto_PerfStatLineDefaultTypeInternal;
extern PerfStatProto_PerfStatLineDefaultTypeInternal _PerfStatProto_PerfStatLine_default_instance_;
}  // namespace metrics
namespace google {
namespace protobuf {
template<> ::metrics::PerfStatProto* Arena::CreateMaybeMessage<::metrics::PerfStatProto>(Arena*);
template<> ::metrics::PerfStatProto_PerfStatLine* Arena::CreateMaybeMessage<::metrics::PerfStatProto_PerfStatLine>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metrics {

// ===================================================================

class PerfStatProto_PerfStatLine : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metrics.PerfStatProto.PerfStatLine) */ {
 public:
  PerfStatProto_PerfStatLine();
  virtual ~PerfStatProto_PerfStatLine();

  PerfStatProto_PerfStatLine(const PerfStatProto_PerfStatLine& from);

  inline PerfStatProto_PerfStatLine& operator=(const PerfStatProto_PerfStatLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerfStatProto_PerfStatLine(PerfStatProto_PerfStatLine&& from) noexcept
    : PerfStatProto_PerfStatLine() {
    *this = ::std::move(from);
  }

  inline PerfStatProto_PerfStatLine& operator=(PerfStatProto_PerfStatLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PerfStatProto_PerfStatLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerfStatProto_PerfStatLine* internal_default_instance() {
    return reinterpret_cast<const PerfStatProto_PerfStatLine*>(
               &_PerfStatProto_PerfStatLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PerfStatProto_PerfStatLine* other);
  friend void swap(PerfStatProto_PerfStatLine& a, PerfStatProto_PerfStatLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerfStatProto_PerfStatLine* New() const final {
    return CreateMaybeMessage<PerfStatProto_PerfStatLine>(NULL);
  }

  PerfStatProto_PerfStatLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerfStatProto_PerfStatLine>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PerfStatProto_PerfStatLine& from);
  void MergeFrom(const PerfStatProto_PerfStatLine& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PerfStatProto_PerfStatLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string event_name = 3;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 3;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional uint64 time_ms = 1;
  bool has_time_ms() const;
  void clear_time_ms();
  static const int kTimeMsFieldNumber = 1;
  ::google::protobuf::uint64 time_ms() const;
  void set_time_ms(::google::protobuf::uint64 value);

  // optional uint64 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:metrics.PerfStatProto.PerfStatLine)
 private:
  void set_has_time_ms();
  void clear_has_time_ms();
  void set_has_count();
  void clear_has_count();
  void set_has_event_name();
  void clear_has_event_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::uint64 time_ms_;
  ::google::protobuf::uint64 count_;
  friend struct ::protobuf_perf_5fstat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PerfStatProto : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:metrics.PerfStatProto) */ {
 public:
  PerfStatProto();
  virtual ~PerfStatProto();

  PerfStatProto(const PerfStatProto& from);

  inline PerfStatProto& operator=(const PerfStatProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerfStatProto(PerfStatProto&& from) noexcept
    : PerfStatProto() {
    *this = ::std::move(from);
  }

  inline PerfStatProto& operator=(PerfStatProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PerfStatProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerfStatProto* internal_default_instance() {
    return reinterpret_cast<const PerfStatProto*>(
               &_PerfStatProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(PerfStatProto* other);
  friend void swap(PerfStatProto& a, PerfStatProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerfStatProto* New() const final {
    return CreateMaybeMessage<PerfStatProto>(NULL);
  }

  PerfStatProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerfStatProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PerfStatProto& from);
  void MergeFrom(const PerfStatProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PerfStatProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PerfStatProto_PerfStatLine PerfStatLine;

  // accessors -------------------------------------------------------

  // repeated .metrics.PerfStatProto.PerfStatLine line = 1;
  int line_size() const;
  void clear_line();
  static const int kLineFieldNumber = 1;
  ::metrics::PerfStatProto_PerfStatLine* mutable_line(int index);
  ::google::protobuf::RepeatedPtrField< ::metrics::PerfStatProto_PerfStatLine >*
      mutable_line();
  const ::metrics::PerfStatProto_PerfStatLine& line(int index) const;
  ::metrics::PerfStatProto_PerfStatLine* add_line();
  const ::google::protobuf::RepeatedPtrField< ::metrics::PerfStatProto_PerfStatLine >&
      line() const;

  // optional string command_line = 2;
  bool has_command_line() const;
  void clear_command_line();
  static const int kCommandLineFieldNumber = 2;
  const ::std::string& command_line() const;
  void set_command_line(const ::std::string& value);
  #if LANG_CXX11
  void set_command_line(::std::string&& value);
  #endif
  void set_command_line(const char* value);
  void set_command_line(const char* value, size_t size);
  ::std::string* mutable_command_line();
  ::std::string* release_command_line();
  void set_allocated_command_line(::std::string* command_line);

  // @@protoc_insertion_point(class_scope:metrics.PerfStatProto)
 private:
  void set_has_command_line();
  void clear_has_command_line();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metrics::PerfStatProto_PerfStatLine > line_;
  ::google::protobuf::internal::ArenaStringPtr command_line_;
  friend struct ::protobuf_perf_5fstat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerfStatProto_PerfStatLine

// optional uint64 time_ms = 1;
inline bool PerfStatProto_PerfStatLine::has_time_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_time_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PerfStatProto_PerfStatLine::clear_has_time_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PerfStatProto_PerfStatLine::clear_time_ms() {
  time_ms_ = GOOGLE_ULONGLONG(0);
  clear_has_time_ms();
}
inline ::google::protobuf::uint64 PerfStatProto_PerfStatLine::time_ms() const {
  // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.time_ms)
  return time_ms_;
}
inline void PerfStatProto_PerfStatLine::set_time_ms(::google::protobuf::uint64 value) {
  set_has_time_ms();
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.time_ms)
}

// optional uint64 count = 2;
inline bool PerfStatProto_PerfStatLine::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PerfStatProto_PerfStatLine::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PerfStatProto_PerfStatLine::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 PerfStatProto_PerfStatLine::count() const {
  // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.count)
  return count_;
}
inline void PerfStatProto_PerfStatLine::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.count)
}

// optional string event_name = 3;
inline bool PerfStatProto_PerfStatLine::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_event_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerfStatProto_PerfStatLine::clear_has_event_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerfStatProto_PerfStatLine::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_event_name();
}
inline const ::std::string& PerfStatProto_PerfStatLine::event_name() const {
  // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.event_name)
  return event_name_.GetNoArena();
}
inline void PerfStatProto_PerfStatLine::set_event_name(const ::std::string& value) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.event_name)
}
#if LANG_CXX11
inline void PerfStatProto_PerfStatLine::set_event_name(::std::string&& value) {
  set_has_event_name();
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.PerfStatProto.PerfStatLine.event_name)
}
#endif
inline void PerfStatProto_PerfStatLine::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.PerfStatProto.PerfStatLine.event_name)
}
inline void PerfStatProto_PerfStatLine::set_event_name(const char* value, size_t size) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.PerfStatProto.PerfStatLine.event_name)
}
inline ::std::string* PerfStatProto_PerfStatLine::mutable_event_name() {
  set_has_event_name();
  // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.PerfStatLine.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerfStatProto_PerfStatLine::release_event_name() {
  // @@protoc_insertion_point(field_release:metrics.PerfStatProto.PerfStatLine.event_name)
  if (!has_event_name()) {
    return NULL;
  }
  clear_has_event_name();
  return event_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto_PerfStatLine::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    set_has_event_name();
  } else {
    clear_has_event_name();
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:metrics.PerfStatProto.PerfStatLine.event_name)
}

// -------------------------------------------------------------------

// PerfStatProto

// repeated .metrics.PerfStatProto.PerfStatLine line = 1;
inline int PerfStatProto::line_size() const {
  return line_.size();
}
inline void PerfStatProto::clear_line() {
  line_.Clear();
}
inline ::metrics::PerfStatProto_PerfStatLine* PerfStatProto::mutable_line(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.line)
  return line_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metrics::PerfStatProto_PerfStatLine >*
PerfStatProto::mutable_line() {
  // @@protoc_insertion_point(field_mutable_list:metrics.PerfStatProto.line)
  return &line_;
}
inline const ::metrics::PerfStatProto_PerfStatLine& PerfStatProto::line(int index) const {
  // @@protoc_insertion_point(field_get:metrics.PerfStatProto.line)
  return line_.Get(index);
}
inline ::metrics::PerfStatProto_PerfStatLine* PerfStatProto::add_line() {
  // @@protoc_insertion_point(field_add:metrics.PerfStatProto.line)
  return line_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metrics::PerfStatProto_PerfStatLine >&
PerfStatProto::line() const {
  // @@protoc_insertion_point(field_list:metrics.PerfStatProto.line)
  return line_;
}

// optional string command_line = 2;
inline bool PerfStatProto::has_command_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerfStatProto::set_has_command_line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerfStatProto::clear_has_command_line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerfStatProto::clear_command_line() {
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command_line();
}
inline const ::std::string& PerfStatProto::command_line() const {
  // @@protoc_insertion_point(field_get:metrics.PerfStatProto.command_line)
  return command_line_.GetNoArena();
}
inline void PerfStatProto::set_command_line(const ::std::string& value) {
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.PerfStatProto.command_line)
}
#if LANG_CXX11
inline void PerfStatProto::set_command_line(::std::string&& value) {
  set_has_command_line();
  command_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.PerfStatProto.command_line)
}
#endif
inline void PerfStatProto::set_command_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.PerfStatProto.command_line)
}
inline void PerfStatProto::set_command_line(const char* value, size_t size) {
  set_has_command_line();
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.PerfStatProto.command_line)
}
inline ::std::string* PerfStatProto::mutable_command_line() {
  set_has_command_line();
  // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.command_line)
  return command_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerfStatProto::release_command_line() {
  // @@protoc_insertion_point(field_release:metrics.PerfStatProto.command_line)
  if (!has_command_line()) {
    return NULL;
  }
  clear_has_command_line();
  return command_line_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto::set_allocated_command_line(::std::string* command_line) {
  if (command_line != NULL) {
    set_has_command_line();
  } else {
    clear_has_command_line();
  }
  command_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line);
  // @@protoc_insertion_point(field_set_allocated:metrics.PerfStatProto.command_line)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perf_5fstat_2eproto
