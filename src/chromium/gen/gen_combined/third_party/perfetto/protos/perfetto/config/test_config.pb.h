// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/test_config.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2fconfig_2ftest_5fconfig_2eproto
#define PROTOBUF_INCLUDED_perfetto_2fconfig_2ftest_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto 

namespace protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto
namespace perfetto {
namespace protos {
class TestConfig;
class TestConfigDefaultTypeInternal;
extern TestConfigDefaultTypeInternal _TestConfig_default_instance_;
class TestConfig_DummyFields;
class TestConfig_DummyFieldsDefaultTypeInternal;
extern TestConfig_DummyFieldsDefaultTypeInternal _TestConfig_DummyFields_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::TestConfig* Arena::CreateMaybeMessage<::perfetto::protos::TestConfig>(Arena*);
template<> ::perfetto::protos::TestConfig_DummyFields* Arena::CreateMaybeMessage<::perfetto::protos::TestConfig_DummyFields>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

// ===================================================================

class TestConfig_DummyFields : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TestConfig.DummyFields) */ {
 public:
  TestConfig_DummyFields();
  virtual ~TestConfig_DummyFields();

  TestConfig_DummyFields(const TestConfig_DummyFields& from);

  inline TestConfig_DummyFields& operator=(const TestConfig_DummyFields& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestConfig_DummyFields(TestConfig_DummyFields&& from) noexcept
    : TestConfig_DummyFields() {
    *this = ::std::move(from);
  }

  inline TestConfig_DummyFields& operator=(TestConfig_DummyFields&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TestConfig_DummyFields& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestConfig_DummyFields* internal_default_instance() {
    return reinterpret_cast<const TestConfig_DummyFields*>(
               &_TestConfig_DummyFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TestConfig_DummyFields* other);
  friend void swap(TestConfig_DummyFields& a, TestConfig_DummyFields& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestConfig_DummyFields* New() const final {
    return CreateMaybeMessage<TestConfig_DummyFields>(NULL);
  }

  TestConfig_DummyFields* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestConfig_DummyFields>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TestConfig_DummyFields& from);
  void MergeFrom(const TestConfig_DummyFields& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestConfig_DummyFields* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string field_string = 13;
  bool has_field_string() const;
  void clear_field_string();
  static const int kFieldStringFieldNumber = 13;
  const ::std::string& field_string() const;
  void set_field_string(const ::std::string& value);
  #if LANG_CXX11
  void set_field_string(::std::string&& value);
  #endif
  void set_field_string(const char* value);
  void set_field_string(const char* value, size_t size);
  ::std::string* mutable_field_string();
  ::std::string* release_field_string();
  void set_allocated_field_string(::std::string* field_string);

  // optional bytes field_bytes = 14;
  bool has_field_bytes() const;
  void clear_field_bytes();
  static const int kFieldBytesFieldNumber = 14;
  const ::std::string& field_bytes() const;
  void set_field_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_field_bytes(::std::string&& value);
  #endif
  void set_field_bytes(const char* value);
  void set_field_bytes(const void* value, size_t size);
  ::std::string* mutable_field_bytes();
  ::std::string* release_field_bytes();
  void set_allocated_field_bytes(::std::string* field_bytes);

  // optional uint32 field_uint32 = 1;
  bool has_field_uint32() const;
  void clear_field_uint32();
  static const int kFieldUint32FieldNumber = 1;
  ::google::protobuf::uint32 field_uint32() const;
  void set_field_uint32(::google::protobuf::uint32 value);

  // optional int32 field_int32 = 2;
  bool has_field_int32() const;
  void clear_field_int32();
  static const int kFieldInt32FieldNumber = 2;
  ::google::protobuf::int32 field_int32() const;
  void set_field_int32(::google::protobuf::int32 value);

  // optional uint64 field_uint64 = 3;
  bool has_field_uint64() const;
  void clear_field_uint64();
  static const int kFieldUint64FieldNumber = 3;
  ::google::protobuf::uint64 field_uint64() const;
  void set_field_uint64(::google::protobuf::uint64 value);

  // optional int64 field_int64 = 4;
  bool has_field_int64() const;
  void clear_field_int64();
  static const int kFieldInt64FieldNumber = 4;
  ::google::protobuf::int64 field_int64() const;
  void set_field_int64(::google::protobuf::int64 value);

  // optional fixed64 field_fixed64 = 5;
  bool has_field_fixed64() const;
  void clear_field_fixed64();
  static const int kFieldFixed64FieldNumber = 5;
  ::google::protobuf::uint64 field_fixed64() const;
  void set_field_fixed64(::google::protobuf::uint64 value);

  // optional sfixed64 field_sfixed64 = 6;
  bool has_field_sfixed64() const;
  void clear_field_sfixed64();
  static const int kFieldSfixed64FieldNumber = 6;
  ::google::protobuf::int64 field_sfixed64() const;
  void set_field_sfixed64(::google::protobuf::int64 value);

  // optional fixed32 field_fixed32 = 7;
  bool has_field_fixed32() const;
  void clear_field_fixed32();
  static const int kFieldFixed32FieldNumber = 7;
  ::google::protobuf::uint32 field_fixed32() const;
  void set_field_fixed32(::google::protobuf::uint32 value);

  // optional sfixed32 field_sfixed32 = 8;
  bool has_field_sfixed32() const;
  void clear_field_sfixed32();
  static const int kFieldSfixed32FieldNumber = 8;
  ::google::protobuf::int32 field_sfixed32() const;
  void set_field_sfixed32(::google::protobuf::int32 value);

  // optional double field_double = 9;
  bool has_field_double() const;
  void clear_field_double();
  static const int kFieldDoubleFieldNumber = 9;
  double field_double() const;
  void set_field_double(double value);

  // optional sint64 field_sint64 = 11;
  bool has_field_sint64() const;
  void clear_field_sint64();
  static const int kFieldSint64FieldNumber = 11;
  ::google::protobuf::int64 field_sint64() const;
  void set_field_sint64(::google::protobuf::int64 value);

  // optional float field_float = 10;
  bool has_field_float() const;
  void clear_field_float();
  static const int kFieldFloatFieldNumber = 10;
  float field_float() const;
  void set_field_float(float value);

  // optional sint32 field_sint32 = 12;
  bool has_field_sint32() const;
  void clear_field_sint32();
  static const int kFieldSint32FieldNumber = 12;
  ::google::protobuf::int32 field_sint32() const;
  void set_field_sint32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TestConfig.DummyFields)
 private:
  void set_has_field_uint32();
  void clear_has_field_uint32();
  void set_has_field_int32();
  void clear_has_field_int32();
  void set_has_field_uint64();
  void clear_has_field_uint64();
  void set_has_field_int64();
  void clear_has_field_int64();
  void set_has_field_fixed64();
  void clear_has_field_fixed64();
  void set_has_field_sfixed64();
  void clear_has_field_sfixed64();
  void set_has_field_fixed32();
  void clear_has_field_fixed32();
  void set_has_field_sfixed32();
  void clear_has_field_sfixed32();
  void set_has_field_double();
  void clear_has_field_double();
  void set_has_field_float();
  void clear_has_field_float();
  void set_has_field_sint64();
  void clear_has_field_sint64();
  void set_has_field_sint32();
  void clear_has_field_sint32();
  void set_has_field_string();
  void clear_has_field_string();
  void set_has_field_bytes();
  void clear_has_field_bytes();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr field_string_;
  ::google::protobuf::internal::ArenaStringPtr field_bytes_;
  ::google::protobuf::uint32 field_uint32_;
  ::google::protobuf::int32 field_int32_;
  ::google::protobuf::uint64 field_uint64_;
  ::google::protobuf::int64 field_int64_;
  ::google::protobuf::uint64 field_fixed64_;
  ::google::protobuf::int64 field_sfixed64_;
  ::google::protobuf::uint32 field_fixed32_;
  ::google::protobuf::int32 field_sfixed32_;
  double field_double_;
  ::google::protobuf::int64 field_sint64_;
  float field_float_;
  ::google::protobuf::int32 field_sint32_;
  friend struct ::protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TestConfig) */ {
 public:
  TestConfig();
  virtual ~TestConfig();

  TestConfig(const TestConfig& from);

  inline TestConfig& operator=(const TestConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestConfig(TestConfig&& from) noexcept
    : TestConfig() {
    *this = ::std::move(from);
  }

  inline TestConfig& operator=(TestConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TestConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestConfig* internal_default_instance() {
    return reinterpret_cast<const TestConfig*>(
               &_TestConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TestConfig* other);
  friend void swap(TestConfig& a, TestConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestConfig* New() const final {
    return CreateMaybeMessage<TestConfig>(NULL);
  }

  TestConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TestConfig& from);
  void MergeFrom(const TestConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TestConfig_DummyFields DummyFields;

  // accessors -------------------------------------------------------

  // optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;
  bool has_dummy_fields() const;
  void clear_dummy_fields();
  static const int kDummyFieldsFieldNumber = 6;
  private:
  const ::perfetto::protos::TestConfig_DummyFields& _internal_dummy_fields() const;
  public:
  const ::perfetto::protos::TestConfig_DummyFields& dummy_fields() const;
  ::perfetto::protos::TestConfig_DummyFields* release_dummy_fields();
  ::perfetto::protos::TestConfig_DummyFields* mutable_dummy_fields();
  void set_allocated_dummy_fields(::perfetto::protos::TestConfig_DummyFields* dummy_fields);

  // optional uint32 message_count = 1;
  bool has_message_count() const;
  void clear_message_count();
  static const int kMessageCountFieldNumber = 1;
  ::google::protobuf::uint32 message_count() const;
  void set_message_count(::google::protobuf::uint32 value);

  // optional uint32 max_messages_per_second = 2;
  bool has_max_messages_per_second() const;
  void clear_max_messages_per_second();
  static const int kMaxMessagesPerSecondFieldNumber = 2;
  ::google::protobuf::uint32 max_messages_per_second() const;
  void set_max_messages_per_second(::google::protobuf::uint32 value);

  // optional uint32 seed = 3;
  bool has_seed() const;
  void clear_seed();
  static const int kSeedFieldNumber = 3;
  ::google::protobuf::uint32 seed() const;
  void set_seed(::google::protobuf::uint32 value);

  // optional uint32 message_size = 4;
  bool has_message_size() const;
  void clear_message_size();
  static const int kMessageSizeFieldNumber = 4;
  ::google::protobuf::uint32 message_size() const;
  void set_message_size(::google::protobuf::uint32 value);

  // optional bool send_batch_on_register = 5;
  bool has_send_batch_on_register() const;
  void clear_send_batch_on_register();
  static const int kSendBatchOnRegisterFieldNumber = 5;
  bool send_batch_on_register() const;
  void set_send_batch_on_register(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TestConfig)
 private:
  void set_has_message_count();
  void clear_has_message_count();
  void set_has_max_messages_per_second();
  void clear_has_max_messages_per_second();
  void set_has_seed();
  void clear_has_seed();
  void set_has_message_size();
  void clear_has_message_size();
  void set_has_send_batch_on_register();
  void clear_has_send_batch_on_register();
  void set_has_dummy_fields();
  void clear_has_dummy_fields();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::perfetto::protos::TestConfig_DummyFields* dummy_fields_;
  ::google::protobuf::uint32 message_count_;
  ::google::protobuf::uint32 max_messages_per_second_;
  ::google::protobuf::uint32 seed_;
  ::google::protobuf::uint32 message_size_;
  bool send_batch_on_register_;
  friend struct ::protobuf_perfetto_2fconfig_2ftest_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestConfig_DummyFields

// optional uint32 field_uint32 = 1;
inline bool TestConfig_DummyFields::has_field_uint32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_uint32() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestConfig_DummyFields::clear_has_field_uint32() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestConfig_DummyFields::clear_field_uint32() {
  field_uint32_ = 0u;
  clear_has_field_uint32();
}
inline ::google::protobuf::uint32 TestConfig_DummyFields::field_uint32() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_uint32)
  return field_uint32_;
}
inline void TestConfig_DummyFields::set_field_uint32(::google::protobuf::uint32 value) {
  set_has_field_uint32();
  field_uint32_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_uint32)
}

// optional int32 field_int32 = 2;
inline bool TestConfig_DummyFields::has_field_int32() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_int32() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestConfig_DummyFields::clear_has_field_int32() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestConfig_DummyFields::clear_field_int32() {
  field_int32_ = 0;
  clear_has_field_int32();
}
inline ::google::protobuf::int32 TestConfig_DummyFields::field_int32() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_int32)
  return field_int32_;
}
inline void TestConfig_DummyFields::set_field_int32(::google::protobuf::int32 value) {
  set_has_field_int32();
  field_int32_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_int32)
}

// optional uint64 field_uint64 = 3;
inline bool TestConfig_DummyFields::has_field_uint64() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_uint64() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TestConfig_DummyFields::clear_has_field_uint64() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TestConfig_DummyFields::clear_field_uint64() {
  field_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_field_uint64();
}
inline ::google::protobuf::uint64 TestConfig_DummyFields::field_uint64() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_uint64)
  return field_uint64_;
}
inline void TestConfig_DummyFields::set_field_uint64(::google::protobuf::uint64 value) {
  set_has_field_uint64();
  field_uint64_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_uint64)
}

// optional int64 field_int64 = 4;
inline bool TestConfig_DummyFields::has_field_int64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_int64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TestConfig_DummyFields::clear_has_field_int64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TestConfig_DummyFields::clear_field_int64() {
  field_int64_ = GOOGLE_LONGLONG(0);
  clear_has_field_int64();
}
inline ::google::protobuf::int64 TestConfig_DummyFields::field_int64() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_int64)
  return field_int64_;
}
inline void TestConfig_DummyFields::set_field_int64(::google::protobuf::int64 value) {
  set_has_field_int64();
  field_int64_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_int64)
}

// optional fixed64 field_fixed64 = 5;
inline bool TestConfig_DummyFields::has_field_fixed64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_fixed64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TestConfig_DummyFields::clear_has_field_fixed64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TestConfig_DummyFields::clear_field_fixed64() {
  field_fixed64_ = GOOGLE_ULONGLONG(0);
  clear_has_field_fixed64();
}
inline ::google::protobuf::uint64 TestConfig_DummyFields::field_fixed64() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_fixed64)
  return field_fixed64_;
}
inline void TestConfig_DummyFields::set_field_fixed64(::google::protobuf::uint64 value) {
  set_has_field_fixed64();
  field_fixed64_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_fixed64)
}

// optional sfixed64 field_sfixed64 = 6;
inline bool TestConfig_DummyFields::has_field_sfixed64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_sfixed64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TestConfig_DummyFields::clear_has_field_sfixed64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TestConfig_DummyFields::clear_field_sfixed64() {
  field_sfixed64_ = GOOGLE_LONGLONG(0);
  clear_has_field_sfixed64();
}
inline ::google::protobuf::int64 TestConfig_DummyFields::field_sfixed64() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_sfixed64)
  return field_sfixed64_;
}
inline void TestConfig_DummyFields::set_field_sfixed64(::google::protobuf::int64 value) {
  set_has_field_sfixed64();
  field_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_sfixed64)
}

// optional fixed32 field_fixed32 = 7;
inline bool TestConfig_DummyFields::has_field_fixed32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_fixed32() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TestConfig_DummyFields::clear_has_field_fixed32() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TestConfig_DummyFields::clear_field_fixed32() {
  field_fixed32_ = 0u;
  clear_has_field_fixed32();
}
inline ::google::protobuf::uint32 TestConfig_DummyFields::field_fixed32() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_fixed32)
  return field_fixed32_;
}
inline void TestConfig_DummyFields::set_field_fixed32(::google::protobuf::uint32 value) {
  set_has_field_fixed32();
  field_fixed32_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_fixed32)
}

// optional sfixed32 field_sfixed32 = 8;
inline bool TestConfig_DummyFields::has_field_sfixed32() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_sfixed32() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TestConfig_DummyFields::clear_has_field_sfixed32() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TestConfig_DummyFields::clear_field_sfixed32() {
  field_sfixed32_ = 0;
  clear_has_field_sfixed32();
}
inline ::google::protobuf::int32 TestConfig_DummyFields::field_sfixed32() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_sfixed32)
  return field_sfixed32_;
}
inline void TestConfig_DummyFields::set_field_sfixed32(::google::protobuf::int32 value) {
  set_has_field_sfixed32();
  field_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_sfixed32)
}

// optional double field_double = 9;
inline bool TestConfig_DummyFields::has_field_double() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_double() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TestConfig_DummyFields::clear_has_field_double() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TestConfig_DummyFields::clear_field_double() {
  field_double_ = 0;
  clear_has_field_double();
}
inline double TestConfig_DummyFields::field_double() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_double)
  return field_double_;
}
inline void TestConfig_DummyFields::set_field_double(double value) {
  set_has_field_double();
  field_double_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_double)
}

// optional float field_float = 10;
inline bool TestConfig_DummyFields::has_field_float() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_float() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TestConfig_DummyFields::clear_has_field_float() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TestConfig_DummyFields::clear_field_float() {
  field_float_ = 0;
  clear_has_field_float();
}
inline float TestConfig_DummyFields::field_float() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_float)
  return field_float_;
}
inline void TestConfig_DummyFields::set_field_float(float value) {
  set_has_field_float();
  field_float_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_float)
}

// optional sint64 field_sint64 = 11;
inline bool TestConfig_DummyFields::has_field_sint64() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_sint64() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TestConfig_DummyFields::clear_has_field_sint64() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TestConfig_DummyFields::clear_field_sint64() {
  field_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_field_sint64();
}
inline ::google::protobuf::int64 TestConfig_DummyFields::field_sint64() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_sint64)
  return field_sint64_;
}
inline void TestConfig_DummyFields::set_field_sint64(::google::protobuf::int64 value) {
  set_has_field_sint64();
  field_sint64_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_sint64)
}

// optional sint32 field_sint32 = 12;
inline bool TestConfig_DummyFields::has_field_sint32() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_sint32() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TestConfig_DummyFields::clear_has_field_sint32() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TestConfig_DummyFields::clear_field_sint32() {
  field_sint32_ = 0;
  clear_has_field_sint32();
}
inline ::google::protobuf::int32 TestConfig_DummyFields::field_sint32() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_sint32)
  return field_sint32_;
}
inline void TestConfig_DummyFields::set_field_sint32(::google::protobuf::int32 value) {
  set_has_field_sint32();
  field_sint32_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_sint32)
}

// optional string field_string = 13;
inline bool TestConfig_DummyFields::has_field_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestConfig_DummyFields::clear_has_field_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestConfig_DummyFields::clear_field_string() {
  field_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field_string();
}
inline const ::std::string& TestConfig_DummyFields::field_string() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_string)
  return field_string_.GetNoArena();
}
inline void TestConfig_DummyFields::set_field_string(const ::std::string& value) {
  set_has_field_string();
  field_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_string)
}
#if LANG_CXX11
inline void TestConfig_DummyFields::set_field_string(::std::string&& value) {
  set_has_field_string();
  field_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TestConfig.DummyFields.field_string)
}
#endif
inline void TestConfig_DummyFields::set_field_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_field_string();
  field_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TestConfig.DummyFields.field_string)
}
inline void TestConfig_DummyFields::set_field_string(const char* value, size_t size) {
  set_has_field_string();
  field_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TestConfig.DummyFields.field_string)
}
inline ::std::string* TestConfig_DummyFields::mutable_field_string() {
  set_has_field_string();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TestConfig.DummyFields.field_string)
  return field_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestConfig_DummyFields::release_field_string() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TestConfig.DummyFields.field_string)
  if (!has_field_string()) {
    return NULL;
  }
  clear_has_field_string();
  return field_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestConfig_DummyFields::set_allocated_field_string(::std::string* field_string) {
  if (field_string != NULL) {
    set_has_field_string();
  } else {
    clear_has_field_string();
  }
  field_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_string);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TestConfig.DummyFields.field_string)
}

// optional bytes field_bytes = 14;
inline bool TestConfig_DummyFields::has_field_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestConfig_DummyFields::set_has_field_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestConfig_DummyFields::clear_has_field_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestConfig_DummyFields::clear_field_bytes() {
  field_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field_bytes();
}
inline const ::std::string& TestConfig_DummyFields::field_bytes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.DummyFields.field_bytes)
  return field_bytes_.GetNoArena();
}
inline void TestConfig_DummyFields::set_field_bytes(const ::std::string& value) {
  set_has_field_bytes();
  field_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.DummyFields.field_bytes)
}
#if LANG_CXX11
inline void TestConfig_DummyFields::set_field_bytes(::std::string&& value) {
  set_has_field_bytes();
  field_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TestConfig.DummyFields.field_bytes)
}
#endif
inline void TestConfig_DummyFields::set_field_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_field_bytes();
  field_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TestConfig.DummyFields.field_bytes)
}
inline void TestConfig_DummyFields::set_field_bytes(const void* value, size_t size) {
  set_has_field_bytes();
  field_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TestConfig.DummyFields.field_bytes)
}
inline ::std::string* TestConfig_DummyFields::mutable_field_bytes() {
  set_has_field_bytes();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TestConfig.DummyFields.field_bytes)
  return field_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestConfig_DummyFields::release_field_bytes() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TestConfig.DummyFields.field_bytes)
  if (!has_field_bytes()) {
    return NULL;
  }
  clear_has_field_bytes();
  return field_bytes_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestConfig_DummyFields::set_allocated_field_bytes(::std::string* field_bytes) {
  if (field_bytes != NULL) {
    set_has_field_bytes();
  } else {
    clear_has_field_bytes();
  }
  field_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_bytes);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TestConfig.DummyFields.field_bytes)
}

// -------------------------------------------------------------------

// TestConfig

// optional uint32 message_count = 1;
inline bool TestConfig::has_message_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestConfig::set_has_message_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestConfig::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestConfig::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 TestConfig::message_count() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.message_count)
  return message_count_;
}
inline void TestConfig::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.message_count)
}

// optional uint32 max_messages_per_second = 2;
inline bool TestConfig::has_max_messages_per_second() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestConfig::set_has_max_messages_per_second() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestConfig::clear_has_max_messages_per_second() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestConfig::clear_max_messages_per_second() {
  max_messages_per_second_ = 0u;
  clear_has_max_messages_per_second();
}
inline ::google::protobuf::uint32 TestConfig::max_messages_per_second() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.max_messages_per_second)
  return max_messages_per_second_;
}
inline void TestConfig::set_max_messages_per_second(::google::protobuf::uint32 value) {
  set_has_max_messages_per_second();
  max_messages_per_second_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.max_messages_per_second)
}

// optional uint32 seed = 3;
inline bool TestConfig::has_seed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestConfig::set_has_seed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestConfig::clear_has_seed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestConfig::clear_seed() {
  seed_ = 0u;
  clear_has_seed();
}
inline ::google::protobuf::uint32 TestConfig::seed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.seed)
  return seed_;
}
inline void TestConfig::set_seed(::google::protobuf::uint32 value) {
  set_has_seed();
  seed_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.seed)
}

// optional uint32 message_size = 4;
inline bool TestConfig::has_message_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TestConfig::set_has_message_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TestConfig::clear_has_message_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TestConfig::clear_message_size() {
  message_size_ = 0u;
  clear_has_message_size();
}
inline ::google::protobuf::uint32 TestConfig::message_size() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.message_size)
  return message_size_;
}
inline void TestConfig::set_message_size(::google::protobuf::uint32 value) {
  set_has_message_size();
  message_size_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.message_size)
}

// optional bool send_batch_on_register = 5;
inline bool TestConfig::has_send_batch_on_register() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TestConfig::set_has_send_batch_on_register() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TestConfig::clear_has_send_batch_on_register() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TestConfig::clear_send_batch_on_register() {
  send_batch_on_register_ = false;
  clear_has_send_batch_on_register();
}
inline bool TestConfig::send_batch_on_register() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.send_batch_on_register)
  return send_batch_on_register_;
}
inline void TestConfig::set_send_batch_on_register(bool value) {
  set_has_send_batch_on_register();
  send_batch_on_register_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TestConfig.send_batch_on_register)
}

// optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;
inline bool TestConfig::has_dummy_fields() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestConfig::set_has_dummy_fields() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestConfig::clear_has_dummy_fields() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestConfig::clear_dummy_fields() {
  if (dummy_fields_ != NULL) dummy_fields_->Clear();
  clear_has_dummy_fields();
}
inline const ::perfetto::protos::TestConfig_DummyFields& TestConfig::_internal_dummy_fields() const {
  return *dummy_fields_;
}
inline const ::perfetto::protos::TestConfig_DummyFields& TestConfig::dummy_fields() const {
  const ::perfetto::protos::TestConfig_DummyFields* p = dummy_fields_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TestConfig.dummy_fields)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TestConfig_DummyFields*>(
      &::perfetto::protos::_TestConfig_DummyFields_default_instance_);
}
inline ::perfetto::protos::TestConfig_DummyFields* TestConfig::release_dummy_fields() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TestConfig.dummy_fields)
  clear_has_dummy_fields();
  ::perfetto::protos::TestConfig_DummyFields* temp = dummy_fields_;
  dummy_fields_ = NULL;
  return temp;
}
inline ::perfetto::protos::TestConfig_DummyFields* TestConfig::mutable_dummy_fields() {
  set_has_dummy_fields();
  if (dummy_fields_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TestConfig_DummyFields>(GetArenaNoVirtual());
    dummy_fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TestConfig.dummy_fields)
  return dummy_fields_;
}
inline void TestConfig::set_allocated_dummy_fields(::perfetto::protos::TestConfig_DummyFields* dummy_fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dummy_fields_;
  }
  if (dummy_fields) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dummy_fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dummy_fields, submessage_arena);
    }
    set_has_dummy_fields();
  } else {
    clear_has_dummy_fields();
  }
  dummy_fields_ = dummy_fields;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TestConfig.dummy_fields)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2fconfig_2ftest_5fconfig_2eproto
