// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared_db_metadata.proto

#include "shared_db_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace leveldb_proto {
class SharedDBMetadataProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SharedDBMetadataProto>
      _instance;
} _SharedDBMetadataProto_default_instance_;
}  // namespace leveldb_proto
namespace protobuf_shared_5fdb_5fmetadata_2eproto {
static void InitDefaultsSharedDBMetadataProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::leveldb_proto::_SharedDBMetadataProto_default_instance_;
    new (ptr) ::leveldb_proto::SharedDBMetadataProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::leveldb_proto::SharedDBMetadataProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SharedDBMetadataProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSharedDBMetadataProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SharedDBMetadataProto.base);
}

}  // namespace protobuf_shared_5fdb_5fmetadata_2eproto
namespace leveldb_proto {
bool SharedDBMetadataProto_MigrationStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MIGRATION_NOT_ATTEMPTED;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MIGRATE_TO_SHARED_SUCCESSFUL;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MIGRATE_TO_SHARED_UNIQUE_TO_BE_DELETED;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MIGRATE_TO_UNIQUE_SUCCESSFUL;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MIGRATE_TO_UNIQUE_SHARED_TO_BE_DELETED;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MigrationStatus_MIN;
const SharedDBMetadataProto_MigrationStatus SharedDBMetadataProto::MigrationStatus_MAX;
const int SharedDBMetadataProto::MigrationStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SharedDBMetadataProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharedDBMetadataProto::kCorruptionsFieldNumber;
const int SharedDBMetadataProto::kMigrationStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharedDBMetadataProto::SharedDBMetadataProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_shared_5fdb_5fmetadata_2eproto::scc_info_SharedDBMetadataProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:leveldb_proto.SharedDBMetadataProto)
}
SharedDBMetadataProto::SharedDBMetadataProto(const SharedDBMetadataProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&corruptions_, &from.corruptions_,
    static_cast<size_t>(reinterpret_cast<char*>(&migration_status_) -
    reinterpret_cast<char*>(&corruptions_)) + sizeof(migration_status_));
  // @@protoc_insertion_point(copy_constructor:leveldb_proto.SharedDBMetadataProto)
}

void SharedDBMetadataProto::SharedCtor() {
  ::memset(&corruptions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&migration_status_) -
      reinterpret_cast<char*>(&corruptions_)) + sizeof(migration_status_));
}

SharedDBMetadataProto::~SharedDBMetadataProto() {
  // @@protoc_insertion_point(destructor:leveldb_proto.SharedDBMetadataProto)
  SharedDtor();
}

void SharedDBMetadataProto::SharedDtor() {
}

void SharedDBMetadataProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SharedDBMetadataProto& SharedDBMetadataProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_shared_5fdb_5fmetadata_2eproto::scc_info_SharedDBMetadataProto.base);
  return *internal_default_instance();
}


void SharedDBMetadataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:leveldb_proto.SharedDBMetadataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&corruptions_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&migration_status_) -
        reinterpret_cast<char*>(&corruptions_)) + sizeof(migration_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SharedDBMetadataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:leveldb_proto.SharedDBMetadataProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 corruptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_corruptions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &corruptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .leveldb_proto.SharedDBMetadataProto.MigrationStatus migration_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::leveldb_proto::SharedDBMetadataProto_MigrationStatus_IsValid(value)) {
            set_migration_status(static_cast< ::leveldb_proto::SharedDBMetadataProto_MigrationStatus >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:leveldb_proto.SharedDBMetadataProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:leveldb_proto.SharedDBMetadataProto)
  return false;
#undef DO_
}

void SharedDBMetadataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:leveldb_proto.SharedDBMetadataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 corruptions = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->corruptions(), output);
  }

  // optional .leveldb_proto.SharedDBMetadataProto.MigrationStatus migration_status = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->migration_status(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:leveldb_proto.SharedDBMetadataProto)
}

size_t SharedDBMetadataProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:leveldb_proto.SharedDBMetadataProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 corruptions = 1;
    if (has_corruptions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->corruptions());
    }

    // optional .leveldb_proto.SharedDBMetadataProto.MigrationStatus migration_status = 3;
    if (has_migration_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->migration_status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SharedDBMetadataProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SharedDBMetadataProto*>(&from));
}

void SharedDBMetadataProto::MergeFrom(const SharedDBMetadataProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:leveldb_proto.SharedDBMetadataProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      corruptions_ = from.corruptions_;
    }
    if (cached_has_bits & 0x00000002u) {
      migration_status_ = from.migration_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SharedDBMetadataProto::CopyFrom(const SharedDBMetadataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:leveldb_proto.SharedDBMetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedDBMetadataProto::IsInitialized() const {
  return true;
}

void SharedDBMetadataProto::Swap(SharedDBMetadataProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharedDBMetadataProto::InternalSwap(SharedDBMetadataProto* other) {
  using std::swap;
  swap(corruptions_, other->corruptions_);
  swap(migration_status_, other->migration_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SharedDBMetadataProto::GetTypeName() const {
  return "leveldb_proto.SharedDBMetadataProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace leveldb_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::leveldb_proto::SharedDBMetadataProto* Arena::CreateMaybeMessage< ::leveldb_proto::SharedDBMetadataProto >(Arena* arena) {
  return Arena::CreateInternal< ::leveldb_proto::SharedDBMetadataProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
