// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/trace/chrome/chrome_trace_event.proto

#include "perfetto/trace/chrome/chrome_trace_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChromeLegacyJsonTrace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChromeMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChromeStringTableEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChromeTracedValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChromeTraceEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChromeTraceEvent_Arg;
}  // namespace protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto
namespace perfetto {
namespace protos {
class ChromeTracedValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeTracedValue>
      _instance;
} _ChromeTracedValue_default_instance_;
class ChromeStringTableEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeStringTableEntry>
      _instance;
} _ChromeStringTableEntry_default_instance_;
class ChromeTraceEvent_ArgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeTraceEvent_Arg>
      _instance;
  bool bool_value_;
  ::google::protobuf::uint64 uint_value_;
  ::google::protobuf::int64 int_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::uint64 pointer_value_;
  ::google::protobuf::internal::ArenaStringPtr json_value_;
  const ::perfetto::protos::ChromeTracedValue* traced_value_;
} _ChromeTraceEvent_Arg_default_instance_;
class ChromeTraceEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeTraceEvent>
      _instance;
} _ChromeTraceEvent_default_instance_;
class ChromeMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeMetadata>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  bool bool_value_;
  ::google::protobuf::int64 int_value_;
  ::google::protobuf::internal::ArenaStringPtr json_value_;
} _ChromeMetadata_default_instance_;
class ChromeLegacyJsonTraceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeLegacyJsonTrace>
      _instance;
} _ChromeLegacyJsonTrace_default_instance_;
class ChromeEventBundleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChromeEventBundle>
      _instance;
} _ChromeEventBundle_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto {
static void InitDefaultsChromeTracedValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeTracedValue_default_instance_;
    new (ptr) ::perfetto::protos::ChromeTracedValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeTracedValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChromeTracedValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChromeTracedValue}, {}};

static void InitDefaultsChromeStringTableEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeStringTableEntry_default_instance_;
    new (ptr) ::perfetto::protos::ChromeStringTableEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeStringTableEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChromeStringTableEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChromeStringTableEntry}, {}};

static void InitDefaultsChromeTraceEvent_Arg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeTraceEvent_Arg_default_instance_;
    new (ptr) ::perfetto::protos::ChromeTraceEvent_Arg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeTraceEvent_Arg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChromeTraceEvent_Arg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChromeTraceEvent_Arg}, {
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTracedValue.base,}};

static void InitDefaultsChromeTraceEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeTraceEvent_default_instance_;
    new (ptr) ::perfetto::protos::ChromeTraceEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeTraceEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChromeTraceEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChromeTraceEvent}, {
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent_Arg.base,}};

static void InitDefaultsChromeMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeMetadata_default_instance_;
    new (ptr) ::perfetto::protos::ChromeMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChromeMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChromeMetadata}, {}};

static void InitDefaultsChromeLegacyJsonTrace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeLegacyJsonTrace_default_instance_;
    new (ptr) ::perfetto::protos::ChromeLegacyJsonTrace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeLegacyJsonTrace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChromeLegacyJsonTrace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChromeLegacyJsonTrace}, {}};

static void InitDefaultsChromeEventBundle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_ChromeEventBundle_default_instance_;
    new (ptr) ::perfetto::protos::ChromeEventBundle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::ChromeEventBundle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ChromeEventBundle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsChromeEventBundle}, {
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent.base,
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeMetadata.base,
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeLegacyJsonTrace.base,
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeStringTableEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeTracedValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeStringTableEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeTraceEvent_Arg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeTraceEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeLegacyJsonTrace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChromeEventBundle.base);
}

}  // namespace protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto
namespace perfetto {
namespace protos {
bool ChromeTracedValue_NestedType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChromeTracedValue_NestedType ChromeTracedValue::DICT;
const ChromeTracedValue_NestedType ChromeTracedValue::ARRAY;
const ChromeTracedValue_NestedType ChromeTracedValue::NestedType_MIN;
const ChromeTracedValue_NestedType ChromeTracedValue::NestedType_MAX;
const int ChromeTracedValue::NestedType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool ChromeLegacyJsonTrace_TraceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChromeLegacyJsonTrace_TraceType ChromeLegacyJsonTrace::USER_TRACE;
const ChromeLegacyJsonTrace_TraceType ChromeLegacyJsonTrace::SYSTEM_TRACE;
const ChromeLegacyJsonTrace_TraceType ChromeLegacyJsonTrace::TraceType_MIN;
const ChromeLegacyJsonTrace_TraceType ChromeLegacyJsonTrace::TraceType_MAX;
const int ChromeLegacyJsonTrace::TraceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ChromeTracedValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeTracedValue::kNestedTypeFieldNumber;
const int ChromeTracedValue::kDictKeysFieldNumber;
const int ChromeTracedValue::kDictValuesFieldNumber;
const int ChromeTracedValue::kArrayValuesFieldNumber;
const int ChromeTracedValue::kIntValueFieldNumber;
const int ChromeTracedValue::kDoubleValueFieldNumber;
const int ChromeTracedValue::kBoolValueFieldNumber;
const int ChromeTracedValue::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeTracedValue::ChromeTracedValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTracedValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeTracedValue)
}
ChromeTracedValue::ChromeTracedValue(const ChromeTracedValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dict_keys_(from.dict_keys_),
      dict_values_(from.dict_values_),
      array_values_(from.array_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  ::memcpy(&nested_type_, &from.nested_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&bool_value_) -
    reinterpret_cast<char*>(&nested_type_)) + sizeof(bool_value_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeTracedValue)
}

void ChromeTracedValue::SharedCtor() {
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nested_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bool_value_) -
      reinterpret_cast<char*>(&nested_type_)) + sizeof(bool_value_));
}

ChromeTracedValue::~ChromeTracedValue() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeTracedValue)
  SharedDtor();
}

void ChromeTracedValue::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChromeTracedValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeTracedValue& ChromeTracedValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTracedValue.base);
  return *internal_default_instance();
}


void ChromeTracedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeTracedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dict_keys_.Clear();
  dict_values_.Clear();
  array_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    string_value_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&nested_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bool_value_) -
        reinterpret_cast<char*>(&nested_type_)) + sizeof(bool_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeTracedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeTracedValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.ChromeTracedValue.NestedType nested_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::ChromeTracedValue_NestedType_IsValid(value)) {
            set_nested_type(static_cast< ::perfetto::protos::ChromeTracedValue_NestedType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string dict_keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dict_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeTracedValue dict_values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dict_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeTracedValue array_values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_array_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_int_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_double_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bool_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeTracedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeTracedValue)
  return false;
#undef DO_
}

void ChromeTracedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeTracedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.ChromeTracedValue.NestedType nested_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nested_type(), output);
  }

  // repeated string dict_keys = 2;
  for (int i = 0, n = this->dict_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dict_keys(i), output);
  }

  // repeated .perfetto.protos.ChromeTracedValue dict_values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dict_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->dict_values(static_cast<int>(i)),
      output);
  }

  // repeated .perfetto.protos.ChromeTracedValue array_values = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->array_values(static_cast<int>(i)),
      output);
  }

  // optional int32 int_value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int_value(), output);
  }

  // optional double double_value = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->double_value(), output);
  }

  // optional bool bool_value = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bool_value(), output);
  }

  // optional string string_value = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->string_value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeTracedValue)
}

size_t ChromeTracedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeTracedValue)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated string dict_keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dict_keys_size());
  for (int i = 0, n = this->dict_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dict_keys(i));
  }

  // repeated .perfetto.protos.ChromeTracedValue dict_values = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dict_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dict_values(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.ChromeTracedValue array_values = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->array_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->array_values(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string string_value = 8;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional .perfetto.protos.ChromeTracedValue.NestedType nested_type = 1;
    if (has_nested_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->nested_type());
    }

    // optional int32 int_value = 5;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
    }

    // optional double double_value = 6;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional bool bool_value = 7;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeTracedValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeTracedValue*>(&from));
}

void ChromeTracedValue::MergeFrom(const ChromeTracedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeTracedValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dict_keys_.MergeFrom(from.dict_keys_);
  dict_values_.MergeFrom(from.dict_values_);
  array_values_.MergeFrom(from.array_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      nested_type_ = from.nested_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      int_value_ = from.int_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      double_value_ = from.double_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      bool_value_ = from.bool_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChromeTracedValue::CopyFrom(const ChromeTracedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeTracedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeTracedValue::IsInitialized() const {
  return true;
}

void ChromeTracedValue::Swap(ChromeTracedValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeTracedValue::InternalSwap(ChromeTracedValue* other) {
  using std::swap;
  dict_keys_.InternalSwap(CastToBase(&other->dict_keys_));
  CastToBase(&dict_values_)->InternalSwap(CastToBase(&other->dict_values_));
  CastToBase(&array_values_)->InternalSwap(CastToBase(&other->array_values_));
  string_value_.Swap(&other->string_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nested_type_, other->nested_type_);
  swap(int_value_, other->int_value_);
  swap(double_value_, other->double_value_);
  swap(bool_value_, other->bool_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeTracedValue::GetTypeName() const {
  return "perfetto.protos.ChromeTracedValue";
}


// ===================================================================

void ChromeStringTableEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeStringTableEntry::kValueFieldNumber;
const int ChromeStringTableEntry::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeStringTableEntry::ChromeStringTableEntry()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeStringTableEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeStringTableEntry)
}
ChromeStringTableEntry::ChromeStringTableEntry(const ChromeStringTableEntry& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeStringTableEntry)
}

void ChromeStringTableEntry::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
}

ChromeStringTableEntry::~ChromeStringTableEntry() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeStringTableEntry)
  SharedDtor();
}

void ChromeStringTableEntry::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChromeStringTableEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeStringTableEntry& ChromeStringTableEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeStringTableEntry.base);
  return *internal_default_instance();
}


void ChromeStringTableEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeStringTableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeStringTableEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeStringTableEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeStringTableEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeStringTableEntry)
  return false;
#undef DO_
}

void ChromeStringTableEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeStringTableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // optional int32 index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeStringTableEntry)
}

size_t ChromeStringTableEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeStringTableEntry)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeStringTableEntry::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeStringTableEntry*>(&from));
}

void ChromeStringTableEntry::MergeFrom(const ChromeStringTableEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeStringTableEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChromeStringTableEntry::CopyFrom(const ChromeStringTableEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeStringTableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeStringTableEntry::IsInitialized() const {
  return true;
}

void ChromeStringTableEntry::Swap(ChromeStringTableEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeStringTableEntry::InternalSwap(ChromeStringTableEntry* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeStringTableEntry::GetTypeName() const {
  return "perfetto.protos.ChromeStringTableEntry";
}


// ===================================================================

void ChromeTraceEvent_Arg::InitAsDefaultInstance() {
}
void ChromeTraceEvent_Arg::set_allocated_traced_value(::perfetto::protos::ChromeTracedValue* traced_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (traced_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      traced_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, traced_value, submessage_arena);
    }
    set_has_traced_value();
    value_.traced_value_ = traced_value;
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.ChromeTraceEvent.Arg.traced_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeTraceEvent_Arg::kNameFieldNumber;
const int ChromeTraceEvent_Arg::kBoolValueFieldNumber;
const int ChromeTraceEvent_Arg::kUintValueFieldNumber;
const int ChromeTraceEvent_Arg::kIntValueFieldNumber;
const int ChromeTraceEvent_Arg::kDoubleValueFieldNumber;
const int ChromeTraceEvent_Arg::kStringValueFieldNumber;
const int ChromeTraceEvent_Arg::kPointerValueFieldNumber;
const int ChromeTraceEvent_Arg::kJsonValueFieldNumber;
const int ChromeTraceEvent_Arg::kTracedValueFieldNumber;
const int ChromeTraceEvent_Arg::kNameIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeTraceEvent_Arg::ChromeTraceEvent_Arg()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent_Arg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeTraceEvent.Arg)
}
ChromeTraceEvent_Arg::ChromeTraceEvent_Arg(const ChromeTraceEvent_Arg& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  name_index_ = from.name_index_;
  clear_has_value();
  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kUintValue: {
      set_uint_value(from.uint_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kPointerValue: {
      set_pointer_value(from.pointer_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case kTracedValue: {
      mutable_traced_value()->::perfetto::protos::ChromeTracedValue::MergeFrom(from.traced_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeTraceEvent.Arg)
}

void ChromeTraceEvent_Arg::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_index_ = 0u;
  clear_has_value();
}

ChromeTraceEvent_Arg::~ChromeTraceEvent_Arg() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeTraceEvent.Arg)
  SharedDtor();
}

void ChromeTraceEvent_Arg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void ChromeTraceEvent_Arg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeTraceEvent_Arg& ChromeTraceEvent_Arg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent_Arg.base);
  return *internal_default_instance();
}


void ChromeTraceEvent_Arg::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.ChromeTraceEvent.Arg)
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kUintValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPointerValue: {
      // No need to clear
      break;
    }
    case kJsonValue: {
      value_.json_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTracedValue: {
      delete value_.traced_value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ChromeTraceEvent_Arg::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeTraceEvent.Arg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  name_index_ = 0u;
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeTraceEvent_Arg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeTraceEvent.Arg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uint_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint_value_)));
          set_has_uint_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pointer_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.pointer_value_)));
          set_has_pointer_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string json_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 name_index = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_name_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.ChromeTracedValue traced_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_traced_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeTraceEvent.Arg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeTraceEvent.Arg)
  return false;
#undef DO_
}

void ChromeTraceEvent_Arg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeTraceEvent.Arg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  switch (value_case()) {
    case kBoolValue:
      ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bool_value(), output);
      break;
    case kUintValue:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint_value(), output);
      break;
    case kIntValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->int_value(), output);
      break;
    case kDoubleValue:
      ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->double_value(), output);
      break;
    case kStringValue:
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        6, this->string_value(), output);
      break;
    case kPointerValue:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->pointer_value(), output);
      break;
    case kJsonValue:
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        8, this->json_value(), output);
      break;
    default: ;
  }
  // optional uint32 name_index = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->name_index(), output);
  }

  // optional .perfetto.protos.ChromeTracedValue traced_value = 10;
  if (has_traced_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_traced_value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeTraceEvent.Arg)
}

size_t ChromeTraceEvent_Arg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeTraceEvent.Arg)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 name_index = 9;
    if (has_name_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name_index());
    }

  }
  switch (value_case()) {
    // optional bool bool_value = 2;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional uint64 uint_value = 3;
    case kUintValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint_value());
      break;
    }
    // optional int64 int_value = 4;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // optional double double_value = 5;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional string string_value = 6;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional uint64 pointer_value = 7;
    case kPointerValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pointer_value());
      break;
    }
    // optional string json_value = 8;
    case kJsonValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->json_value());
      break;
    }
    // optional .perfetto.protos.ChromeTracedValue traced_value = 10;
    case kTracedValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.traced_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeTraceEvent_Arg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeTraceEvent_Arg*>(&from));
}

void ChromeTraceEvent_Arg::MergeFrom(const ChromeTraceEvent_Arg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeTraceEvent.Arg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      name_index_ = from.name_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kUintValue: {
      set_uint_value(from.uint_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kPointerValue: {
      set_pointer_value(from.pointer_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case kTracedValue: {
      mutable_traced_value()->::perfetto::protos::ChromeTracedValue::MergeFrom(from.traced_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ChromeTraceEvent_Arg::CopyFrom(const ChromeTraceEvent_Arg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeTraceEvent.Arg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeTraceEvent_Arg::IsInitialized() const {
  return true;
}

void ChromeTraceEvent_Arg::Swap(ChromeTraceEvent_Arg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeTraceEvent_Arg::InternalSwap(ChromeTraceEvent_Arg* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(name_index_, other->name_index_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeTraceEvent_Arg::GetTypeName() const {
  return "perfetto.protos.ChromeTraceEvent.Arg";
}


// ===================================================================

void ChromeTraceEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeTraceEvent::kNameFieldNumber;
const int ChromeTraceEvent::kTimestampFieldNumber;
const int ChromeTraceEvent::kPhaseFieldNumber;
const int ChromeTraceEvent::kThreadIdFieldNumber;
const int ChromeTraceEvent::kDurationFieldNumber;
const int ChromeTraceEvent::kThreadDurationFieldNumber;
const int ChromeTraceEvent::kScopeFieldNumber;
const int ChromeTraceEvent::kIdFieldNumber;
const int ChromeTraceEvent::kFlagsFieldNumber;
const int ChromeTraceEvent::kCategoryGroupNameFieldNumber;
const int ChromeTraceEvent::kProcessIdFieldNumber;
const int ChromeTraceEvent::kThreadTimestampFieldNumber;
const int ChromeTraceEvent::kBindIdFieldNumber;
const int ChromeTraceEvent::kArgsFieldNumber;
const int ChromeTraceEvent::kNameIndexFieldNumber;
const int ChromeTraceEvent::kCategoryGroupNameIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeTraceEvent::ChromeTraceEvent()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeTraceEvent)
}
ChromeTraceEvent::ChromeTraceEvent(const ChromeTraceEvent& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scope()) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  category_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category_group_name()) {
    category_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_group_name_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_group_name_index_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(category_group_name_index_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeTraceEvent)
}

void ChromeTraceEvent::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_group_name_index_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(category_group_name_index_));
}

ChromeTraceEvent::~ChromeTraceEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeTraceEvent)
  SharedDtor();
}

void ChromeTraceEvent::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChromeTraceEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeTraceEvent& ChromeTraceEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeTraceEvent.base);
  return *internal_default_instance();
}


void ChromeTraceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeTraceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      scope_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      category_group_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&thread_duration_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(thread_duration_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_group_name_index_) -
        reinterpret_cast<char*>(&id_)) + sizeof(category_group_name_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeTraceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeTraceEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_phase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 thread_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_thread_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &thread_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_thread_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string scope = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category_group_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category_group_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 process_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 thread_timestamp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_thread_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bind_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_bind_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bind_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeTraceEvent.Arg args = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 name_index = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_name_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 category_group_name_index = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_category_group_name_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category_group_name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeTraceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeTraceEvent)
  return false;
#undef DO_
}

void ChromeTraceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeTraceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 timestamp = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional int32 phase = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->phase(), output);
  }

  // optional int32 thread_id = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->thread_id(), output);
  }

  // optional int64 duration = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->duration(), output);
  }

  // optional int64 thread_duration = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->thread_duration(), output);
  }

  // optional string scope = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scope(), output);
  }

  // optional uint64 id = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->id(), output);
  }

  // optional uint32 flags = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->flags(), output);
  }

  // optional string category_group_name = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->category_group_name(), output);
  }

  // optional int32 process_id = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->process_id(), output);
  }

  // optional int64 thread_timestamp = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->thread_timestamp(), output);
  }

  // optional uint64 bind_id = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->bind_id(), output);
  }

  // repeated .perfetto.protos.ChromeTraceEvent.Arg args = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14,
      this->args(static_cast<int>(i)),
      output);
  }

  // optional uint32 name_index = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->name_index(), output);
  }

  // optional uint32 category_group_name_index = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->category_group_name_index(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeTraceEvent)
}

size_t ChromeTraceEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeTraceEvent)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .perfetto.protos.ChromeTraceEvent.Arg args = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string scope = 7;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scope());
    }

    // optional string category_group_name = 10;
    if (has_category_group_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category_group_name());
    }

    // optional int64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional int32 phase = 3;
    if (has_phase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phase());
    }

    // optional int32 thread_id = 4;
    if (has_thread_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->thread_id());
    }

    // optional int64 duration = 5;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duration());
    }

    // optional int64 thread_duration = 6;
    if (has_thread_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->thread_duration());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional uint64 id = 8;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 flags = 9;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional int32 process_id = 11;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->process_id());
    }

    // optional int64 thread_timestamp = 12;
    if (has_thread_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->thread_timestamp());
    }

    // optional uint64 bind_id = 13;
    if (has_bind_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bind_id());
    }

    // optional uint32 name_index = 15;
    if (has_name_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name_index());
    }

    // optional uint32 category_group_name_index = 16;
    if (has_category_group_name_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category_group_name_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeTraceEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeTraceEvent*>(&from));
}

void ChromeTraceEvent::MergeFrom(const ChromeTraceEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeTraceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_scope();
      scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_category_group_name();
      category_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_group_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      phase_ = from.phase_;
    }
    if (cached_has_bits & 0x00000020u) {
      thread_id_ = from.thread_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000080u) {
      thread_duration_ = from.thread_duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000200u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000400u) {
      process_id_ = from.process_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      thread_timestamp_ = from.thread_timestamp_;
    }
    if (cached_has_bits & 0x00001000u) {
      bind_id_ = from.bind_id_;
    }
    if (cached_has_bits & 0x00002000u) {
      name_index_ = from.name_index_;
    }
    if (cached_has_bits & 0x00004000u) {
      category_group_name_index_ = from.category_group_name_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChromeTraceEvent::CopyFrom(const ChromeTraceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeTraceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeTraceEvent::IsInitialized() const {
  return true;
}

void ChromeTraceEvent::Swap(ChromeTraceEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeTraceEvent::InternalSwap(ChromeTraceEvent* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scope_.Swap(&other->scope_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_group_name_.Swap(&other->category_group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(phase_, other->phase_);
  swap(thread_id_, other->thread_id_);
  swap(duration_, other->duration_);
  swap(thread_duration_, other->thread_duration_);
  swap(id_, other->id_);
  swap(flags_, other->flags_);
  swap(process_id_, other->process_id_);
  swap(thread_timestamp_, other->thread_timestamp_);
  swap(bind_id_, other->bind_id_);
  swap(name_index_, other->name_index_);
  swap(category_group_name_index_, other->category_group_name_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeTraceEvent::GetTypeName() const {
  return "perfetto.protos.ChromeTraceEvent";
}


// ===================================================================

void ChromeMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeMetadata::kNameFieldNumber;
const int ChromeMetadata::kStringValueFieldNumber;
const int ChromeMetadata::kBoolValueFieldNumber;
const int ChromeMetadata::kIntValueFieldNumber;
const int ChromeMetadata::kJsonValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeMetadata::ChromeMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeMetadata)
}
ChromeMetadata::ChromeMetadata(const ChromeMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeMetadata)
}

void ChromeMetadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

ChromeMetadata::~ChromeMetadata() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeMetadata)
  SharedDtor();
}

void ChromeMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void ChromeMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeMetadata& ChromeMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeMetadata.base);
  return *internal_default_instance();
}


void ChromeMetadata::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.ChromeMetadata)
  switch (value_case()) {
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kJsonValue: {
      value_.json_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ChromeMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string json_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeMetadata)
  return false;
#undef DO_
}

void ChromeMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  switch (value_case()) {
    case kStringValue:
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->string_value(), output);
      break;
    case kBoolValue:
      ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bool_value(), output);
      break;
    case kIntValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->int_value(), output);
      break;
    case kJsonValue:
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        5, this->json_value(), output);
      break;
    default: ;
  }
  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeMetadata)
}

size_t ChromeMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // optional string string_value = 2;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional bool bool_value = 3;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional int64 int_value = 4;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // optional string json_value = 5;
    case kJsonValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeMetadata*>(&from));
}

void ChromeMetadata::MergeFrom(const ChromeMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ChromeMetadata::CopyFrom(const ChromeMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeMetadata::IsInitialized() const {
  return true;
}

void ChromeMetadata::Swap(ChromeMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeMetadata::InternalSwap(ChromeMetadata* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeMetadata::GetTypeName() const {
  return "perfetto.protos.ChromeMetadata";
}


// ===================================================================

void ChromeLegacyJsonTrace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeLegacyJsonTrace::kTypeFieldNumber;
const int ChromeLegacyJsonTrace::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeLegacyJsonTrace::ChromeLegacyJsonTrace()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeLegacyJsonTrace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeLegacyJsonTrace)
}
ChromeLegacyJsonTrace::ChromeLegacyJsonTrace(const ChromeLegacyJsonTrace& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeLegacyJsonTrace)
}

void ChromeLegacyJsonTrace::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ChromeLegacyJsonTrace::~ChromeLegacyJsonTrace() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeLegacyJsonTrace)
  SharedDtor();
}

void ChromeLegacyJsonTrace::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChromeLegacyJsonTrace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeLegacyJsonTrace& ChromeLegacyJsonTrace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeLegacyJsonTrace.base);
  return *internal_default_instance();
}


void ChromeLegacyJsonTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeLegacyJsonTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeLegacyJsonTrace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeLegacyJsonTrace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.ChromeLegacyJsonTrace.TraceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::ChromeLegacyJsonTrace_TraceType_IsValid(value)) {
            set_type(static_cast< ::perfetto::protos::ChromeLegacyJsonTrace_TraceType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeLegacyJsonTrace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeLegacyJsonTrace)
  return false;
#undef DO_
}

void ChromeLegacyJsonTrace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeLegacyJsonTrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.ChromeLegacyJsonTrace.TraceType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeLegacyJsonTrace)
}

size_t ChromeLegacyJsonTrace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeLegacyJsonTrace)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional .perfetto.protos.ChromeLegacyJsonTrace.TraceType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeLegacyJsonTrace::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeLegacyJsonTrace*>(&from));
}

void ChromeLegacyJsonTrace::MergeFrom(const ChromeLegacyJsonTrace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeLegacyJsonTrace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChromeLegacyJsonTrace::CopyFrom(const ChromeLegacyJsonTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeLegacyJsonTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeLegacyJsonTrace::IsInitialized() const {
  return true;
}

void ChromeLegacyJsonTrace::Swap(ChromeLegacyJsonTrace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeLegacyJsonTrace::InternalSwap(ChromeLegacyJsonTrace* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeLegacyJsonTrace::GetTypeName() const {
  return "perfetto.protos.ChromeLegacyJsonTrace";
}


// ===================================================================

void ChromeEventBundle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChromeEventBundle::kTraceEventsFieldNumber;
const int ChromeEventBundle::kMetadataFieldNumber;
const int ChromeEventBundle::kLegacyFtraceOutputFieldNumber;
const int ChromeEventBundle::kLegacyJsonTraceFieldNumber;
const int ChromeEventBundle::kStringTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChromeEventBundle::ChromeEventBundle()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeEventBundle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.ChromeEventBundle)
}
ChromeEventBundle::ChromeEventBundle(const ChromeEventBundle& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      trace_events_(from.trace_events_),
      metadata_(from.metadata_),
      string_table_(from.string_table_),
      legacy_ftrace_output_(from.legacy_ftrace_output_),
      legacy_json_trace_(from.legacy_json_trace_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.ChromeEventBundle)
}

void ChromeEventBundle::SharedCtor() {
}

ChromeEventBundle::~ChromeEventBundle() {
  // @@protoc_insertion_point(destructor:perfetto.protos.ChromeEventBundle)
  SharedDtor();
}

void ChromeEventBundle::SharedDtor() {
}

void ChromeEventBundle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChromeEventBundle& ChromeEventBundle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2ftrace_2fchrome_2fchrome_5ftrace_5fevent_2eproto::scc_info_ChromeEventBundle.base);
  return *internal_default_instance();
}


void ChromeEventBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.ChromeEventBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trace_events_.Clear();
  metadata_.Clear();
  string_table_.Clear();
  legacy_ftrace_output_.Clear();
  legacy_json_trace_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChromeEventBundle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.ChromeEventBundle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .perfetto.protos.ChromeTraceEvent trace_events = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trace_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeStringTableEntry string_table = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_string_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string legacy_ftrace_output = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_legacy_ftrace_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.ChromeLegacyJsonTrace legacy_json_trace = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_legacy_json_trace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.ChromeEventBundle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.ChromeEventBundle)
  return false;
#undef DO_
}

void ChromeEventBundle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.ChromeEventBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.ChromeTraceEvent trace_events = 1 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trace_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->trace_events(static_cast<int>(i)),
      output);
  }

  // repeated .perfetto.protos.ChromeMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->metadata(static_cast<int>(i)),
      output);
  }

  // repeated .perfetto.protos.ChromeStringTableEntry string_table = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->string_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->string_table(static_cast<int>(i)),
      output);
  }

  // repeated string legacy_ftrace_output = 4;
  for (int i = 0, n = this->legacy_ftrace_output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->legacy_ftrace_output(i), output);
  }

  // repeated .perfetto.protos.ChromeLegacyJsonTrace legacy_json_trace = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->legacy_json_trace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->legacy_json_trace(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.ChromeEventBundle)
}

size_t ChromeEventBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.ChromeEventBundle)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .perfetto.protos.ChromeTraceEvent trace_events = 1 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->trace_events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trace_events(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.ChromeMetadata metadata = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.ChromeStringTableEntry string_table = 3 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->string_table_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->string_table(static_cast<int>(i)));
    }
  }

  // repeated string legacy_ftrace_output = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->legacy_ftrace_output_size());
  for (int i = 0, n = this->legacy_ftrace_output_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->legacy_ftrace_output(i));
  }

  // repeated .perfetto.protos.ChromeLegacyJsonTrace legacy_json_trace = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->legacy_json_trace_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->legacy_json_trace(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChromeEventBundle::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChromeEventBundle*>(&from));
}

void ChromeEventBundle::MergeFrom(const ChromeEventBundle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.ChromeEventBundle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trace_events_.MergeFrom(from.trace_events_);
  metadata_.MergeFrom(from.metadata_);
  string_table_.MergeFrom(from.string_table_);
  legacy_ftrace_output_.MergeFrom(from.legacy_ftrace_output_);
  legacy_json_trace_.MergeFrom(from.legacy_json_trace_);
}

void ChromeEventBundle::CopyFrom(const ChromeEventBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.ChromeEventBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChromeEventBundle::IsInitialized() const {
  return true;
}

void ChromeEventBundle::Swap(ChromeEventBundle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChromeEventBundle::InternalSwap(ChromeEventBundle* other) {
  using std::swap;
  CastToBase(&trace_events_)->InternalSwap(CastToBase(&other->trace_events_));
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  CastToBase(&string_table_)->InternalSwap(CastToBase(&other->string_table_));
  legacy_ftrace_output_.InternalSwap(CastToBase(&other->legacy_ftrace_output_));
  CastToBase(&legacy_json_trace_)->InternalSwap(CastToBase(&other->legacy_json_trace_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ChromeEventBundle::GetTypeName() const {
  return "perfetto.protos.ChromeEventBundle";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeTracedValue* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeTracedValue >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeTracedValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeStringTableEntry* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeStringTableEntry >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeStringTableEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeTraceEvent_Arg* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeTraceEvent_Arg >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeTraceEvent_Arg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeTraceEvent* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeTraceEvent >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeTraceEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeMetadata* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeLegacyJsonTrace* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeLegacyJsonTrace >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeLegacyJsonTrace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::ChromeEventBundle* Arena::CreateMaybeMessage< ::perfetto::protos::ChromeEventBundle >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::ChromeEventBundle >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
