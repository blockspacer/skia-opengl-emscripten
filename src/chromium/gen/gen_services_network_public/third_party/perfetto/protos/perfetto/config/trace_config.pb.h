// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/trace_config.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2fconfig_2ftrace_5fconfig_2eproto
#define PROTOBUF_INCLUDED_perfetto_2fconfig_2ftrace_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "perfetto/config/data_source_config.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto 

namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto
namespace perfetto {
namespace protos {
class TraceConfig;
class TraceConfigDefaultTypeInternal;
extern TraceConfigDefaultTypeInternal _TraceConfig_default_instance_;
class TraceConfig_BufferConfig;
class TraceConfig_BufferConfigDefaultTypeInternal;
extern TraceConfig_BufferConfigDefaultTypeInternal _TraceConfig_BufferConfig_default_instance_;
class TraceConfig_BuiltinDataSource;
class TraceConfig_BuiltinDataSourceDefaultTypeInternal;
extern TraceConfig_BuiltinDataSourceDefaultTypeInternal _TraceConfig_BuiltinDataSource_default_instance_;
class TraceConfig_DataSource;
class TraceConfig_DataSourceDefaultTypeInternal;
extern TraceConfig_DataSourceDefaultTypeInternal _TraceConfig_DataSource_default_instance_;
class TraceConfig_GuardrailOverrides;
class TraceConfig_GuardrailOverridesDefaultTypeInternal;
extern TraceConfig_GuardrailOverridesDefaultTypeInternal _TraceConfig_GuardrailOverrides_default_instance_;
class TraceConfig_ProducerConfig;
class TraceConfig_ProducerConfigDefaultTypeInternal;
extern TraceConfig_ProducerConfigDefaultTypeInternal _TraceConfig_ProducerConfig_default_instance_;
class TraceConfig_StatsdMetadata;
class TraceConfig_StatsdMetadataDefaultTypeInternal;
extern TraceConfig_StatsdMetadataDefaultTypeInternal _TraceConfig_StatsdMetadata_default_instance_;
class TraceConfig_TriggerConfig;
class TraceConfig_TriggerConfigDefaultTypeInternal;
extern TraceConfig_TriggerConfigDefaultTypeInternal _TraceConfig_TriggerConfig_default_instance_;
class TraceConfig_TriggerConfig_Trigger;
class TraceConfig_TriggerConfig_TriggerDefaultTypeInternal;
extern TraceConfig_TriggerConfig_TriggerDefaultTypeInternal _TraceConfig_TriggerConfig_Trigger_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::TraceConfig* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig>(Arena*);
template<> ::perfetto::protos::TraceConfig_BufferConfig* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_BufferConfig>(Arena*);
template<> ::perfetto::protos::TraceConfig_BuiltinDataSource* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_BuiltinDataSource>(Arena*);
template<> ::perfetto::protos::TraceConfig_DataSource* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_DataSource>(Arena*);
template<> ::perfetto::protos::TraceConfig_GuardrailOverrides* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_GuardrailOverrides>(Arena*);
template<> ::perfetto::protos::TraceConfig_ProducerConfig* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_ProducerConfig>(Arena*);
template<> ::perfetto::protos::TraceConfig_StatsdMetadata* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_StatsdMetadata>(Arena*);
template<> ::perfetto::protos::TraceConfig_TriggerConfig* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_TriggerConfig>(Arena*);
template<> ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* Arena::CreateMaybeMessage<::perfetto::protos::TraceConfig_TriggerConfig_Trigger>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

enum TraceConfig_BufferConfig_FillPolicy {
  TraceConfig_BufferConfig_FillPolicy_UNSPECIFIED = 0,
  TraceConfig_BufferConfig_FillPolicy_RING_BUFFER = 1,
  TraceConfig_BufferConfig_FillPolicy_DISCARD = 2
};
bool TraceConfig_BufferConfig_FillPolicy_IsValid(int value);
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig_FillPolicy_FillPolicy_MIN = TraceConfig_BufferConfig_FillPolicy_UNSPECIFIED;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig_FillPolicy_FillPolicy_MAX = TraceConfig_BufferConfig_FillPolicy_DISCARD;
const int TraceConfig_BufferConfig_FillPolicy_FillPolicy_ARRAYSIZE = TraceConfig_BufferConfig_FillPolicy_FillPolicy_MAX + 1;

enum TraceConfig_TriggerConfig_TriggerMode {
  TraceConfig_TriggerConfig_TriggerMode_UNSPECIFIED = 0,
  TraceConfig_TriggerConfig_TriggerMode_START_TRACING = 1,
  TraceConfig_TriggerConfig_TriggerMode_STOP_TRACING = 2
};
bool TraceConfig_TriggerConfig_TriggerMode_IsValid(int value);
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig_TriggerMode_TriggerMode_MIN = TraceConfig_TriggerConfig_TriggerMode_UNSPECIFIED;
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig_TriggerMode_TriggerMode_MAX = TraceConfig_TriggerConfig_TriggerMode_STOP_TRACING;
const int TraceConfig_TriggerConfig_TriggerMode_TriggerMode_ARRAYSIZE = TraceConfig_TriggerConfig_TriggerMode_TriggerMode_MAX + 1;

enum TraceConfig_LockdownModeOperation {
  TraceConfig_LockdownModeOperation_LOCKDOWN_UNCHANGED = 0,
  TraceConfig_LockdownModeOperation_LOCKDOWN_CLEAR = 1,
  TraceConfig_LockdownModeOperation_LOCKDOWN_SET = 2
};
bool TraceConfig_LockdownModeOperation_IsValid(int value);
const TraceConfig_LockdownModeOperation TraceConfig_LockdownModeOperation_LockdownModeOperation_MIN = TraceConfig_LockdownModeOperation_LOCKDOWN_UNCHANGED;
const TraceConfig_LockdownModeOperation TraceConfig_LockdownModeOperation_LockdownModeOperation_MAX = TraceConfig_LockdownModeOperation_LOCKDOWN_SET;
const int TraceConfig_LockdownModeOperation_LockdownModeOperation_ARRAYSIZE = TraceConfig_LockdownModeOperation_LockdownModeOperation_MAX + 1;

// ===================================================================

class TraceConfig_BufferConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.BufferConfig) */ {
 public:
  TraceConfig_BufferConfig();
  virtual ~TraceConfig_BufferConfig();

  TraceConfig_BufferConfig(const TraceConfig_BufferConfig& from);

  inline TraceConfig_BufferConfig& operator=(const TraceConfig_BufferConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_BufferConfig(TraceConfig_BufferConfig&& from) noexcept
    : TraceConfig_BufferConfig() {
    *this = ::std::move(from);
  }

  inline TraceConfig_BufferConfig& operator=(TraceConfig_BufferConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_BufferConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_BufferConfig* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_BufferConfig*>(
               &_TraceConfig_BufferConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_BufferConfig* other);
  friend void swap(TraceConfig_BufferConfig& a, TraceConfig_BufferConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_BufferConfig* New() const final {
    return CreateMaybeMessage<TraceConfig_BufferConfig>(NULL);
  }

  TraceConfig_BufferConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_BufferConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_BufferConfig& from);
  void MergeFrom(const TraceConfig_BufferConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_BufferConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TraceConfig_BufferConfig_FillPolicy FillPolicy;
  static const FillPolicy UNSPECIFIED =
    TraceConfig_BufferConfig_FillPolicy_UNSPECIFIED;
  static const FillPolicy RING_BUFFER =
    TraceConfig_BufferConfig_FillPolicy_RING_BUFFER;
  static const FillPolicy DISCARD =
    TraceConfig_BufferConfig_FillPolicy_DISCARD;
  static inline bool FillPolicy_IsValid(int value) {
    return TraceConfig_BufferConfig_FillPolicy_IsValid(value);
  }
  static const FillPolicy FillPolicy_MIN =
    TraceConfig_BufferConfig_FillPolicy_FillPolicy_MIN;
  static const FillPolicy FillPolicy_MAX =
    TraceConfig_BufferConfig_FillPolicy_FillPolicy_MAX;
  static const int FillPolicy_ARRAYSIZE =
    TraceConfig_BufferConfig_FillPolicy_FillPolicy_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional uint32 size_kb = 1;
  bool has_size_kb() const;
  void clear_size_kb();
  static const int kSizeKbFieldNumber = 1;
  ::google::protobuf::uint32 size_kb() const;
  void set_size_kb(::google::protobuf::uint32 value);

  // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
  bool has_fill_policy() const;
  void clear_fill_policy();
  static const int kFillPolicyFieldNumber = 4;
  ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy fill_policy() const;
  void set_fill_policy(::perfetto::protos::TraceConfig_BufferConfig_FillPolicy value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.BufferConfig)
 private:
  void set_has_size_kb();
  void clear_has_size_kb();
  void set_has_fill_policy();
  void clear_has_fill_policy();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 size_kb_;
  int fill_policy_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_DataSource : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.DataSource) */ {
 public:
  TraceConfig_DataSource();
  virtual ~TraceConfig_DataSource();

  TraceConfig_DataSource(const TraceConfig_DataSource& from);

  inline TraceConfig_DataSource& operator=(const TraceConfig_DataSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_DataSource(TraceConfig_DataSource&& from) noexcept
    : TraceConfig_DataSource() {
    *this = ::std::move(from);
  }

  inline TraceConfig_DataSource& operator=(TraceConfig_DataSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_DataSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_DataSource* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_DataSource*>(
               &_TraceConfig_DataSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_DataSource* other);
  friend void swap(TraceConfig_DataSource& a, TraceConfig_DataSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_DataSource* New() const final {
    return CreateMaybeMessage<TraceConfig_DataSource>(NULL);
  }

  TraceConfig_DataSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_DataSource>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_DataSource& from);
  void MergeFrom(const TraceConfig_DataSource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_DataSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string producer_name_filter = 2;
  int producer_name_filter_size() const;
  void clear_producer_name_filter();
  static const int kProducerNameFilterFieldNumber = 2;
  const ::std::string& producer_name_filter(int index) const;
  ::std::string* mutable_producer_name_filter(int index);
  void set_producer_name_filter(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_producer_name_filter(int index, ::std::string&& value);
  #endif
  void set_producer_name_filter(int index, const char* value);
  void set_producer_name_filter(int index, const char* value, size_t size);
  ::std::string* add_producer_name_filter();
  void add_producer_name_filter(const ::std::string& value);
  #if LANG_CXX11
  void add_producer_name_filter(::std::string&& value);
  #endif
  void add_producer_name_filter(const char* value);
  void add_producer_name_filter(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& producer_name_filter() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_producer_name_filter();

  // optional .perfetto.protos.DataSourceConfig config = 1;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  private:
  const ::perfetto::protos::DataSourceConfig& _internal_config() const;
  public:
  const ::perfetto::protos::DataSourceConfig& config() const;
  ::perfetto::protos::DataSourceConfig* release_config();
  ::perfetto::protos::DataSourceConfig* mutable_config();
  void set_allocated_config(::perfetto::protos::DataSourceConfig* config);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.DataSource)
 private:
  void set_has_config();
  void clear_has_config();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> producer_name_filter_;
  ::perfetto::protos::DataSourceConfig* config_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_BuiltinDataSource : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.BuiltinDataSource) */ {
 public:
  TraceConfig_BuiltinDataSource();
  virtual ~TraceConfig_BuiltinDataSource();

  TraceConfig_BuiltinDataSource(const TraceConfig_BuiltinDataSource& from);

  inline TraceConfig_BuiltinDataSource& operator=(const TraceConfig_BuiltinDataSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_BuiltinDataSource(TraceConfig_BuiltinDataSource&& from) noexcept
    : TraceConfig_BuiltinDataSource() {
    *this = ::std::move(from);
  }

  inline TraceConfig_BuiltinDataSource& operator=(TraceConfig_BuiltinDataSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_BuiltinDataSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_BuiltinDataSource* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_BuiltinDataSource*>(
               &_TraceConfig_BuiltinDataSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_BuiltinDataSource* other);
  friend void swap(TraceConfig_BuiltinDataSource& a, TraceConfig_BuiltinDataSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_BuiltinDataSource* New() const final {
    return CreateMaybeMessage<TraceConfig_BuiltinDataSource>(NULL);
  }

  TraceConfig_BuiltinDataSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_BuiltinDataSource>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_BuiltinDataSource& from);
  void MergeFrom(const TraceConfig_BuiltinDataSource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_BuiltinDataSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool disable_clock_snapshotting = 1;
  bool has_disable_clock_snapshotting() const;
  void clear_disable_clock_snapshotting();
  static const int kDisableClockSnapshottingFieldNumber = 1;
  bool disable_clock_snapshotting() const;
  void set_disable_clock_snapshotting(bool value);

  // optional bool disable_trace_config = 2;
  bool has_disable_trace_config() const;
  void clear_disable_trace_config();
  static const int kDisableTraceConfigFieldNumber = 2;
  bool disable_trace_config() const;
  void set_disable_trace_config(bool value);

  // optional bool disable_system_info = 3;
  bool has_disable_system_info() const;
  void clear_disable_system_info();
  static const int kDisableSystemInfoFieldNumber = 3;
  bool disable_system_info() const;
  void set_disable_system_info(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.BuiltinDataSource)
 private:
  void set_has_disable_clock_snapshotting();
  void clear_has_disable_clock_snapshotting();
  void set_has_disable_trace_config();
  void clear_has_disable_trace_config();
  void set_has_disable_system_info();
  void clear_has_disable_system_info();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool disable_clock_snapshotting_;
  bool disable_trace_config_;
  bool disable_system_info_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_ProducerConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.ProducerConfig) */ {
 public:
  TraceConfig_ProducerConfig();
  virtual ~TraceConfig_ProducerConfig();

  TraceConfig_ProducerConfig(const TraceConfig_ProducerConfig& from);

  inline TraceConfig_ProducerConfig& operator=(const TraceConfig_ProducerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_ProducerConfig(TraceConfig_ProducerConfig&& from) noexcept
    : TraceConfig_ProducerConfig() {
    *this = ::std::move(from);
  }

  inline TraceConfig_ProducerConfig& operator=(TraceConfig_ProducerConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_ProducerConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_ProducerConfig* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_ProducerConfig*>(
               &_TraceConfig_ProducerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_ProducerConfig* other);
  friend void swap(TraceConfig_ProducerConfig& a, TraceConfig_ProducerConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_ProducerConfig* New() const final {
    return CreateMaybeMessage<TraceConfig_ProducerConfig>(NULL);
  }

  TraceConfig_ProducerConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_ProducerConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_ProducerConfig& from);
  void MergeFrom(const TraceConfig_ProducerConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_ProducerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string producer_name = 1;
  bool has_producer_name() const;
  void clear_producer_name();
  static const int kProducerNameFieldNumber = 1;
  const ::std::string& producer_name() const;
  void set_producer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_producer_name(::std::string&& value);
  #endif
  void set_producer_name(const char* value);
  void set_producer_name(const char* value, size_t size);
  ::std::string* mutable_producer_name();
  ::std::string* release_producer_name();
  void set_allocated_producer_name(::std::string* producer_name);

  // optional uint32 shm_size_kb = 2;
  bool has_shm_size_kb() const;
  void clear_shm_size_kb();
  static const int kShmSizeKbFieldNumber = 2;
  ::google::protobuf::uint32 shm_size_kb() const;
  void set_shm_size_kb(::google::protobuf::uint32 value);

  // optional uint32 page_size_kb = 3;
  bool has_page_size_kb() const;
  void clear_page_size_kb();
  static const int kPageSizeKbFieldNumber = 3;
  ::google::protobuf::uint32 page_size_kb() const;
  void set_page_size_kb(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.ProducerConfig)
 private:
  void set_has_producer_name();
  void clear_has_producer_name();
  void set_has_shm_size_kb();
  void clear_has_shm_size_kb();
  void set_has_page_size_kb();
  void clear_has_page_size_kb();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr producer_name_;
  ::google::protobuf::uint32 shm_size_kb_;
  ::google::protobuf::uint32 page_size_kb_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_StatsdMetadata : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.StatsdMetadata) */ {
 public:
  TraceConfig_StatsdMetadata();
  virtual ~TraceConfig_StatsdMetadata();

  TraceConfig_StatsdMetadata(const TraceConfig_StatsdMetadata& from);

  inline TraceConfig_StatsdMetadata& operator=(const TraceConfig_StatsdMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_StatsdMetadata(TraceConfig_StatsdMetadata&& from) noexcept
    : TraceConfig_StatsdMetadata() {
    *this = ::std::move(from);
  }

  inline TraceConfig_StatsdMetadata& operator=(TraceConfig_StatsdMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_StatsdMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_StatsdMetadata* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_StatsdMetadata*>(
               &_TraceConfig_StatsdMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_StatsdMetadata* other);
  friend void swap(TraceConfig_StatsdMetadata& a, TraceConfig_StatsdMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_StatsdMetadata* New() const final {
    return CreateMaybeMessage<TraceConfig_StatsdMetadata>(NULL);
  }

  TraceConfig_StatsdMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_StatsdMetadata>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_StatsdMetadata& from);
  void MergeFrom(const TraceConfig_StatsdMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_StatsdMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 triggering_alert_id = 1;
  bool has_triggering_alert_id() const;
  void clear_triggering_alert_id();
  static const int kTriggeringAlertIdFieldNumber = 1;
  ::google::protobuf::int64 triggering_alert_id() const;
  void set_triggering_alert_id(::google::protobuf::int64 value);

  // optional int64 triggering_config_id = 3;
  bool has_triggering_config_id() const;
  void clear_triggering_config_id();
  static const int kTriggeringConfigIdFieldNumber = 3;
  ::google::protobuf::int64 triggering_config_id() const;
  void set_triggering_config_id(::google::protobuf::int64 value);

  // optional int64 triggering_subscription_id = 4;
  bool has_triggering_subscription_id() const;
  void clear_triggering_subscription_id();
  static const int kTriggeringSubscriptionIdFieldNumber = 4;
  ::google::protobuf::int64 triggering_subscription_id() const;
  void set_triggering_subscription_id(::google::protobuf::int64 value);

  // optional int32 triggering_config_uid = 2;
  bool has_triggering_config_uid() const;
  void clear_triggering_config_uid();
  static const int kTriggeringConfigUidFieldNumber = 2;
  ::google::protobuf::int32 triggering_config_uid() const;
  void set_triggering_config_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.StatsdMetadata)
 private:
  void set_has_triggering_alert_id();
  void clear_has_triggering_alert_id();
  void set_has_triggering_config_uid();
  void clear_has_triggering_config_uid();
  void set_has_triggering_config_id();
  void clear_has_triggering_config_id();
  void set_has_triggering_subscription_id();
  void clear_has_triggering_subscription_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 triggering_alert_id_;
  ::google::protobuf::int64 triggering_config_id_;
  ::google::protobuf::int64 triggering_subscription_id_;
  ::google::protobuf::int32 triggering_config_uid_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_GuardrailOverrides : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.GuardrailOverrides) */ {
 public:
  TraceConfig_GuardrailOverrides();
  virtual ~TraceConfig_GuardrailOverrides();

  TraceConfig_GuardrailOverrides(const TraceConfig_GuardrailOverrides& from);

  inline TraceConfig_GuardrailOverrides& operator=(const TraceConfig_GuardrailOverrides& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_GuardrailOverrides(TraceConfig_GuardrailOverrides&& from) noexcept
    : TraceConfig_GuardrailOverrides() {
    *this = ::std::move(from);
  }

  inline TraceConfig_GuardrailOverrides& operator=(TraceConfig_GuardrailOverrides&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_GuardrailOverrides& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_GuardrailOverrides* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_GuardrailOverrides*>(
               &_TraceConfig_GuardrailOverrides_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_GuardrailOverrides* other);
  friend void swap(TraceConfig_GuardrailOverrides& a, TraceConfig_GuardrailOverrides& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_GuardrailOverrides* New() const final {
    return CreateMaybeMessage<TraceConfig_GuardrailOverrides>(NULL);
  }

  TraceConfig_GuardrailOverrides* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_GuardrailOverrides>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_GuardrailOverrides& from);
  void MergeFrom(const TraceConfig_GuardrailOverrides& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_GuardrailOverrides* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 max_upload_per_day_bytes = 1;
  bool has_max_upload_per_day_bytes() const;
  void clear_max_upload_per_day_bytes();
  static const int kMaxUploadPerDayBytesFieldNumber = 1;
  ::google::protobuf::uint64 max_upload_per_day_bytes() const;
  void set_max_upload_per_day_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.GuardrailOverrides)
 private:
  void set_has_max_upload_per_day_bytes();
  void clear_has_max_upload_per_day_bytes();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 max_upload_per_day_bytes_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_TriggerConfig_Trigger : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.TriggerConfig.Trigger) */ {
 public:
  TraceConfig_TriggerConfig_Trigger();
  virtual ~TraceConfig_TriggerConfig_Trigger();

  TraceConfig_TriggerConfig_Trigger(const TraceConfig_TriggerConfig_Trigger& from);

  inline TraceConfig_TriggerConfig_Trigger& operator=(const TraceConfig_TriggerConfig_Trigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_TriggerConfig_Trigger(TraceConfig_TriggerConfig_Trigger&& from) noexcept
    : TraceConfig_TriggerConfig_Trigger() {
    *this = ::std::move(from);
  }

  inline TraceConfig_TriggerConfig_Trigger& operator=(TraceConfig_TriggerConfig_Trigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_TriggerConfig_Trigger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_TriggerConfig_Trigger* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_TriggerConfig_Trigger*>(
               &_TraceConfig_TriggerConfig_Trigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_TriggerConfig_Trigger* other);
  friend void swap(TraceConfig_TriggerConfig_Trigger& a, TraceConfig_TriggerConfig_Trigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_TriggerConfig_Trigger* New() const final {
    return CreateMaybeMessage<TraceConfig_TriggerConfig_Trigger>(NULL);
  }

  TraceConfig_TriggerConfig_Trigger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_TriggerConfig_Trigger>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_TriggerConfig_Trigger& from);
  void MergeFrom(const TraceConfig_TriggerConfig_Trigger& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_TriggerConfig_Trigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string producer_name_regex = 2;
  bool has_producer_name_regex() const;
  void clear_producer_name_regex();
  static const int kProducerNameRegexFieldNumber = 2;
  const ::std::string& producer_name_regex() const;
  void set_producer_name_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_producer_name_regex(::std::string&& value);
  #endif
  void set_producer_name_regex(const char* value);
  void set_producer_name_regex(const char* value, size_t size);
  ::std::string* mutable_producer_name_regex();
  ::std::string* release_producer_name_regex();
  void set_allocated_producer_name_regex(::std::string* producer_name_regex);

  // optional uint32 stop_delay_ms = 3;
  bool has_stop_delay_ms() const;
  void clear_stop_delay_ms();
  static const int kStopDelayMsFieldNumber = 3;
  ::google::protobuf::uint32 stop_delay_ms() const;
  void set_stop_delay_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_producer_name_regex();
  void clear_has_producer_name_regex();
  void set_has_stop_delay_ms();
  void clear_has_stop_delay_ms();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr producer_name_regex_;
  ::google::protobuf::uint32 stop_delay_ms_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig_TriggerConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig.TriggerConfig) */ {
 public:
  TraceConfig_TriggerConfig();
  virtual ~TraceConfig_TriggerConfig();

  TraceConfig_TriggerConfig(const TraceConfig_TriggerConfig& from);

  inline TraceConfig_TriggerConfig& operator=(const TraceConfig_TriggerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig_TriggerConfig(TraceConfig_TriggerConfig&& from) noexcept
    : TraceConfig_TriggerConfig() {
    *this = ::std::move(from);
  }

  inline TraceConfig_TriggerConfig& operator=(TraceConfig_TriggerConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig_TriggerConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig_TriggerConfig* internal_default_instance() {
    return reinterpret_cast<const TraceConfig_TriggerConfig*>(
               &_TraceConfig_TriggerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig_TriggerConfig* other);
  friend void swap(TraceConfig_TriggerConfig& a, TraceConfig_TriggerConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig_TriggerConfig* New() const final {
    return CreateMaybeMessage<TraceConfig_TriggerConfig>(NULL);
  }

  TraceConfig_TriggerConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig_TriggerConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig_TriggerConfig& from);
  void MergeFrom(const TraceConfig_TriggerConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig_TriggerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TraceConfig_TriggerConfig_Trigger Trigger;

  typedef TraceConfig_TriggerConfig_TriggerMode TriggerMode;
  static const TriggerMode UNSPECIFIED =
    TraceConfig_TriggerConfig_TriggerMode_UNSPECIFIED;
  static const TriggerMode START_TRACING =
    TraceConfig_TriggerConfig_TriggerMode_START_TRACING;
  static const TriggerMode STOP_TRACING =
    TraceConfig_TriggerConfig_TriggerMode_STOP_TRACING;
  static inline bool TriggerMode_IsValid(int value) {
    return TraceConfig_TriggerConfig_TriggerMode_IsValid(value);
  }
  static const TriggerMode TriggerMode_MIN =
    TraceConfig_TriggerConfig_TriggerMode_TriggerMode_MIN;
  static const TriggerMode TriggerMode_MAX =
    TraceConfig_TriggerConfig_TriggerMode_TriggerMode_MAX;
  static const int TriggerMode_ARRAYSIZE =
    TraceConfig_TriggerConfig_TriggerMode_TriggerMode_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .perfetto.protos.TraceConfig.TriggerConfig.Trigger triggers = 2;
  int triggers_size() const;
  void clear_triggers();
  static const int kTriggersFieldNumber = 2;
  ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* mutable_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >*
      mutable_triggers();
  const ::perfetto::protos::TraceConfig_TriggerConfig_Trigger& triggers(int index) const;
  ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* add_triggers();
  const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >&
      triggers() const;

  // optional .perfetto.protos.TraceConfig.TriggerConfig.TriggerMode trigger_mode = 1;
  bool has_trigger_mode() const;
  void clear_trigger_mode();
  static const int kTriggerModeFieldNumber = 1;
  ::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode trigger_mode() const;
  void set_trigger_mode(::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode value);

  // optional uint32 trigger_timeout_ms = 3;
  bool has_trigger_timeout_ms() const;
  void clear_trigger_timeout_ms();
  static const int kTriggerTimeoutMsFieldNumber = 3;
  ::google::protobuf::uint32 trigger_timeout_ms() const;
  void set_trigger_timeout_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig.TriggerConfig)
 private:
  void set_has_trigger_mode();
  void clear_has_trigger_mode();
  void set_has_trigger_timeout_ms();
  void clear_has_trigger_timeout_ms();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger > triggers_;
  int trigger_mode_;
  ::google::protobuf::uint32 trigger_timeout_ms_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TraceConfig) */ {
 public:
  TraceConfig();
  virtual ~TraceConfig();

  TraceConfig(const TraceConfig& from);

  inline TraceConfig& operator=(const TraceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceConfig(TraceConfig&& from) noexcept
    : TraceConfig() {
    *this = ::std::move(from);
  }

  inline TraceConfig& operator=(TraceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TraceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceConfig* internal_default_instance() {
    return reinterpret_cast<const TraceConfig*>(
               &_TraceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TraceConfig* other);
  friend void swap(TraceConfig& a, TraceConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceConfig* New() const final {
    return CreateMaybeMessage<TraceConfig>(NULL);
  }

  TraceConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TraceConfig& from);
  void MergeFrom(const TraceConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TraceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TraceConfig_BufferConfig BufferConfig;
  typedef TraceConfig_DataSource DataSource;
  typedef TraceConfig_BuiltinDataSource BuiltinDataSource;
  typedef TraceConfig_ProducerConfig ProducerConfig;
  typedef TraceConfig_StatsdMetadata StatsdMetadata;
  typedef TraceConfig_GuardrailOverrides GuardrailOverrides;
  typedef TraceConfig_TriggerConfig TriggerConfig;

  typedef TraceConfig_LockdownModeOperation LockdownModeOperation;
  static const LockdownModeOperation LOCKDOWN_UNCHANGED =
    TraceConfig_LockdownModeOperation_LOCKDOWN_UNCHANGED;
  static const LockdownModeOperation LOCKDOWN_CLEAR =
    TraceConfig_LockdownModeOperation_LOCKDOWN_CLEAR;
  static const LockdownModeOperation LOCKDOWN_SET =
    TraceConfig_LockdownModeOperation_LOCKDOWN_SET;
  static inline bool LockdownModeOperation_IsValid(int value) {
    return TraceConfig_LockdownModeOperation_IsValid(value);
  }
  static const LockdownModeOperation LockdownModeOperation_MIN =
    TraceConfig_LockdownModeOperation_LockdownModeOperation_MIN;
  static const LockdownModeOperation LockdownModeOperation_MAX =
    TraceConfig_LockdownModeOperation_LockdownModeOperation_MAX;
  static const int LockdownModeOperation_ARRAYSIZE =
    TraceConfig_LockdownModeOperation_LockdownModeOperation_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
  int buffers_size() const;
  void clear_buffers();
  static const int kBuffersFieldNumber = 1;
  ::perfetto::protos::TraceConfig_BufferConfig* mutable_buffers(int index);
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >*
      mutable_buffers();
  const ::perfetto::protos::TraceConfig_BufferConfig& buffers(int index) const;
  ::perfetto::protos::TraceConfig_BufferConfig* add_buffers();
  const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >&
      buffers() const;

  // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
  int data_sources_size() const;
  void clear_data_sources();
  static const int kDataSourcesFieldNumber = 2;
  ::perfetto::protos::TraceConfig_DataSource* mutable_data_sources(int index);
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >*
      mutable_data_sources();
  const ::perfetto::protos::TraceConfig_DataSource& data_sources(int index) const;
  ::perfetto::protos::TraceConfig_DataSource* add_data_sources();
  const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >&
      data_sources() const;

  // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
  int producers_size() const;
  void clear_producers();
  static const int kProducersFieldNumber = 6;
  ::perfetto::protos::TraceConfig_ProducerConfig* mutable_producers(int index);
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >*
      mutable_producers();
  const ::perfetto::protos::TraceConfig_ProducerConfig& producers(int index) const;
  ::perfetto::protos::TraceConfig_ProducerConfig* add_producers();
  const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >&
      producers() const;

  // repeated string activate_triggers = 18;
  int activate_triggers_size() const;
  void clear_activate_triggers();
  static const int kActivateTriggersFieldNumber = 18;
  const ::std::string& activate_triggers(int index) const;
  ::std::string* mutable_activate_triggers(int index);
  void set_activate_triggers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_activate_triggers(int index, ::std::string&& value);
  #endif
  void set_activate_triggers(int index, const char* value);
  void set_activate_triggers(int index, const char* value, size_t size);
  ::std::string* add_activate_triggers();
  void add_activate_triggers(const ::std::string& value);
  #if LANG_CXX11
  void add_activate_triggers(::std::string&& value);
  #endif
  void add_activate_triggers(const char* value);
  void add_activate_triggers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& activate_triggers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_activate_triggers();

  // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
  bool has_statsd_metadata() const;
  void clear_statsd_metadata();
  static const int kStatsdMetadataFieldNumber = 7;
  private:
  const ::perfetto::protos::TraceConfig_StatsdMetadata& _internal_statsd_metadata() const;
  public:
  const ::perfetto::protos::TraceConfig_StatsdMetadata& statsd_metadata() const;
  ::perfetto::protos::TraceConfig_StatsdMetadata* release_statsd_metadata();
  ::perfetto::protos::TraceConfig_StatsdMetadata* mutable_statsd_metadata();
  void set_allocated_statsd_metadata(::perfetto::protos::TraceConfig_StatsdMetadata* statsd_metadata);

  // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
  bool has_guardrail_overrides() const;
  void clear_guardrail_overrides();
  static const int kGuardrailOverridesFieldNumber = 11;
  private:
  const ::perfetto::protos::TraceConfig_GuardrailOverrides& _internal_guardrail_overrides() const;
  public:
  const ::perfetto::protos::TraceConfig_GuardrailOverrides& guardrail_overrides() const;
  ::perfetto::protos::TraceConfig_GuardrailOverrides* release_guardrail_overrides();
  ::perfetto::protos::TraceConfig_GuardrailOverrides* mutable_guardrail_overrides();
  void set_allocated_guardrail_overrides(::perfetto::protos::TraceConfig_GuardrailOverrides* guardrail_overrides);

  // optional .perfetto.protos.TraceConfig.TriggerConfig trigger_config = 17;
  bool has_trigger_config() const;
  void clear_trigger_config();
  static const int kTriggerConfigFieldNumber = 17;
  private:
  const ::perfetto::protos::TraceConfig_TriggerConfig& _internal_trigger_config() const;
  public:
  const ::perfetto::protos::TraceConfig_TriggerConfig& trigger_config() const;
  ::perfetto::protos::TraceConfig_TriggerConfig* release_trigger_config();
  ::perfetto::protos::TraceConfig_TriggerConfig* mutable_trigger_config();
  void set_allocated_trigger_config(::perfetto::protos::TraceConfig_TriggerConfig* trigger_config);

  // optional .perfetto.protos.TraceConfig.BuiltinDataSource builtin_data_sources = 20;
  bool has_builtin_data_sources() const;
  void clear_builtin_data_sources();
  static const int kBuiltinDataSourcesFieldNumber = 20;
  private:
  const ::perfetto::protos::TraceConfig_BuiltinDataSource& _internal_builtin_data_sources() const;
  public:
  const ::perfetto::protos::TraceConfig_BuiltinDataSource& builtin_data_sources() const;
  ::perfetto::protos::TraceConfig_BuiltinDataSource* release_builtin_data_sources();
  ::perfetto::protos::TraceConfig_BuiltinDataSource* mutable_builtin_data_sources();
  void set_allocated_builtin_data_sources(::perfetto::protos::TraceConfig_BuiltinDataSource* builtin_data_sources);

  // optional uint32 duration_ms = 3;
  bool has_duration_ms() const;
  void clear_duration_ms();
  static const int kDurationMsFieldNumber = 3;
  ::google::protobuf::uint32 duration_ms() const;
  void set_duration_ms(::google::protobuf::uint32 value);

  // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
  bool has_lockdown_mode() const;
  void clear_lockdown_mode();
  static const int kLockdownModeFieldNumber = 5;
  ::perfetto::protos::TraceConfig_LockdownModeOperation lockdown_mode() const;
  void set_lockdown_mode(::perfetto::protos::TraceConfig_LockdownModeOperation value);

  // optional uint32 file_write_period_ms = 9;
  bool has_file_write_period_ms() const;
  void clear_file_write_period_ms();
  static const int kFileWritePeriodMsFieldNumber = 9;
  ::google::protobuf::uint32 file_write_period_ms() const;
  void set_file_write_period_ms(::google::protobuf::uint32 value);

  // optional bool enable_extra_guardrails = 4;
  bool has_enable_extra_guardrails() const;
  void clear_enable_extra_guardrails();
  static const int kEnableExtraGuardrailsFieldNumber = 4;
  bool enable_extra_guardrails() const;
  void set_enable_extra_guardrails(bool value);

  // optional bool write_into_file = 8;
  bool has_write_into_file() const;
  void clear_write_into_file();
  static const int kWriteIntoFileFieldNumber = 8;
  bool write_into_file() const;
  void set_write_into_file(bool value);

  // optional bool deferred_start = 12;
  bool has_deferred_start() const;
  void clear_deferred_start();
  static const int kDeferredStartFieldNumber = 12;
  bool deferred_start() const;
  void set_deferred_start(bool value);

  // optional bool notify_traceur = 16;
  bool has_notify_traceur() const;
  void clear_notify_traceur();
  static const int kNotifyTraceurFieldNumber = 16;
  bool notify_traceur() const;
  void set_notify_traceur(bool value);

  // optional uint64 max_file_size_bytes = 10;
  bool has_max_file_size_bytes() const;
  void clear_max_file_size_bytes();
  static const int kMaxFileSizeBytesFieldNumber = 10;
  ::google::protobuf::uint64 max_file_size_bytes() const;
  void set_max_file_size_bytes(::google::protobuf::uint64 value);

  // optional uint32 flush_period_ms = 13;
  bool has_flush_period_ms() const;
  void clear_flush_period_ms();
  static const int kFlushPeriodMsFieldNumber = 13;
  ::google::protobuf::uint32 flush_period_ms() const;
  void set_flush_period_ms(::google::protobuf::uint32 value);

  // optional uint32 flush_timeout_ms = 14;
  bool has_flush_timeout_ms() const;
  void clear_flush_timeout_ms();
  static const int kFlushTimeoutMsFieldNumber = 14;
  ::google::protobuf::uint32 flush_timeout_ms() const;
  void set_flush_timeout_ms(::google::protobuf::uint32 value);

  // optional bool allow_user_build_tracing = 19;
  bool has_allow_user_build_tracing() const;
  void clear_allow_user_build_tracing();
  static const int kAllowUserBuildTracingFieldNumber = 19;
  bool allow_user_build_tracing() const;
  void set_allow_user_build_tracing(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.TraceConfig)
 private:
  void set_has_builtin_data_sources();
  void clear_has_builtin_data_sources();
  void set_has_duration_ms();
  void clear_has_duration_ms();
  void set_has_enable_extra_guardrails();
  void clear_has_enable_extra_guardrails();
  void set_has_lockdown_mode();
  void clear_has_lockdown_mode();
  void set_has_statsd_metadata();
  void clear_has_statsd_metadata();
  void set_has_write_into_file();
  void clear_has_write_into_file();
  void set_has_file_write_period_ms();
  void clear_has_file_write_period_ms();
  void set_has_max_file_size_bytes();
  void clear_has_max_file_size_bytes();
  void set_has_guardrail_overrides();
  void clear_has_guardrail_overrides();
  void set_has_deferred_start();
  void clear_has_deferred_start();
  void set_has_flush_period_ms();
  void clear_has_flush_period_ms();
  void set_has_flush_timeout_ms();
  void clear_has_flush_timeout_ms();
  void set_has_notify_traceur();
  void clear_has_notify_traceur();
  void set_has_trigger_config();
  void clear_has_trigger_config();
  void set_has_allow_user_build_tracing();
  void clear_has_allow_user_build_tracing();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig > buffers_;
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource > data_sources_;
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig > producers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> activate_triggers_;
  ::perfetto::protos::TraceConfig_StatsdMetadata* statsd_metadata_;
  ::perfetto::protos::TraceConfig_GuardrailOverrides* guardrail_overrides_;
  ::perfetto::protos::TraceConfig_TriggerConfig* trigger_config_;
  ::perfetto::protos::TraceConfig_BuiltinDataSource* builtin_data_sources_;
  ::google::protobuf::uint32 duration_ms_;
  int lockdown_mode_;
  ::google::protobuf::uint32 file_write_period_ms_;
  bool enable_extra_guardrails_;
  bool write_into_file_;
  bool deferred_start_;
  bool notify_traceur_;
  ::google::protobuf::uint64 max_file_size_bytes_;
  ::google::protobuf::uint32 flush_period_ms_;
  ::google::protobuf::uint32 flush_timeout_ms_;
  bool allow_user_build_tracing_;
  friend struct ::protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TraceConfig_BufferConfig

// optional uint32 size_kb = 1;
inline bool TraceConfig_BufferConfig::has_size_kb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_BufferConfig::set_has_size_kb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_BufferConfig::clear_has_size_kb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_BufferConfig::clear_size_kb() {
  size_kb_ = 0u;
  clear_has_size_kb();
}
inline ::google::protobuf::uint32 TraceConfig_BufferConfig::size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BufferConfig.size_kb)
  return size_kb_;
}
inline void TraceConfig_BufferConfig::set_size_kb(::google::protobuf::uint32 value) {
  set_has_size_kb();
  size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BufferConfig.size_kb)
}

// optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
inline bool TraceConfig_BufferConfig::has_fill_policy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_BufferConfig::set_has_fill_policy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_BufferConfig::clear_has_fill_policy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_BufferConfig::clear_fill_policy() {
  fill_policy_ = 0;
  clear_has_fill_policy();
}
inline ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::fill_policy() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BufferConfig.fill_policy)
  return static_cast< ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy >(fill_policy_);
}
inline void TraceConfig_BufferConfig::set_fill_policy(::perfetto::protos::TraceConfig_BufferConfig_FillPolicy value) {
  assert(::perfetto::protos::TraceConfig_BufferConfig_FillPolicy_IsValid(value));
  set_has_fill_policy();
  fill_policy_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BufferConfig.fill_policy)
}

// -------------------------------------------------------------------

// TraceConfig_DataSource

// optional .perfetto.protos.DataSourceConfig config = 1;
inline bool TraceConfig_DataSource::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_DataSource::set_has_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_DataSource::clear_has_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::DataSourceConfig& TraceConfig_DataSource::_internal_config() const {
  return *config_;
}
inline const ::perfetto::protos::DataSourceConfig& TraceConfig_DataSource::config() const {
  const ::perfetto::protos::DataSourceConfig* p = config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.DataSource.config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::DataSourceConfig*>(
      &::perfetto::protos::_DataSourceConfig_default_instance_);
}
inline ::perfetto::protos::DataSourceConfig* TraceConfig_DataSource::release_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.DataSource.config)
  clear_has_config();
  ::perfetto::protos::DataSourceConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::perfetto::protos::DataSourceConfig* TraceConfig_DataSource::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::DataSourceConfig>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.DataSource.config)
  return config_;
}
inline void TraceConfig_DataSource::set_allocated_config(::perfetto::protos::DataSourceConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
  } else {
    clear_has_config();
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.DataSource.config)
}

// repeated string producer_name_filter = 2;
inline int TraceConfig_DataSource::producer_name_filter_size() const {
  return producer_name_filter_.size();
}
inline void TraceConfig_DataSource::clear_producer_name_filter() {
  producer_name_filter_.Clear();
}
inline const ::std::string& TraceConfig_DataSource::producer_name_filter(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Get(index);
}
inline ::std::string* TraceConfig_DataSource::mutable_producer_name_filter(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Mutable(index);
}
inline void TraceConfig_DataSource::set_producer_name_filter(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  producer_name_filter_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TraceConfig_DataSource::set_producer_name_filter(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  producer_name_filter_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TraceConfig_DataSource::set_producer_name_filter(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  producer_name_filter_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
inline void TraceConfig_DataSource::set_producer_name_filter(int index, const char* value, size_t size) {
  producer_name_filter_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
inline ::std::string* TraceConfig_DataSource::add_producer_name_filter() {
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_.Add();
}
inline void TraceConfig_DataSource::add_producer_name_filter(const ::std::string& value) {
  producer_name_filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
#if LANG_CXX11
inline void TraceConfig_DataSource::add_producer_name_filter(::std::string&& value) {
  producer_name_filter_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
#endif
inline void TraceConfig_DataSource::add_producer_name_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  producer_name_filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
inline void TraceConfig_DataSource::add_producer_name_filter(const char* value, size_t size) {
  producer_name_filter_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TraceConfig_DataSource::producer_name_filter() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return producer_name_filter_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TraceConfig_DataSource::mutable_producer_name_filter() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.DataSource.producer_name_filter)
  return &producer_name_filter_;
}

// -------------------------------------------------------------------

// TraceConfig_BuiltinDataSource

// optional bool disable_clock_snapshotting = 1;
inline bool TraceConfig_BuiltinDataSource::has_disable_clock_snapshotting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_BuiltinDataSource::set_has_disable_clock_snapshotting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_BuiltinDataSource::clear_has_disable_clock_snapshotting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_BuiltinDataSource::clear_disable_clock_snapshotting() {
  disable_clock_snapshotting_ = false;
  clear_has_disable_clock_snapshotting();
}
inline bool TraceConfig_BuiltinDataSource::disable_clock_snapshotting() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BuiltinDataSource.disable_clock_snapshotting)
  return disable_clock_snapshotting_;
}
inline void TraceConfig_BuiltinDataSource::set_disable_clock_snapshotting(bool value) {
  set_has_disable_clock_snapshotting();
  disable_clock_snapshotting_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BuiltinDataSource.disable_clock_snapshotting)
}

// optional bool disable_trace_config = 2;
inline bool TraceConfig_BuiltinDataSource::has_disable_trace_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_BuiltinDataSource::set_has_disable_trace_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_BuiltinDataSource::clear_has_disable_trace_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_BuiltinDataSource::clear_disable_trace_config() {
  disable_trace_config_ = false;
  clear_has_disable_trace_config();
}
inline bool TraceConfig_BuiltinDataSource::disable_trace_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BuiltinDataSource.disable_trace_config)
  return disable_trace_config_;
}
inline void TraceConfig_BuiltinDataSource::set_disable_trace_config(bool value) {
  set_has_disable_trace_config();
  disable_trace_config_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BuiltinDataSource.disable_trace_config)
}

// optional bool disable_system_info = 3;
inline bool TraceConfig_BuiltinDataSource::has_disable_system_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraceConfig_BuiltinDataSource::set_has_disable_system_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraceConfig_BuiltinDataSource::clear_has_disable_system_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraceConfig_BuiltinDataSource::clear_disable_system_info() {
  disable_system_info_ = false;
  clear_has_disable_system_info();
}
inline bool TraceConfig_BuiltinDataSource::disable_system_info() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.BuiltinDataSource.disable_system_info)
  return disable_system_info_;
}
inline void TraceConfig_BuiltinDataSource::set_disable_system_info(bool value) {
  set_has_disable_system_info();
  disable_system_info_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.BuiltinDataSource.disable_system_info)
}

// -------------------------------------------------------------------

// TraceConfig_ProducerConfig

// optional string producer_name = 1;
inline bool TraceConfig_ProducerConfig::has_producer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_ProducerConfig::set_has_producer_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_ProducerConfig::clear_has_producer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_ProducerConfig::clear_producer_name() {
  producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name();
}
inline const ::std::string& TraceConfig_ProducerConfig::producer_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  return producer_name_.GetNoArena();
}
inline void TraceConfig_ProducerConfig::set_producer_name(const ::std::string& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
#if LANG_CXX11
inline void TraceConfig_ProducerConfig::set_producer_name(::std::string&& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
#endif
inline void TraceConfig_ProducerConfig::set_producer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
inline void TraceConfig_ProducerConfig::set_producer_name(const char* value, size_t size) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}
inline ::std::string* TraceConfig_ProducerConfig::mutable_producer_name() {
  set_has_producer_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  return producer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraceConfig_ProducerConfig::release_producer_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
  if (!has_producer_name()) {
    return NULL;
  }
  clear_has_producer_name();
  return producer_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraceConfig_ProducerConfig::set_allocated_producer_name(::std::string* producer_name) {
  if (producer_name != NULL) {
    set_has_producer_name();
  } else {
    clear_has_producer_name();
  }
  producer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.ProducerConfig.producer_name)
}

// optional uint32 shm_size_kb = 2;
inline bool TraceConfig_ProducerConfig::has_shm_size_kb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_ProducerConfig::set_has_shm_size_kb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_ProducerConfig::clear_has_shm_size_kb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_ProducerConfig::clear_shm_size_kb() {
  shm_size_kb_ = 0u;
  clear_has_shm_size_kb();
}
inline ::google::protobuf::uint32 TraceConfig_ProducerConfig::shm_size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.shm_size_kb)
  return shm_size_kb_;
}
inline void TraceConfig_ProducerConfig::set_shm_size_kb(::google::protobuf::uint32 value) {
  set_has_shm_size_kb();
  shm_size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.shm_size_kb)
}

// optional uint32 page_size_kb = 3;
inline bool TraceConfig_ProducerConfig::has_page_size_kb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraceConfig_ProducerConfig::set_has_page_size_kb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraceConfig_ProducerConfig::clear_has_page_size_kb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraceConfig_ProducerConfig::clear_page_size_kb() {
  page_size_kb_ = 0u;
  clear_has_page_size_kb();
}
inline ::google::protobuf::uint32 TraceConfig_ProducerConfig::page_size_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.ProducerConfig.page_size_kb)
  return page_size_kb_;
}
inline void TraceConfig_ProducerConfig::set_page_size_kb(::google::protobuf::uint32 value) {
  set_has_page_size_kb();
  page_size_kb_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.ProducerConfig.page_size_kb)
}

// -------------------------------------------------------------------

// TraceConfig_StatsdMetadata

// optional int64 triggering_alert_id = 1;
inline bool TraceConfig_StatsdMetadata::has_triggering_alert_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_StatsdMetadata::set_has_triggering_alert_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_StatsdMetadata::clear_has_triggering_alert_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_StatsdMetadata::clear_triggering_alert_id() {
  triggering_alert_id_ = GOOGLE_LONGLONG(0);
  clear_has_triggering_alert_id();
}
inline ::google::protobuf::int64 TraceConfig_StatsdMetadata::triggering_alert_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_alert_id)
  return triggering_alert_id_;
}
inline void TraceConfig_StatsdMetadata::set_triggering_alert_id(::google::protobuf::int64 value) {
  set_has_triggering_alert_id();
  triggering_alert_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_alert_id)
}

// optional int32 triggering_config_uid = 2;
inline bool TraceConfig_StatsdMetadata::has_triggering_config_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TraceConfig_StatsdMetadata::set_has_triggering_config_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TraceConfig_StatsdMetadata::clear_has_triggering_config_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TraceConfig_StatsdMetadata::clear_triggering_config_uid() {
  triggering_config_uid_ = 0;
  clear_has_triggering_config_uid();
}
inline ::google::protobuf::int32 TraceConfig_StatsdMetadata::triggering_config_uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_uid)
  return triggering_config_uid_;
}
inline void TraceConfig_StatsdMetadata::set_triggering_config_uid(::google::protobuf::int32 value) {
  set_has_triggering_config_uid();
  triggering_config_uid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_uid)
}

// optional int64 triggering_config_id = 3;
inline bool TraceConfig_StatsdMetadata::has_triggering_config_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_StatsdMetadata::set_has_triggering_config_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_StatsdMetadata::clear_has_triggering_config_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_StatsdMetadata::clear_triggering_config_id() {
  triggering_config_id_ = GOOGLE_LONGLONG(0);
  clear_has_triggering_config_id();
}
inline ::google::protobuf::int64 TraceConfig_StatsdMetadata::triggering_config_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_id)
  return triggering_config_id_;
}
inline void TraceConfig_StatsdMetadata::set_triggering_config_id(::google::protobuf::int64 value) {
  set_has_triggering_config_id();
  triggering_config_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_config_id)
}

// optional int64 triggering_subscription_id = 4;
inline bool TraceConfig_StatsdMetadata::has_triggering_subscription_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraceConfig_StatsdMetadata::set_has_triggering_subscription_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraceConfig_StatsdMetadata::clear_has_triggering_subscription_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraceConfig_StatsdMetadata::clear_triggering_subscription_id() {
  triggering_subscription_id_ = GOOGLE_LONGLONG(0);
  clear_has_triggering_subscription_id();
}
inline ::google::protobuf::int64 TraceConfig_StatsdMetadata::triggering_subscription_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.StatsdMetadata.triggering_subscription_id)
  return triggering_subscription_id_;
}
inline void TraceConfig_StatsdMetadata::set_triggering_subscription_id(::google::protobuf::int64 value) {
  set_has_triggering_subscription_id();
  triggering_subscription_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.StatsdMetadata.triggering_subscription_id)
}

// -------------------------------------------------------------------

// TraceConfig_GuardrailOverrides

// optional uint64 max_upload_per_day_bytes = 1;
inline bool TraceConfig_GuardrailOverrides::has_max_upload_per_day_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_GuardrailOverrides::set_has_max_upload_per_day_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_GuardrailOverrides::clear_has_max_upload_per_day_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_GuardrailOverrides::clear_max_upload_per_day_bytes() {
  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_max_upload_per_day_bytes();
}
inline ::google::protobuf::uint64 TraceConfig_GuardrailOverrides::max_upload_per_day_bytes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.GuardrailOverrides.max_upload_per_day_bytes)
  return max_upload_per_day_bytes_;
}
inline void TraceConfig_GuardrailOverrides::set_max_upload_per_day_bytes(::google::protobuf::uint64 value) {
  set_has_max_upload_per_day_bytes();
  max_upload_per_day_bytes_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.GuardrailOverrides.max_upload_per_day_bytes)
}

// -------------------------------------------------------------------

// TraceConfig_TriggerConfig_Trigger

// optional string name = 1;
inline bool TraceConfig_TriggerConfig_Trigger::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_TriggerConfig_Trigger::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TraceConfig_TriggerConfig_Trigger::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
  return name_.GetNoArena();
}
inline void TraceConfig_TriggerConfig_Trigger::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
}
#if LANG_CXX11
inline void TraceConfig_TriggerConfig_Trigger::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
}
#endif
inline void TraceConfig_TriggerConfig_Trigger::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
}
inline void TraceConfig_TriggerConfig_Trigger::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
}
inline ::std::string* TraceConfig_TriggerConfig_Trigger::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraceConfig_TriggerConfig_Trigger::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraceConfig_TriggerConfig_Trigger::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.TriggerConfig.Trigger.name)
}

// optional string producer_name_regex = 2;
inline bool TraceConfig_TriggerConfig_Trigger::has_producer_name_regex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_TriggerConfig_Trigger::set_has_producer_name_regex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_has_producer_name_regex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_producer_name_regex() {
  producer_name_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name_regex();
}
inline const ::std::string& TraceConfig_TriggerConfig_Trigger::producer_name_regex() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
  return producer_name_regex_.GetNoArena();
}
inline void TraceConfig_TriggerConfig_Trigger::set_producer_name_regex(const ::std::string& value) {
  set_has_producer_name_regex();
  producer_name_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
}
#if LANG_CXX11
inline void TraceConfig_TriggerConfig_Trigger::set_producer_name_regex(::std::string&& value) {
  set_has_producer_name_regex();
  producer_name_regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
}
#endif
inline void TraceConfig_TriggerConfig_Trigger::set_producer_name_regex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_producer_name_regex();
  producer_name_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
}
inline void TraceConfig_TriggerConfig_Trigger::set_producer_name_regex(const char* value, size_t size) {
  set_has_producer_name_regex();
  producer_name_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
}
inline ::std::string* TraceConfig_TriggerConfig_Trigger::mutable_producer_name_regex() {
  set_has_producer_name_regex();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
  return producer_name_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraceConfig_TriggerConfig_Trigger::release_producer_name_regex() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
  if (!has_producer_name_regex()) {
    return NULL;
  }
  clear_has_producer_name_regex();
  return producer_name_regex_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraceConfig_TriggerConfig_Trigger::set_allocated_producer_name_regex(::std::string* producer_name_regex) {
  if (producer_name_regex != NULL) {
    set_has_producer_name_regex();
  } else {
    clear_has_producer_name_regex();
  }
  producer_name_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name_regex);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.TriggerConfig.Trigger.producer_name_regex)
}

// optional uint32 stop_delay_ms = 3;
inline bool TraceConfig_TriggerConfig_Trigger::has_stop_delay_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraceConfig_TriggerConfig_Trigger::set_has_stop_delay_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_has_stop_delay_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraceConfig_TriggerConfig_Trigger::clear_stop_delay_ms() {
  stop_delay_ms_ = 0u;
  clear_has_stop_delay_ms();
}
inline ::google::protobuf::uint32 TraceConfig_TriggerConfig_Trigger::stop_delay_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.Trigger.stop_delay_ms)
  return stop_delay_ms_;
}
inline void TraceConfig_TriggerConfig_Trigger::set_stop_delay_ms(::google::protobuf::uint32 value) {
  set_has_stop_delay_ms();
  stop_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.TriggerConfig.Trigger.stop_delay_ms)
}

// -------------------------------------------------------------------

// TraceConfig_TriggerConfig

// optional .perfetto.protos.TraceConfig.TriggerConfig.TriggerMode trigger_mode = 1;
inline bool TraceConfig_TriggerConfig::has_trigger_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig_TriggerConfig::set_has_trigger_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig_TriggerConfig::clear_has_trigger_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig_TriggerConfig::clear_trigger_mode() {
  trigger_mode_ = 0;
  clear_has_trigger_mode();
}
inline ::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::trigger_mode() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.trigger_mode)
  return static_cast< ::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode >(trigger_mode_);
}
inline void TraceConfig_TriggerConfig::set_trigger_mode(::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode value) {
  assert(::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode_IsValid(value));
  set_has_trigger_mode();
  trigger_mode_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.TriggerConfig.trigger_mode)
}

// repeated .perfetto.protos.TraceConfig.TriggerConfig.Trigger triggers = 2;
inline int TraceConfig_TriggerConfig::triggers_size() const {
  return triggers_.size();
}
inline void TraceConfig_TriggerConfig::clear_triggers() {
  triggers_.Clear();
}
inline ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* TraceConfig_TriggerConfig::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.TriggerConfig.triggers)
  return triggers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >*
TraceConfig_TriggerConfig::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.TriggerConfig.triggers)
  return &triggers_;
}
inline const ::perfetto::protos::TraceConfig_TriggerConfig_Trigger& TraceConfig_TriggerConfig::triggers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.triggers)
  return triggers_.Get(index);
}
inline ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* TraceConfig_TriggerConfig::add_triggers() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.TriggerConfig.triggers)
  return triggers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >&
TraceConfig_TriggerConfig::triggers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.TriggerConfig.triggers)
  return triggers_;
}

// optional uint32 trigger_timeout_ms = 3;
inline bool TraceConfig_TriggerConfig::has_trigger_timeout_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig_TriggerConfig::set_has_trigger_timeout_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig_TriggerConfig::clear_has_trigger_timeout_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig_TriggerConfig::clear_trigger_timeout_ms() {
  trigger_timeout_ms_ = 0u;
  clear_has_trigger_timeout_ms();
}
inline ::google::protobuf::uint32 TraceConfig_TriggerConfig::trigger_timeout_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.TriggerConfig.trigger_timeout_ms)
  return trigger_timeout_ms_;
}
inline void TraceConfig_TriggerConfig::set_trigger_timeout_ms(::google::protobuf::uint32 value) {
  set_has_trigger_timeout_ms();
  trigger_timeout_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.TriggerConfig.trigger_timeout_ms)
}

// -------------------------------------------------------------------

// TraceConfig

// repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
inline int TraceConfig::buffers_size() const {
  return buffers_.size();
}
inline void TraceConfig::clear_buffers() {
  buffers_.Clear();
}
inline ::perfetto::protos::TraceConfig_BufferConfig* TraceConfig::mutable_buffers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.buffers)
  return buffers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >*
TraceConfig::mutable_buffers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.buffers)
  return &buffers_;
}
inline const ::perfetto::protos::TraceConfig_BufferConfig& TraceConfig::buffers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.buffers)
  return buffers_.Get(index);
}
inline ::perfetto::protos::TraceConfig_BufferConfig* TraceConfig::add_buffers() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.buffers)
  return buffers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_BufferConfig >&
TraceConfig::buffers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.buffers)
  return buffers_;
}

// repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
inline int TraceConfig::data_sources_size() const {
  return data_sources_.size();
}
inline void TraceConfig::clear_data_sources() {
  data_sources_.Clear();
}
inline ::perfetto::protos::TraceConfig_DataSource* TraceConfig::mutable_data_sources(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >*
TraceConfig::mutable_data_sources() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.data_sources)
  return &data_sources_;
}
inline const ::perfetto::protos::TraceConfig_DataSource& TraceConfig::data_sources(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Get(index);
}
inline ::perfetto::protos::TraceConfig_DataSource* TraceConfig::add_data_sources() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.data_sources)
  return data_sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_DataSource >&
TraceConfig::data_sources() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.data_sources)
  return data_sources_;
}

// optional .perfetto.protos.TraceConfig.BuiltinDataSource builtin_data_sources = 20;
inline bool TraceConfig::has_builtin_data_sources() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TraceConfig::set_has_builtin_data_sources() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TraceConfig::clear_has_builtin_data_sources() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TraceConfig::clear_builtin_data_sources() {
  if (builtin_data_sources_ != NULL) builtin_data_sources_->Clear();
  clear_has_builtin_data_sources();
}
inline const ::perfetto::protos::TraceConfig_BuiltinDataSource& TraceConfig::_internal_builtin_data_sources() const {
  return *builtin_data_sources_;
}
inline const ::perfetto::protos::TraceConfig_BuiltinDataSource& TraceConfig::builtin_data_sources() const {
  const ::perfetto::protos::TraceConfig_BuiltinDataSource* p = builtin_data_sources_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.builtin_data_sources)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceConfig_BuiltinDataSource*>(
      &::perfetto::protos::_TraceConfig_BuiltinDataSource_default_instance_);
}
inline ::perfetto::protos::TraceConfig_BuiltinDataSource* TraceConfig::release_builtin_data_sources() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.builtin_data_sources)
  clear_has_builtin_data_sources();
  ::perfetto::protos::TraceConfig_BuiltinDataSource* temp = builtin_data_sources_;
  builtin_data_sources_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceConfig_BuiltinDataSource* TraceConfig::mutable_builtin_data_sources() {
  set_has_builtin_data_sources();
  if (builtin_data_sources_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceConfig_BuiltinDataSource>(GetArenaNoVirtual());
    builtin_data_sources_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.builtin_data_sources)
  return builtin_data_sources_;
}
inline void TraceConfig::set_allocated_builtin_data_sources(::perfetto::protos::TraceConfig_BuiltinDataSource* builtin_data_sources) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete builtin_data_sources_;
  }
  if (builtin_data_sources) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      builtin_data_sources = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, builtin_data_sources, submessage_arena);
    }
    set_has_builtin_data_sources();
  } else {
    clear_has_builtin_data_sources();
  }
  builtin_data_sources_ = builtin_data_sources;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.builtin_data_sources)
}

// optional uint32 duration_ms = 3;
inline bool TraceConfig::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TraceConfig::set_has_duration_ms() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TraceConfig::clear_has_duration_ms() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TraceConfig::clear_duration_ms() {
  duration_ms_ = 0u;
  clear_has_duration_ms();
}
inline ::google::protobuf::uint32 TraceConfig::duration_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.duration_ms)
  return duration_ms_;
}
inline void TraceConfig::set_duration_ms(::google::protobuf::uint32 value) {
  set_has_duration_ms();
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.duration_ms)
}

// optional bool enable_extra_guardrails = 4;
inline bool TraceConfig::has_enable_extra_guardrails() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TraceConfig::set_has_enable_extra_guardrails() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TraceConfig::clear_has_enable_extra_guardrails() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TraceConfig::clear_enable_extra_guardrails() {
  enable_extra_guardrails_ = false;
  clear_has_enable_extra_guardrails();
}
inline bool TraceConfig::enable_extra_guardrails() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.enable_extra_guardrails)
  return enable_extra_guardrails_;
}
inline void TraceConfig::set_enable_extra_guardrails(bool value) {
  set_has_enable_extra_guardrails();
  enable_extra_guardrails_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.enable_extra_guardrails)
}

// optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
inline bool TraceConfig::has_lockdown_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TraceConfig::set_has_lockdown_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TraceConfig::clear_has_lockdown_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TraceConfig::clear_lockdown_mode() {
  lockdown_mode_ = 0;
  clear_has_lockdown_mode();
}
inline ::perfetto::protos::TraceConfig_LockdownModeOperation TraceConfig::lockdown_mode() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.lockdown_mode)
  return static_cast< ::perfetto::protos::TraceConfig_LockdownModeOperation >(lockdown_mode_);
}
inline void TraceConfig::set_lockdown_mode(::perfetto::protos::TraceConfig_LockdownModeOperation value) {
  assert(::perfetto::protos::TraceConfig_LockdownModeOperation_IsValid(value));
  set_has_lockdown_mode();
  lockdown_mode_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.lockdown_mode)
}

// repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
inline int TraceConfig::producers_size() const {
  return producers_.size();
}
inline void TraceConfig::clear_producers() {
  producers_.Clear();
}
inline ::perfetto::protos::TraceConfig_ProducerConfig* TraceConfig::mutable_producers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.producers)
  return producers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >*
TraceConfig::mutable_producers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.producers)
  return &producers_;
}
inline const ::perfetto::protos::TraceConfig_ProducerConfig& TraceConfig::producers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.producers)
  return producers_.Get(index);
}
inline ::perfetto::protos::TraceConfig_ProducerConfig* TraceConfig::add_producers() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.producers)
  return producers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::TraceConfig_ProducerConfig >&
TraceConfig::producers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.producers)
  return producers_;
}

// optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
inline bool TraceConfig::has_statsd_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraceConfig::set_has_statsd_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraceConfig::clear_has_statsd_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraceConfig::clear_statsd_metadata() {
  if (statsd_metadata_ != NULL) statsd_metadata_->Clear();
  clear_has_statsd_metadata();
}
inline const ::perfetto::protos::TraceConfig_StatsdMetadata& TraceConfig::_internal_statsd_metadata() const {
  return *statsd_metadata_;
}
inline const ::perfetto::protos::TraceConfig_StatsdMetadata& TraceConfig::statsd_metadata() const {
  const ::perfetto::protos::TraceConfig_StatsdMetadata* p = statsd_metadata_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.statsd_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceConfig_StatsdMetadata*>(
      &::perfetto::protos::_TraceConfig_StatsdMetadata_default_instance_);
}
inline ::perfetto::protos::TraceConfig_StatsdMetadata* TraceConfig::release_statsd_metadata() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.statsd_metadata)
  clear_has_statsd_metadata();
  ::perfetto::protos::TraceConfig_StatsdMetadata* temp = statsd_metadata_;
  statsd_metadata_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceConfig_StatsdMetadata* TraceConfig::mutable_statsd_metadata() {
  set_has_statsd_metadata();
  if (statsd_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceConfig_StatsdMetadata>(GetArenaNoVirtual());
    statsd_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.statsd_metadata)
  return statsd_metadata_;
}
inline void TraceConfig::set_allocated_statsd_metadata(::perfetto::protos::TraceConfig_StatsdMetadata* statsd_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete statsd_metadata_;
  }
  if (statsd_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      statsd_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statsd_metadata, submessage_arena);
    }
    set_has_statsd_metadata();
  } else {
    clear_has_statsd_metadata();
  }
  statsd_metadata_ = statsd_metadata;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.statsd_metadata)
}

// optional bool write_into_file = 8;
inline bool TraceConfig::has_write_into_file() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TraceConfig::set_has_write_into_file() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TraceConfig::clear_has_write_into_file() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TraceConfig::clear_write_into_file() {
  write_into_file_ = false;
  clear_has_write_into_file();
}
inline bool TraceConfig::write_into_file() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.write_into_file)
  return write_into_file_;
}
inline void TraceConfig::set_write_into_file(bool value) {
  set_has_write_into_file();
  write_into_file_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.write_into_file)
}

// optional uint32 file_write_period_ms = 9;
inline bool TraceConfig::has_file_write_period_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TraceConfig::set_has_file_write_period_ms() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TraceConfig::clear_has_file_write_period_ms() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TraceConfig::clear_file_write_period_ms() {
  file_write_period_ms_ = 0u;
  clear_has_file_write_period_ms();
}
inline ::google::protobuf::uint32 TraceConfig::file_write_period_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.file_write_period_ms)
  return file_write_period_ms_;
}
inline void TraceConfig::set_file_write_period_ms(::google::protobuf::uint32 value) {
  set_has_file_write_period_ms();
  file_write_period_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.file_write_period_ms)
}

// optional uint64 max_file_size_bytes = 10;
inline bool TraceConfig::has_max_file_size_bytes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TraceConfig::set_has_max_file_size_bytes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TraceConfig::clear_has_max_file_size_bytes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TraceConfig::clear_max_file_size_bytes() {
  max_file_size_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_max_file_size_bytes();
}
inline ::google::protobuf::uint64 TraceConfig::max_file_size_bytes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.max_file_size_bytes)
  return max_file_size_bytes_;
}
inline void TraceConfig::set_max_file_size_bytes(::google::protobuf::uint64 value) {
  set_has_max_file_size_bytes();
  max_file_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.max_file_size_bytes)
}

// optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
inline bool TraceConfig::has_guardrail_overrides() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraceConfig::set_has_guardrail_overrides() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraceConfig::clear_has_guardrail_overrides() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraceConfig::clear_guardrail_overrides() {
  if (guardrail_overrides_ != NULL) guardrail_overrides_->Clear();
  clear_has_guardrail_overrides();
}
inline const ::perfetto::protos::TraceConfig_GuardrailOverrides& TraceConfig::_internal_guardrail_overrides() const {
  return *guardrail_overrides_;
}
inline const ::perfetto::protos::TraceConfig_GuardrailOverrides& TraceConfig::guardrail_overrides() const {
  const ::perfetto::protos::TraceConfig_GuardrailOverrides* p = guardrail_overrides_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.guardrail_overrides)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceConfig_GuardrailOverrides*>(
      &::perfetto::protos::_TraceConfig_GuardrailOverrides_default_instance_);
}
inline ::perfetto::protos::TraceConfig_GuardrailOverrides* TraceConfig::release_guardrail_overrides() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.guardrail_overrides)
  clear_has_guardrail_overrides();
  ::perfetto::protos::TraceConfig_GuardrailOverrides* temp = guardrail_overrides_;
  guardrail_overrides_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceConfig_GuardrailOverrides* TraceConfig::mutable_guardrail_overrides() {
  set_has_guardrail_overrides();
  if (guardrail_overrides_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceConfig_GuardrailOverrides>(GetArenaNoVirtual());
    guardrail_overrides_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.guardrail_overrides)
  return guardrail_overrides_;
}
inline void TraceConfig::set_allocated_guardrail_overrides(::perfetto::protos::TraceConfig_GuardrailOverrides* guardrail_overrides) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete guardrail_overrides_;
  }
  if (guardrail_overrides) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guardrail_overrides = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guardrail_overrides, submessage_arena);
    }
    set_has_guardrail_overrides();
  } else {
    clear_has_guardrail_overrides();
  }
  guardrail_overrides_ = guardrail_overrides;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.guardrail_overrides)
}

// optional bool deferred_start = 12;
inline bool TraceConfig::has_deferred_start() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TraceConfig::set_has_deferred_start() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TraceConfig::clear_has_deferred_start() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TraceConfig::clear_deferred_start() {
  deferred_start_ = false;
  clear_has_deferred_start();
}
inline bool TraceConfig::deferred_start() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.deferred_start)
  return deferred_start_;
}
inline void TraceConfig::set_deferred_start(bool value) {
  set_has_deferred_start();
  deferred_start_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.deferred_start)
}

// optional uint32 flush_period_ms = 13;
inline bool TraceConfig::has_flush_period_ms() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TraceConfig::set_has_flush_period_ms() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TraceConfig::clear_has_flush_period_ms() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TraceConfig::clear_flush_period_ms() {
  flush_period_ms_ = 0u;
  clear_has_flush_period_ms();
}
inline ::google::protobuf::uint32 TraceConfig::flush_period_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.flush_period_ms)
  return flush_period_ms_;
}
inline void TraceConfig::set_flush_period_ms(::google::protobuf::uint32 value) {
  set_has_flush_period_ms();
  flush_period_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.flush_period_ms)
}

// optional uint32 flush_timeout_ms = 14;
inline bool TraceConfig::has_flush_timeout_ms() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TraceConfig::set_has_flush_timeout_ms() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TraceConfig::clear_has_flush_timeout_ms() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TraceConfig::clear_flush_timeout_ms() {
  flush_timeout_ms_ = 0u;
  clear_has_flush_timeout_ms();
}
inline ::google::protobuf::uint32 TraceConfig::flush_timeout_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.flush_timeout_ms)
  return flush_timeout_ms_;
}
inline void TraceConfig::set_flush_timeout_ms(::google::protobuf::uint32 value) {
  set_has_flush_timeout_ms();
  flush_timeout_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.flush_timeout_ms)
}

// optional bool notify_traceur = 16;
inline bool TraceConfig::has_notify_traceur() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TraceConfig::set_has_notify_traceur() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TraceConfig::clear_has_notify_traceur() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TraceConfig::clear_notify_traceur() {
  notify_traceur_ = false;
  clear_has_notify_traceur();
}
inline bool TraceConfig::notify_traceur() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.notify_traceur)
  return notify_traceur_;
}
inline void TraceConfig::set_notify_traceur(bool value) {
  set_has_notify_traceur();
  notify_traceur_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.notify_traceur)
}

// optional .perfetto.protos.TraceConfig.TriggerConfig trigger_config = 17;
inline bool TraceConfig::has_trigger_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraceConfig::set_has_trigger_config() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraceConfig::clear_has_trigger_config() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraceConfig::clear_trigger_config() {
  if (trigger_config_ != NULL) trigger_config_->Clear();
  clear_has_trigger_config();
}
inline const ::perfetto::protos::TraceConfig_TriggerConfig& TraceConfig::_internal_trigger_config() const {
  return *trigger_config_;
}
inline const ::perfetto::protos::TraceConfig_TriggerConfig& TraceConfig::trigger_config() const {
  const ::perfetto::protos::TraceConfig_TriggerConfig* p = trigger_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.trigger_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceConfig_TriggerConfig*>(
      &::perfetto::protos::_TraceConfig_TriggerConfig_default_instance_);
}
inline ::perfetto::protos::TraceConfig_TriggerConfig* TraceConfig::release_trigger_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TraceConfig.trigger_config)
  clear_has_trigger_config();
  ::perfetto::protos::TraceConfig_TriggerConfig* temp = trigger_config_;
  trigger_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceConfig_TriggerConfig* TraceConfig::mutable_trigger_config() {
  set_has_trigger_config();
  if (trigger_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceConfig_TriggerConfig>(GetArenaNoVirtual());
    trigger_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.trigger_config)
  return trigger_config_;
}
inline void TraceConfig::set_allocated_trigger_config(::perfetto::protos::TraceConfig_TriggerConfig* trigger_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete trigger_config_;
  }
  if (trigger_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trigger_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trigger_config, submessage_arena);
    }
    set_has_trigger_config();
  } else {
    clear_has_trigger_config();
  }
  trigger_config_ = trigger_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TraceConfig.trigger_config)
}

// repeated string activate_triggers = 18;
inline int TraceConfig::activate_triggers_size() const {
  return activate_triggers_.size();
}
inline void TraceConfig::clear_activate_triggers() {
  activate_triggers_.Clear();
}
inline const ::std::string& TraceConfig::activate_triggers(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.activate_triggers)
  return activate_triggers_.Get(index);
}
inline ::std::string* TraceConfig::mutable_activate_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TraceConfig.activate_triggers)
  return activate_triggers_.Mutable(index);
}
inline void TraceConfig::set_activate_triggers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.activate_triggers)
  activate_triggers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TraceConfig::set_activate_triggers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.activate_triggers)
  activate_triggers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TraceConfig::set_activate_triggers(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  activate_triggers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TraceConfig.activate_triggers)
}
inline void TraceConfig::set_activate_triggers(int index, const char* value, size_t size) {
  activate_triggers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TraceConfig.activate_triggers)
}
inline ::std::string* TraceConfig::add_activate_triggers() {
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.TraceConfig.activate_triggers)
  return activate_triggers_.Add();
}
inline void TraceConfig::add_activate_triggers(const ::std::string& value) {
  activate_triggers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.activate_triggers)
}
#if LANG_CXX11
inline void TraceConfig::add_activate_triggers(::std::string&& value) {
  activate_triggers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.TraceConfig.activate_triggers)
}
#endif
inline void TraceConfig::add_activate_triggers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  activate_triggers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.TraceConfig.activate_triggers)
}
inline void TraceConfig::add_activate_triggers(const char* value, size_t size) {
  activate_triggers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.TraceConfig.activate_triggers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TraceConfig::activate_triggers() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TraceConfig.activate_triggers)
  return activate_triggers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TraceConfig::mutable_activate_triggers() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TraceConfig.activate_triggers)
  return &activate_triggers_;
}

// optional bool allow_user_build_tracing = 19;
inline bool TraceConfig::has_allow_user_build_tracing() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TraceConfig::set_has_allow_user_build_tracing() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TraceConfig::clear_has_allow_user_build_tracing() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TraceConfig::clear_allow_user_build_tracing() {
  allow_user_build_tracing_ = false;
  clear_has_allow_user_build_tracing();
}
inline bool TraceConfig::allow_user_build_tracing() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TraceConfig.allow_user_build_tracing)
  return allow_user_build_tracing_;
}
inline void TraceConfig::set_allow_user_build_tracing(bool value) {
  set_has_allow_user_build_tracing();
  allow_user_build_tracing_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TraceConfig.allow_user_build_tracing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy> : ::std::true_type {};
template <> struct is_proto_enum< ::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode> : ::std::true_type {};
template <> struct is_proto_enum< ::perfetto::protos::TraceConfig_LockdownModeOperation> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2fconfig_2ftrace_5fconfig_2eproto
