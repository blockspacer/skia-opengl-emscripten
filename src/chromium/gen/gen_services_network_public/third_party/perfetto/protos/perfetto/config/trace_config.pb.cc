// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/trace_config.proto

#include "perfetto/config/trace_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_DataSourceConfig;
}  // namespace protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_BufferConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_BuiltinDataSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_GuardrailOverrides;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_ProducerConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_StatsdMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_TriggerConfig_Trigger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TraceConfig_DataSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TraceConfig_TriggerConfig;
}  // namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto
namespace perfetto {
namespace protos {
class TraceConfig_BufferConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_BufferConfig>
      _instance;
} _TraceConfig_BufferConfig_default_instance_;
class TraceConfig_DataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_DataSource>
      _instance;
} _TraceConfig_DataSource_default_instance_;
class TraceConfig_BuiltinDataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_BuiltinDataSource>
      _instance;
} _TraceConfig_BuiltinDataSource_default_instance_;
class TraceConfig_ProducerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_ProducerConfig>
      _instance;
} _TraceConfig_ProducerConfig_default_instance_;
class TraceConfig_StatsdMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_StatsdMetadata>
      _instance;
} _TraceConfig_StatsdMetadata_default_instance_;
class TraceConfig_GuardrailOverridesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_GuardrailOverrides>
      _instance;
} _TraceConfig_GuardrailOverrides_default_instance_;
class TraceConfig_TriggerConfig_TriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_TriggerConfig_Trigger>
      _instance;
} _TraceConfig_TriggerConfig_Trigger_default_instance_;
class TraceConfig_TriggerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig_TriggerConfig>
      _instance;
} _TraceConfig_TriggerConfig_default_instance_;
class TraceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceConfig>
      _instance;
} _TraceConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto {
static void InitDefaultsTraceConfig_BufferConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_BufferConfig_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_BufferConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_BufferConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_BufferConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_BufferConfig}, {}};

static void InitDefaultsTraceConfig_DataSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_DataSource_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_DataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_DataSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TraceConfig_DataSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTraceConfig_DataSource}, {
      &protobuf_perfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::scc_info_DataSourceConfig.base,}};

static void InitDefaultsTraceConfig_BuiltinDataSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_BuiltinDataSource_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_BuiltinDataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_BuiltinDataSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_BuiltinDataSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_BuiltinDataSource}, {}};

static void InitDefaultsTraceConfig_ProducerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_ProducerConfig_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_ProducerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_ProducerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_ProducerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_ProducerConfig}, {}};

static void InitDefaultsTraceConfig_StatsdMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_StatsdMetadata_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_StatsdMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_StatsdMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_StatsdMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_StatsdMetadata}, {}};

static void InitDefaultsTraceConfig_GuardrailOverrides() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_GuardrailOverrides_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_GuardrailOverrides();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_GuardrailOverrides::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_GuardrailOverrides =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_GuardrailOverrides}, {}};

static void InitDefaultsTraceConfig_TriggerConfig_Trigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_TriggerConfig_Trigger_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_TriggerConfig_Trigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_TriggerConfig_Trigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceConfig_TriggerConfig_Trigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceConfig_TriggerConfig_Trigger}, {}};

static void InitDefaultsTraceConfig_TriggerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_TriggerConfig_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig_TriggerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig_TriggerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TraceConfig_TriggerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTraceConfig_TriggerConfig}, {
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig_Trigger.base,}};

static void InitDefaultsTraceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_TraceConfig_default_instance_;
    new (ptr) ::perfetto::protos::TraceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::TraceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_TraceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsTraceConfig}, {
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BufferConfig.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_DataSource.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BuiltinDataSource.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_ProducerConfig.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_StatsdMetadata.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_GuardrailOverrides.base,
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_BufferConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_DataSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_BuiltinDataSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_ProducerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_StatsdMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_GuardrailOverrides.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_TriggerConfig_Trigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig_TriggerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceConfig.base);
}

}  // namespace protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto
namespace perfetto {
namespace protos {
bool TraceConfig_BufferConfig_FillPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::UNSPECIFIED;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::RING_BUFFER;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::DISCARD;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::FillPolicy_MIN;
const TraceConfig_BufferConfig_FillPolicy TraceConfig_BufferConfig::FillPolicy_MAX;
const int TraceConfig_BufferConfig::FillPolicy_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TraceConfig_TriggerConfig_TriggerMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::UNSPECIFIED;
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::START_TRACING;
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::STOP_TRACING;
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::TriggerMode_MIN;
const TraceConfig_TriggerConfig_TriggerMode TraceConfig_TriggerConfig::TriggerMode_MAX;
const int TraceConfig_TriggerConfig::TriggerMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TraceConfig_LockdownModeOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_UNCHANGED;
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_CLEAR;
const TraceConfig_LockdownModeOperation TraceConfig::LOCKDOWN_SET;
const TraceConfig_LockdownModeOperation TraceConfig::LockdownModeOperation_MIN;
const TraceConfig_LockdownModeOperation TraceConfig::LockdownModeOperation_MAX;
const int TraceConfig::LockdownModeOperation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TraceConfig_BufferConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_BufferConfig::kSizeKbFieldNumber;
const int TraceConfig_BufferConfig::kFillPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_BufferConfig::TraceConfig_BufferConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BufferConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.BufferConfig)
}
TraceConfig_BufferConfig::TraceConfig_BufferConfig(const TraceConfig_BufferConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&size_kb_, &from.size_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&fill_policy_) -
    reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.BufferConfig)
}

void TraceConfig_BufferConfig::SharedCtor() {
  ::memset(&size_kb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fill_policy_) -
      reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
}

TraceConfig_BufferConfig::~TraceConfig_BufferConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.BufferConfig)
  SharedDtor();
}

void TraceConfig_BufferConfig::SharedDtor() {
}

void TraceConfig_BufferConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_BufferConfig& TraceConfig_BufferConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BufferConfig.base);
  return *internal_default_instance();
}


void TraceConfig_BufferConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.BufferConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&size_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fill_policy_) -
        reinterpret_cast<char*>(&size_kb_)) + sizeof(fill_policy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_BufferConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.BufferConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 size_kb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TraceConfig_BufferConfig_FillPolicy_IsValid(value)) {
            set_fill_policy(static_cast< ::perfetto::protos::TraceConfig_BufferConfig_FillPolicy >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.BufferConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.BufferConfig)
  return false;
#undef DO_
}

void TraceConfig_BufferConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.BufferConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 size_kb = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size_kb(), output);
  }

  // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fill_policy(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.BufferConfig)
}

size_t TraceConfig_BufferConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.BufferConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 size_kb = 1;
    if (has_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size_kb());
    }

    // optional .perfetto.protos.TraceConfig.BufferConfig.FillPolicy fill_policy = 4;
    if (has_fill_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fill_policy());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_BufferConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_BufferConfig*>(&from));
}

void TraceConfig_BufferConfig::MergeFrom(const TraceConfig_BufferConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.BufferConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      size_kb_ = from.size_kb_;
    }
    if (cached_has_bits & 0x00000002u) {
      fill_policy_ = from.fill_policy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_BufferConfig::CopyFrom(const TraceConfig_BufferConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.BufferConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_BufferConfig::IsInitialized() const {
  return true;
}

void TraceConfig_BufferConfig::Swap(TraceConfig_BufferConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_BufferConfig::InternalSwap(TraceConfig_BufferConfig* other) {
  using std::swap;
  swap(size_kb_, other->size_kb_);
  swap(fill_policy_, other->fill_policy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_BufferConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig.BufferConfig";
}


// ===================================================================

void TraceConfig_DataSource::InitAsDefaultInstance() {
  ::perfetto::protos::_TraceConfig_DataSource_default_instance_._instance.get_mutable()->config_ = const_cast< ::perfetto::protos::DataSourceConfig*>(
      ::perfetto::protos::DataSourceConfig::internal_default_instance());
}
void TraceConfig_DataSource::clear_config() {
  if (config_ != NULL) config_->Clear();
  clear_has_config();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_DataSource::kConfigFieldNumber;
const int TraceConfig_DataSource::kProducerNameFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_DataSource::TraceConfig_DataSource()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_DataSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.DataSource)
}
TraceConfig_DataSource::TraceConfig_DataSource(const TraceConfig_DataSource& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      producer_name_filter_(from.producer_name_filter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::perfetto::protos::DataSourceConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.DataSource)
}

void TraceConfig_DataSource::SharedCtor() {
  config_ = NULL;
}

TraceConfig_DataSource::~TraceConfig_DataSource() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.DataSource)
  SharedDtor();
}

void TraceConfig_DataSource::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void TraceConfig_DataSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_DataSource& TraceConfig_DataSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_DataSource.base);
  return *internal_default_instance();
}


void TraceConfig_DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  producer_name_filter_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(config_ != NULL);
    config_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_DataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.DataSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.DataSourceConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string producer_name_filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_producer_name_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.DataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.DataSource)
  return false;
#undef DO_
}

void TraceConfig_DataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.DataSourceConfig config = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_config(), output);
  }

  // repeated string producer_name_filter = 2;
  for (int i = 0, n = this->producer_name_filter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->producer_name_filter(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.DataSource)
}

size_t TraceConfig_DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.DataSource)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated string producer_name_filter = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->producer_name_filter_size());
  for (int i = 0, n = this->producer_name_filter_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->producer_name_filter(i));
  }

  // optional .perfetto.protos.DataSourceConfig config = 1;
  if (has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_DataSource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_DataSource*>(&from));
}

void TraceConfig_DataSource::MergeFrom(const TraceConfig_DataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  producer_name_filter_.MergeFrom(from.producer_name_filter_);
  if (from.has_config()) {
    mutable_config()->::perfetto::protos::DataSourceConfig::MergeFrom(from.config());
  }
}

void TraceConfig_DataSource::CopyFrom(const TraceConfig_DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_DataSource::IsInitialized() const {
  return true;
}

void TraceConfig_DataSource::Swap(TraceConfig_DataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_DataSource::InternalSwap(TraceConfig_DataSource* other) {
  using std::swap;
  producer_name_filter_.InternalSwap(CastToBase(&other->producer_name_filter_));
  swap(config_, other->config_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_DataSource::GetTypeName() const {
  return "perfetto.protos.TraceConfig.DataSource";
}


// ===================================================================

void TraceConfig_BuiltinDataSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_BuiltinDataSource::kDisableClockSnapshottingFieldNumber;
const int TraceConfig_BuiltinDataSource::kDisableTraceConfigFieldNumber;
const int TraceConfig_BuiltinDataSource::kDisableSystemInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_BuiltinDataSource::TraceConfig_BuiltinDataSource()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BuiltinDataSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.BuiltinDataSource)
}
TraceConfig_BuiltinDataSource::TraceConfig_BuiltinDataSource(const TraceConfig_BuiltinDataSource& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&disable_clock_snapshotting_, &from.disable_clock_snapshotting_,
    static_cast<size_t>(reinterpret_cast<char*>(&disable_system_info_) -
    reinterpret_cast<char*>(&disable_clock_snapshotting_)) + sizeof(disable_system_info_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.BuiltinDataSource)
}

void TraceConfig_BuiltinDataSource::SharedCtor() {
  ::memset(&disable_clock_snapshotting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disable_system_info_) -
      reinterpret_cast<char*>(&disable_clock_snapshotting_)) + sizeof(disable_system_info_));
}

TraceConfig_BuiltinDataSource::~TraceConfig_BuiltinDataSource() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.BuiltinDataSource)
  SharedDtor();
}

void TraceConfig_BuiltinDataSource::SharedDtor() {
}

void TraceConfig_BuiltinDataSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_BuiltinDataSource& TraceConfig_BuiltinDataSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_BuiltinDataSource.base);
  return *internal_default_instance();
}


void TraceConfig_BuiltinDataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&disable_clock_snapshotting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disable_system_info_) -
      reinterpret_cast<char*>(&disable_clock_snapshotting_)) + sizeof(disable_system_info_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_BuiltinDataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool disable_clock_snapshotting = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_disable_clock_snapshotting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_clock_snapshotting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disable_trace_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_disable_trace_config();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_trace_config_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disable_system_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_disable_system_info();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_system_info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.BuiltinDataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.BuiltinDataSource)
  return false;
#undef DO_
}

void TraceConfig_BuiltinDataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool disable_clock_snapshotting = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disable_clock_snapshotting(), output);
  }

  // optional bool disable_trace_config = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->disable_trace_config(), output);
  }

  // optional bool disable_system_info = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->disable_system_info(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.BuiltinDataSource)
}

size_t TraceConfig_BuiltinDataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool disable_clock_snapshotting = 1;
    if (has_disable_clock_snapshotting()) {
      total_size += 1 + 1;
    }

    // optional bool disable_trace_config = 2;
    if (has_disable_trace_config()) {
      total_size += 1 + 1;
    }

    // optional bool disable_system_info = 3;
    if (has_disable_system_info()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_BuiltinDataSource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_BuiltinDataSource*>(&from));
}

void TraceConfig_BuiltinDataSource::MergeFrom(const TraceConfig_BuiltinDataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      disable_clock_snapshotting_ = from.disable_clock_snapshotting_;
    }
    if (cached_has_bits & 0x00000002u) {
      disable_trace_config_ = from.disable_trace_config_;
    }
    if (cached_has_bits & 0x00000004u) {
      disable_system_info_ = from.disable_system_info_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_BuiltinDataSource::CopyFrom(const TraceConfig_BuiltinDataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.BuiltinDataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_BuiltinDataSource::IsInitialized() const {
  return true;
}

void TraceConfig_BuiltinDataSource::Swap(TraceConfig_BuiltinDataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_BuiltinDataSource::InternalSwap(TraceConfig_BuiltinDataSource* other) {
  using std::swap;
  swap(disable_clock_snapshotting_, other->disable_clock_snapshotting_);
  swap(disable_trace_config_, other->disable_trace_config_);
  swap(disable_system_info_, other->disable_system_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_BuiltinDataSource::GetTypeName() const {
  return "perfetto.protos.TraceConfig.BuiltinDataSource";
}


// ===================================================================

void TraceConfig_ProducerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_ProducerConfig::kProducerNameFieldNumber;
const int TraceConfig_ProducerConfig::kShmSizeKbFieldNumber;
const int TraceConfig_ProducerConfig::kPageSizeKbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_ProducerConfig::TraceConfig_ProducerConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_ProducerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.ProducerConfig)
}
TraceConfig_ProducerConfig::TraceConfig_ProducerConfig(const TraceConfig_ProducerConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_producer_name()) {
    producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
  }
  ::memcpy(&shm_size_kb_, &from.shm_size_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_kb_) -
    reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.ProducerConfig)
}

void TraceConfig_ProducerConfig::SharedCtor() {
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shm_size_kb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_kb_) -
      reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
}

TraceConfig_ProducerConfig::~TraceConfig_ProducerConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.ProducerConfig)
  SharedDtor();
}

void TraceConfig_ProducerConfig::SharedDtor() {
  producer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraceConfig_ProducerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_ProducerConfig& TraceConfig_ProducerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_ProducerConfig.base);
  return *internal_default_instance();
}


void TraceConfig_ProducerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.ProducerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    producer_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&shm_size_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&page_size_kb_) -
        reinterpret_cast<char*>(&shm_size_kb_)) + sizeof(page_size_kb_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_ProducerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.ProducerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string producer_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shm_size_kb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shm_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shm_size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_size_kb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_page_size_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.ProducerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.ProducerConfig)
  return false;
#undef DO_
}

void TraceConfig_ProducerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.ProducerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string producer_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->producer_name(), output);
  }

  // optional uint32 shm_size_kb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shm_size_kb(), output);
  }

  // optional uint32 page_size_kb = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page_size_kb(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.ProducerConfig)
}

size_t TraceConfig_ProducerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.ProducerConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string producer_name = 1;
    if (has_producer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name());
    }

    // optional uint32 shm_size_kb = 2;
    if (has_shm_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shm_size_kb());
    }

    // optional uint32 page_size_kb = 3;
    if (has_page_size_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size_kb());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_ProducerConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_ProducerConfig*>(&from));
}

void TraceConfig_ProducerConfig::MergeFrom(const TraceConfig_ProducerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.ProducerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_producer_name();
      producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      shm_size_kb_ = from.shm_size_kb_;
    }
    if (cached_has_bits & 0x00000004u) {
      page_size_kb_ = from.page_size_kb_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_ProducerConfig::CopyFrom(const TraceConfig_ProducerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.ProducerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_ProducerConfig::IsInitialized() const {
  return true;
}

void TraceConfig_ProducerConfig::Swap(TraceConfig_ProducerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_ProducerConfig::InternalSwap(TraceConfig_ProducerConfig* other) {
  using std::swap;
  producer_name_.Swap(&other->producer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shm_size_kb_, other->shm_size_kb_);
  swap(page_size_kb_, other->page_size_kb_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_ProducerConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig.ProducerConfig";
}


// ===================================================================

void TraceConfig_StatsdMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_StatsdMetadata::kTriggeringAlertIdFieldNumber;
const int TraceConfig_StatsdMetadata::kTriggeringConfigUidFieldNumber;
const int TraceConfig_StatsdMetadata::kTriggeringConfigIdFieldNumber;
const int TraceConfig_StatsdMetadata::kTriggeringSubscriptionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_StatsdMetadata::TraceConfig_StatsdMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_StatsdMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.StatsdMetadata)
}
TraceConfig_StatsdMetadata::TraceConfig_StatsdMetadata(const TraceConfig_StatsdMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&triggering_alert_id_, &from.triggering_alert_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&triggering_config_uid_) -
    reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.StatsdMetadata)
}

void TraceConfig_StatsdMetadata::SharedCtor() {
  ::memset(&triggering_alert_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&triggering_config_uid_) -
      reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
}

TraceConfig_StatsdMetadata::~TraceConfig_StatsdMetadata() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.StatsdMetadata)
  SharedDtor();
}

void TraceConfig_StatsdMetadata::SharedDtor() {
}

void TraceConfig_StatsdMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_StatsdMetadata& TraceConfig_StatsdMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_StatsdMetadata.base);
  return *internal_default_instance();
}


void TraceConfig_StatsdMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.StatsdMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&triggering_alert_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&triggering_config_uid_) -
        reinterpret_cast<char*>(&triggering_alert_id_)) + sizeof(triggering_config_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_StatsdMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.StatsdMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 triggering_alert_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_triggering_alert_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &triggering_alert_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 triggering_config_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_triggering_config_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggering_config_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 triggering_config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_triggering_config_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &triggering_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 triggering_subscription_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_triggering_subscription_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &triggering_subscription_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.StatsdMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.StatsdMetadata)
  return false;
#undef DO_
}

void TraceConfig_StatsdMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.StatsdMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 triggering_alert_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->triggering_alert_id(), output);
  }

  // optional int32 triggering_config_uid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->triggering_config_uid(), output);
  }

  // optional int64 triggering_config_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->triggering_config_id(), output);
  }

  // optional int64 triggering_subscription_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->triggering_subscription_id(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.StatsdMetadata)
}

size_t TraceConfig_StatsdMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.StatsdMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional int64 triggering_alert_id = 1;
    if (has_triggering_alert_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->triggering_alert_id());
    }

    // optional int64 triggering_config_id = 3;
    if (has_triggering_config_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->triggering_config_id());
    }

    // optional int64 triggering_subscription_id = 4;
    if (has_triggering_subscription_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->triggering_subscription_id());
    }

    // optional int32 triggering_config_uid = 2;
    if (has_triggering_config_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->triggering_config_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_StatsdMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_StatsdMetadata*>(&from));
}

void TraceConfig_StatsdMetadata::MergeFrom(const TraceConfig_StatsdMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.StatsdMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      triggering_alert_id_ = from.triggering_alert_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      triggering_config_id_ = from.triggering_config_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      triggering_subscription_id_ = from.triggering_subscription_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      triggering_config_uid_ = from.triggering_config_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_StatsdMetadata::CopyFrom(const TraceConfig_StatsdMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.StatsdMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_StatsdMetadata::IsInitialized() const {
  return true;
}

void TraceConfig_StatsdMetadata::Swap(TraceConfig_StatsdMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_StatsdMetadata::InternalSwap(TraceConfig_StatsdMetadata* other) {
  using std::swap;
  swap(triggering_alert_id_, other->triggering_alert_id_);
  swap(triggering_config_id_, other->triggering_config_id_);
  swap(triggering_subscription_id_, other->triggering_subscription_id_);
  swap(triggering_config_uid_, other->triggering_config_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_StatsdMetadata::GetTypeName() const {
  return "perfetto.protos.TraceConfig.StatsdMetadata";
}


// ===================================================================

void TraceConfig_GuardrailOverrides::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_GuardrailOverrides::kMaxUploadPerDayBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_GuardrailOverrides::TraceConfig_GuardrailOverrides()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_GuardrailOverrides.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.GuardrailOverrides)
}
TraceConfig_GuardrailOverrides::TraceConfig_GuardrailOverrides(const TraceConfig_GuardrailOverrides& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_upload_per_day_bytes_ = from.max_upload_per_day_bytes_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.GuardrailOverrides)
}

void TraceConfig_GuardrailOverrides::SharedCtor() {
  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
}

TraceConfig_GuardrailOverrides::~TraceConfig_GuardrailOverrides() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.GuardrailOverrides)
  SharedDtor();
}

void TraceConfig_GuardrailOverrides::SharedDtor() {
}

void TraceConfig_GuardrailOverrides::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_GuardrailOverrides& TraceConfig_GuardrailOverrides::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_GuardrailOverrides.base);
  return *internal_default_instance();
}


void TraceConfig_GuardrailOverrides::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_upload_per_day_bytes_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_GuardrailOverrides::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 max_upload_per_day_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_max_upload_per_day_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_upload_per_day_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.GuardrailOverrides)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.GuardrailOverrides)
  return false;
#undef DO_
}

void TraceConfig_GuardrailOverrides::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 max_upload_per_day_bytes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->max_upload_per_day_bytes(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.GuardrailOverrides)
}

size_t TraceConfig_GuardrailOverrides::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 max_upload_per_day_bytes = 1;
  if (has_max_upload_per_day_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_upload_per_day_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_GuardrailOverrides::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_GuardrailOverrides*>(&from));
}

void TraceConfig_GuardrailOverrides::MergeFrom(const TraceConfig_GuardrailOverrides& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max_upload_per_day_bytes()) {
    set_max_upload_per_day_bytes(from.max_upload_per_day_bytes());
  }
}

void TraceConfig_GuardrailOverrides::CopyFrom(const TraceConfig_GuardrailOverrides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.GuardrailOverrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_GuardrailOverrides::IsInitialized() const {
  return true;
}

void TraceConfig_GuardrailOverrides::Swap(TraceConfig_GuardrailOverrides* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_GuardrailOverrides::InternalSwap(TraceConfig_GuardrailOverrides* other) {
  using std::swap;
  swap(max_upload_per_day_bytes_, other->max_upload_per_day_bytes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_GuardrailOverrides::GetTypeName() const {
  return "perfetto.protos.TraceConfig.GuardrailOverrides";
}


// ===================================================================

void TraceConfig_TriggerConfig_Trigger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_TriggerConfig_Trigger::kNameFieldNumber;
const int TraceConfig_TriggerConfig_Trigger::kProducerNameRegexFieldNumber;
const int TraceConfig_TriggerConfig_Trigger::kStopDelayMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_TriggerConfig_Trigger::TraceConfig_TriggerConfig_Trigger()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig_Trigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
}
TraceConfig_TriggerConfig_Trigger::TraceConfig_TriggerConfig_Trigger(const TraceConfig_TriggerConfig_Trigger& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  producer_name_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_producer_name_regex()) {
    producer_name_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_regex_);
  }
  stop_delay_ms_ = from.stop_delay_ms_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
}

void TraceConfig_TriggerConfig_Trigger::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_name_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_delay_ms_ = 0u;
}

TraceConfig_TriggerConfig_Trigger::~TraceConfig_TriggerConfig_Trigger() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  SharedDtor();
}

void TraceConfig_TriggerConfig_Trigger::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_name_regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraceConfig_TriggerConfig_Trigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_TriggerConfig_Trigger& TraceConfig_TriggerConfig_Trigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig_Trigger.base);
  return *internal_default_instance();
}


void TraceConfig_TriggerConfig_Trigger::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      producer_name_regex_.ClearNonDefaultToEmptyNoArena();
    }
  }
  stop_delay_ms_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_TriggerConfig_Trigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string producer_name_regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name_regex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stop_delay_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_stop_delay_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  return false;
#undef DO_
}

void TraceConfig_TriggerConfig_Trigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string producer_name_regex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->producer_name_regex(), output);
  }

  // optional uint32 stop_delay_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stop_delay_ms(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
}

size_t TraceConfig_TriggerConfig_Trigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string producer_name_regex = 2;
    if (has_producer_name_regex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name_regex());
    }

    // optional uint32 stop_delay_ms = 3;
    if (has_stop_delay_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stop_delay_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_TriggerConfig_Trigger::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_TriggerConfig_Trigger*>(&from));
}

void TraceConfig_TriggerConfig_Trigger::MergeFrom(const TraceConfig_TriggerConfig_Trigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_producer_name_regex();
      producer_name_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_regex_);
    }
    if (cached_has_bits & 0x00000004u) {
      stop_delay_ms_ = from.stop_delay_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_TriggerConfig_Trigger::CopyFrom(const TraceConfig_TriggerConfig_Trigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.TriggerConfig.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_TriggerConfig_Trigger::IsInitialized() const {
  return true;
}

void TraceConfig_TriggerConfig_Trigger::Swap(TraceConfig_TriggerConfig_Trigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_TriggerConfig_Trigger::InternalSwap(TraceConfig_TriggerConfig_Trigger* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  producer_name_regex_.Swap(&other->producer_name_regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stop_delay_ms_, other->stop_delay_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_TriggerConfig_Trigger::GetTypeName() const {
  return "perfetto.protos.TraceConfig.TriggerConfig.Trigger";
}


// ===================================================================

void TraceConfig_TriggerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig_TriggerConfig::kTriggerModeFieldNumber;
const int TraceConfig_TriggerConfig::kTriggersFieldNumber;
const int TraceConfig_TriggerConfig::kTriggerTimeoutMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig_TriggerConfig::TraceConfig_TriggerConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig.TriggerConfig)
}
TraceConfig_TriggerConfig::TraceConfig_TriggerConfig(const TraceConfig_TriggerConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      triggers_(from.triggers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trigger_mode_, &from.trigger_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&trigger_timeout_ms_) -
    reinterpret_cast<char*>(&trigger_mode_)) + sizeof(trigger_timeout_ms_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig.TriggerConfig)
}

void TraceConfig_TriggerConfig::SharedCtor() {
  ::memset(&trigger_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trigger_timeout_ms_) -
      reinterpret_cast<char*>(&trigger_mode_)) + sizeof(trigger_timeout_ms_));
}

TraceConfig_TriggerConfig::~TraceConfig_TriggerConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig.TriggerConfig)
  SharedDtor();
}

void TraceConfig_TriggerConfig::SharedDtor() {
}

void TraceConfig_TriggerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig_TriggerConfig& TraceConfig_TriggerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig_TriggerConfig.base);
  return *internal_default_instance();
}


void TraceConfig_TriggerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig.TriggerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  triggers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&trigger_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trigger_timeout_ms_) -
        reinterpret_cast<char*>(&trigger_mode_)) + sizeof(trigger_timeout_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig_TriggerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig.TriggerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.TraceConfig.TriggerConfig.TriggerMode trigger_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode_IsValid(value)) {
            set_trigger_mode(static_cast< ::perfetto::protos::TraceConfig_TriggerConfig_TriggerMode >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.TraceConfig.TriggerConfig.Trigger triggers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_triggers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trigger_timeout_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_trigger_timeout_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trigger_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig.TriggerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig.TriggerConfig)
  return false;
#undef DO_
}

void TraceConfig_TriggerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig.TriggerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.TraceConfig.TriggerConfig.TriggerMode trigger_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->trigger_mode(), output);
  }

  // repeated .perfetto.protos.TraceConfig.TriggerConfig.Trigger triggers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->triggers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->triggers(static_cast<int>(i)),
      output);
  }

  // optional uint32 trigger_timeout_ms = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->trigger_timeout_ms(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig.TriggerConfig)
}

size_t TraceConfig_TriggerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig.TriggerConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .perfetto.protos.TraceConfig.TriggerConfig.Trigger triggers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->triggers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->triggers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .perfetto.protos.TraceConfig.TriggerConfig.TriggerMode trigger_mode = 1;
    if (has_trigger_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trigger_mode());
    }

    // optional uint32 trigger_timeout_ms = 3;
    if (has_trigger_timeout_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trigger_timeout_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig_TriggerConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig_TriggerConfig*>(&from));
}

void TraceConfig_TriggerConfig::MergeFrom(const TraceConfig_TriggerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig.TriggerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  triggers_.MergeFrom(from.triggers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      trigger_mode_ = from.trigger_mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      trigger_timeout_ms_ = from.trigger_timeout_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig_TriggerConfig::CopyFrom(const TraceConfig_TriggerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig.TriggerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig_TriggerConfig::IsInitialized() const {
  return true;
}

void TraceConfig_TriggerConfig::Swap(TraceConfig_TriggerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig_TriggerConfig::InternalSwap(TraceConfig_TriggerConfig* other) {
  using std::swap;
  CastToBase(&triggers_)->InternalSwap(CastToBase(&other->triggers_));
  swap(trigger_mode_, other->trigger_mode_);
  swap(trigger_timeout_ms_, other->trigger_timeout_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig_TriggerConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig.TriggerConfig";
}


// ===================================================================

void TraceConfig::InitAsDefaultInstance() {
  ::perfetto::protos::_TraceConfig_default_instance_._instance.get_mutable()->builtin_data_sources_ = const_cast< ::perfetto::protos::TraceConfig_BuiltinDataSource*>(
      ::perfetto::protos::TraceConfig_BuiltinDataSource::internal_default_instance());
  ::perfetto::protos::_TraceConfig_default_instance_._instance.get_mutable()->statsd_metadata_ = const_cast< ::perfetto::protos::TraceConfig_StatsdMetadata*>(
      ::perfetto::protos::TraceConfig_StatsdMetadata::internal_default_instance());
  ::perfetto::protos::_TraceConfig_default_instance_._instance.get_mutable()->guardrail_overrides_ = const_cast< ::perfetto::protos::TraceConfig_GuardrailOverrides*>(
      ::perfetto::protos::TraceConfig_GuardrailOverrides::internal_default_instance());
  ::perfetto::protos::_TraceConfig_default_instance_._instance.get_mutable()->trigger_config_ = const_cast< ::perfetto::protos::TraceConfig_TriggerConfig*>(
      ::perfetto::protos::TraceConfig_TriggerConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceConfig::kBuffersFieldNumber;
const int TraceConfig::kDataSourcesFieldNumber;
const int TraceConfig::kBuiltinDataSourcesFieldNumber;
const int TraceConfig::kDurationMsFieldNumber;
const int TraceConfig::kEnableExtraGuardrailsFieldNumber;
const int TraceConfig::kLockdownModeFieldNumber;
const int TraceConfig::kProducersFieldNumber;
const int TraceConfig::kStatsdMetadataFieldNumber;
const int TraceConfig::kWriteIntoFileFieldNumber;
const int TraceConfig::kFileWritePeriodMsFieldNumber;
const int TraceConfig::kMaxFileSizeBytesFieldNumber;
const int TraceConfig::kGuardrailOverridesFieldNumber;
const int TraceConfig::kDeferredStartFieldNumber;
const int TraceConfig::kFlushPeriodMsFieldNumber;
const int TraceConfig::kFlushTimeoutMsFieldNumber;
const int TraceConfig::kNotifyTraceurFieldNumber;
const int TraceConfig::kTriggerConfigFieldNumber;
const int TraceConfig::kActivateTriggersFieldNumber;
const int TraceConfig::kAllowUserBuildTracingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceConfig::TraceConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.TraceConfig)
}
TraceConfig::TraceConfig(const TraceConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      buffers_(from.buffers_),
      data_sources_(from.data_sources_),
      producers_(from.producers_),
      activate_triggers_(from.activate_triggers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statsd_metadata()) {
    statsd_metadata_ = new ::perfetto::protos::TraceConfig_StatsdMetadata(*from.statsd_metadata_);
  } else {
    statsd_metadata_ = NULL;
  }
  if (from.has_guardrail_overrides()) {
    guardrail_overrides_ = new ::perfetto::protos::TraceConfig_GuardrailOverrides(*from.guardrail_overrides_);
  } else {
    guardrail_overrides_ = NULL;
  }
  if (from.has_trigger_config()) {
    trigger_config_ = new ::perfetto::protos::TraceConfig_TriggerConfig(*from.trigger_config_);
  } else {
    trigger_config_ = NULL;
  }
  if (from.has_builtin_data_sources()) {
    builtin_data_sources_ = new ::perfetto::protos::TraceConfig_BuiltinDataSource(*from.builtin_data_sources_);
  } else {
    builtin_data_sources_ = NULL;
  }
  ::memcpy(&duration_ms_, &from.duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_user_build_tracing_) -
    reinterpret_cast<char*>(&duration_ms_)) + sizeof(allow_user_build_tracing_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.TraceConfig)
}

void TraceConfig::SharedCtor() {
  ::memset(&statsd_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_user_build_tracing_) -
      reinterpret_cast<char*>(&statsd_metadata_)) + sizeof(allow_user_build_tracing_));
}

TraceConfig::~TraceConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.TraceConfig)
  SharedDtor();
}

void TraceConfig::SharedDtor() {
  if (this != internal_default_instance()) delete statsd_metadata_;
  if (this != internal_default_instance()) delete guardrail_overrides_;
  if (this != internal_default_instance()) delete trigger_config_;
  if (this != internal_default_instance()) delete builtin_data_sources_;
}

void TraceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceConfig& TraceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perfetto_2fconfig_2ftrace_5fconfig_2eproto::scc_info_TraceConfig.base);
  return *internal_default_instance();
}


void TraceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.TraceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffers_.Clear();
  data_sources_.Clear();
  producers_.Clear();
  activate_triggers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(statsd_metadata_ != NULL);
      statsd_metadata_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(guardrail_overrides_ != NULL);
      guardrail_overrides_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(trigger_config_ != NULL);
      trigger_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(builtin_data_sources_ != NULL);
      builtin_data_sources_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&duration_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_extra_guardrails_) -
        reinterpret_cast<char*>(&duration_ms_)) + sizeof(enable_extra_guardrails_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&write_into_file_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_user_build_tracing_) -
        reinterpret_cast<char*>(&write_into_file_)) + sizeof(allow_user_build_tracing_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.TraceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buffers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 duration_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_duration_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_extra_guardrails = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_enable_extra_guardrails();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_extra_guardrails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::TraceConfig_LockdownModeOperation_IsValid(value)) {
            set_lockdown_mode(static_cast< ::perfetto::protos::TraceConfig_LockdownModeOperation >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_producers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statsd_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool write_into_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_write_into_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &write_into_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_write_period_ms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_file_write_period_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_write_period_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_file_size_bytes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_max_file_size_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_file_size_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guardrail_overrides()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool deferred_start = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_deferred_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deferred_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flush_period_ms = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_flush_period_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flush_period_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flush_timeout_ms = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_flush_timeout_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flush_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool notify_traceur = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_notify_traceur();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notify_traceur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.TriggerConfig trigger_config = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trigger_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string activate_triggers = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_activate_triggers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_user_build_tracing = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_allow_user_build_tracing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_user_build_tracing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TraceConfig.BuiltinDataSource builtin_data_sources = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_builtin_data_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.TraceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.TraceConfig)
  return false;
#undef DO_
}

void TraceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.TraceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->buffers(static_cast<int>(i)),
      output);
  }

  // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->data_sources(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 duration_ms = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->duration_ms(), output);
  }

  // optional bool enable_extra_guardrails = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable_extra_guardrails(), output);
  }

  // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->lockdown_mode(), output);
  }

  // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->producers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->producers(static_cast<int>(i)),
      output);
  }

  // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_statsd_metadata(), output);
  }

  // optional bool write_into_file = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->write_into_file(), output);
  }

  // optional uint32 file_write_period_ms = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->file_write_period_ms(), output);
  }

  // optional uint64 max_file_size_bytes = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->max_file_size_bytes(), output);
  }

  // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_guardrail_overrides(), output);
  }

  // optional bool deferred_start = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->deferred_start(), output);
  }

  // optional uint32 flush_period_ms = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flush_period_ms(), output);
  }

  // optional uint32 flush_timeout_ms = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->flush_timeout_ms(), output);
  }

  // optional bool notify_traceur = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->notify_traceur(), output);
  }

  // optional .perfetto.protos.TraceConfig.TriggerConfig trigger_config = 17;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_trigger_config(), output);
  }

  // repeated string activate_triggers = 18;
  for (int i = 0, n = this->activate_triggers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->activate_triggers(i), output);
  }

  // optional bool allow_user_build_tracing = 19;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->allow_user_build_tracing(), output);
  }

  // optional .perfetto.protos.TraceConfig.BuiltinDataSource builtin_data_sources = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, this->_internal_builtin_data_sources(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.TraceConfig)
}

size_t TraceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.TraceConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .perfetto.protos.TraceConfig.BufferConfig buffers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buffers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buffers(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.TraceConfig.DataSource data_sources = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_sources(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.TraceConfig.ProducerConfig producers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->producers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->producers(static_cast<int>(i)));
    }
  }

  // repeated string activate_triggers = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->activate_triggers_size());
  for (int i = 0, n = this->activate_triggers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->activate_triggers(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .perfetto.protos.TraceConfig.StatsdMetadata statsd_metadata = 7;
    if (has_statsd_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *statsd_metadata_);
    }

    // optional .perfetto.protos.TraceConfig.GuardrailOverrides guardrail_overrides = 11;
    if (has_guardrail_overrides()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *guardrail_overrides_);
    }

    // optional .perfetto.protos.TraceConfig.TriggerConfig trigger_config = 17;
    if (has_trigger_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trigger_config_);
    }

    // optional .perfetto.protos.TraceConfig.BuiltinDataSource builtin_data_sources = 20;
    if (has_builtin_data_sources()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *builtin_data_sources_);
    }

    // optional uint32 duration_ms = 3;
    if (has_duration_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duration_ms());
    }

    // optional .perfetto.protos.TraceConfig.LockdownModeOperation lockdown_mode = 5;
    if (has_lockdown_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lockdown_mode());
    }

    // optional uint32 file_write_period_ms = 9;
    if (has_file_write_period_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_write_period_ms());
    }

    // optional bool enable_extra_guardrails = 4;
    if (has_enable_extra_guardrails()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional bool write_into_file = 8;
    if (has_write_into_file()) {
      total_size += 1 + 1;
    }

    // optional bool deferred_start = 12;
    if (has_deferred_start()) {
      total_size += 1 + 1;
    }

    // optional bool notify_traceur = 16;
    if (has_notify_traceur()) {
      total_size += 2 + 1;
    }

    // optional uint64 max_file_size_bytes = 10;
    if (has_max_file_size_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_file_size_bytes());
    }

    // optional uint32 flush_period_ms = 13;
    if (has_flush_period_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flush_period_ms());
    }

    // optional uint32 flush_timeout_ms = 14;
    if (has_flush_timeout_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flush_timeout_ms());
    }

    // optional bool allow_user_build_tracing = 19;
    if (has_allow_user_build_tracing()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TraceConfig*>(&from));
}

void TraceConfig::MergeFrom(const TraceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.TraceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffers_.MergeFrom(from.buffers_);
  data_sources_.MergeFrom(from.data_sources_);
  producers_.MergeFrom(from.producers_);
  activate_triggers_.MergeFrom(from.activate_triggers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_statsd_metadata()->::perfetto::protos::TraceConfig_StatsdMetadata::MergeFrom(from.statsd_metadata());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_guardrail_overrides()->::perfetto::protos::TraceConfig_GuardrailOverrides::MergeFrom(from.guardrail_overrides());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_trigger_config()->::perfetto::protos::TraceConfig_TriggerConfig::MergeFrom(from.trigger_config());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_builtin_data_sources()->::perfetto::protos::TraceConfig_BuiltinDataSource::MergeFrom(from.builtin_data_sources());
    }
    if (cached_has_bits & 0x00000010u) {
      duration_ms_ = from.duration_ms_;
    }
    if (cached_has_bits & 0x00000020u) {
      lockdown_mode_ = from.lockdown_mode_;
    }
    if (cached_has_bits & 0x00000040u) {
      file_write_period_ms_ = from.file_write_period_ms_;
    }
    if (cached_has_bits & 0x00000080u) {
      enable_extra_guardrails_ = from.enable_extra_guardrails_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      write_into_file_ = from.write_into_file_;
    }
    if (cached_has_bits & 0x00000200u) {
      deferred_start_ = from.deferred_start_;
    }
    if (cached_has_bits & 0x00000400u) {
      notify_traceur_ = from.notify_traceur_;
    }
    if (cached_has_bits & 0x00000800u) {
      max_file_size_bytes_ = from.max_file_size_bytes_;
    }
    if (cached_has_bits & 0x00001000u) {
      flush_period_ms_ = from.flush_period_ms_;
    }
    if (cached_has_bits & 0x00002000u) {
      flush_timeout_ms_ = from.flush_timeout_ms_;
    }
    if (cached_has_bits & 0x00004000u) {
      allow_user_build_tracing_ = from.allow_user_build_tracing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraceConfig::CopyFrom(const TraceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.TraceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceConfig::IsInitialized() const {
  return true;
}

void TraceConfig::Swap(TraceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceConfig::InternalSwap(TraceConfig* other) {
  using std::swap;
  CastToBase(&buffers_)->InternalSwap(CastToBase(&other->buffers_));
  CastToBase(&data_sources_)->InternalSwap(CastToBase(&other->data_sources_));
  CastToBase(&producers_)->InternalSwap(CastToBase(&other->producers_));
  activate_triggers_.InternalSwap(CastToBase(&other->activate_triggers_));
  swap(statsd_metadata_, other->statsd_metadata_);
  swap(guardrail_overrides_, other->guardrail_overrides_);
  swap(trigger_config_, other->trigger_config_);
  swap(builtin_data_sources_, other->builtin_data_sources_);
  swap(duration_ms_, other->duration_ms_);
  swap(lockdown_mode_, other->lockdown_mode_);
  swap(file_write_period_ms_, other->file_write_period_ms_);
  swap(enable_extra_guardrails_, other->enable_extra_guardrails_);
  swap(write_into_file_, other->write_into_file_);
  swap(deferred_start_, other->deferred_start_);
  swap(notify_traceur_, other->notify_traceur_);
  swap(max_file_size_bytes_, other->max_file_size_bytes_);
  swap(flush_period_ms_, other->flush_period_ms_);
  swap(flush_timeout_ms_, other->flush_timeout_ms_);
  swap(allow_user_build_tracing_, other->allow_user_build_tracing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TraceConfig::GetTypeName() const {
  return "perfetto.protos.TraceConfig";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_BufferConfig* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_BufferConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_BufferConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_DataSource* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_DataSource >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_DataSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_BuiltinDataSource* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_BuiltinDataSource >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_BuiltinDataSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_ProducerConfig* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_ProducerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_ProducerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_StatsdMetadata* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_StatsdMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_StatsdMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_GuardrailOverrides* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_GuardrailOverrides >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_GuardrailOverrides >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_TriggerConfig_Trigger* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_TriggerConfig_Trigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig_TriggerConfig* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig_TriggerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig_TriggerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::perfetto::protos::TraceConfig* Arena::CreateMaybeMessage< ::perfetto::protos::TraceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::TraceConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
