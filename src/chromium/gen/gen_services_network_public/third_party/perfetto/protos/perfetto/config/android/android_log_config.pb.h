// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/config/android/android_log_config.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto
#define PROTOBUF_INCLUDED_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "perfetto/common/android_log_constants.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto 

namespace protobuf_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto
namespace perfetto {
namespace protos {
class AndroidLogConfig;
class AndroidLogConfigDefaultTypeInternal;
extern AndroidLogConfigDefaultTypeInternal _AndroidLogConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::AndroidLogConfig* Arena::CreateMaybeMessage<::perfetto::protos::AndroidLogConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

// ===================================================================

class AndroidLogConfig : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidLogConfig) */ {
 public:
  AndroidLogConfig();
  virtual ~AndroidLogConfig();

  AndroidLogConfig(const AndroidLogConfig& from);

  inline AndroidLogConfig& operator=(const AndroidLogConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AndroidLogConfig(AndroidLogConfig&& from) noexcept
    : AndroidLogConfig() {
    *this = ::std::move(from);
  }

  inline AndroidLogConfig& operator=(AndroidLogConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AndroidLogConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AndroidLogConfig* internal_default_instance() {
    return reinterpret_cast<const AndroidLogConfig*>(
               &_AndroidLogConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(AndroidLogConfig* other);
  friend void swap(AndroidLogConfig& a, AndroidLogConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AndroidLogConfig* New() const final {
    return CreateMaybeMessage<AndroidLogConfig>(NULL);
  }

  AndroidLogConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AndroidLogConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const AndroidLogConfig& from);
  void MergeFrom(const AndroidLogConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AndroidLogConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .perfetto.protos.AndroidLogId log_ids = 1;
  int log_ids_size() const;
  void clear_log_ids();
  static const int kLogIdsFieldNumber = 1;
  ::perfetto::protos::AndroidLogId log_ids(int index) const;
  void set_log_ids(int index, ::perfetto::protos::AndroidLogId value);
  void add_log_ids(::perfetto::protos::AndroidLogId value);
  const ::google::protobuf::RepeatedField<int>& log_ids() const;
  ::google::protobuf::RepeatedField<int>* mutable_log_ids();

  // repeated string filter_tags = 4;
  int filter_tags_size() const;
  void clear_filter_tags();
  static const int kFilterTagsFieldNumber = 4;
  const ::std::string& filter_tags(int index) const;
  ::std::string* mutable_filter_tags(int index);
  void set_filter_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filter_tags(int index, ::std::string&& value);
  #endif
  void set_filter_tags(int index, const char* value);
  void set_filter_tags(int index, const char* value, size_t size);
  ::std::string* add_filter_tags();
  void add_filter_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_filter_tags(::std::string&& value);
  #endif
  void add_filter_tags(const char* value);
  void add_filter_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filter_tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filter_tags();

  // optional .perfetto.protos.AndroidLogPriority min_prio = 3;
  bool has_min_prio() const;
  void clear_min_prio();
  static const int kMinPrioFieldNumber = 3;
  ::perfetto::protos::AndroidLogPriority min_prio() const;
  void set_min_prio(::perfetto::protos::AndroidLogPriority value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidLogConfig)
 private:
  void set_has_min_prio();
  void clear_has_min_prio();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField<int> log_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filter_tags_;
  int min_prio_;
  friend struct ::protobuf_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AndroidLogConfig

// repeated .perfetto.protos.AndroidLogId log_ids = 1;
inline int AndroidLogConfig::log_ids_size() const {
  return log_ids_.size();
}
inline void AndroidLogConfig::clear_log_ids() {
  log_ids_.Clear();
}
inline ::perfetto::protos::AndroidLogId AndroidLogConfig::log_ids(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogConfig.log_ids)
  return static_cast< ::perfetto::protos::AndroidLogId >(log_ids_.Get(index));
}
inline void AndroidLogConfig::set_log_ids(int index, ::perfetto::protos::AndroidLogId value) {
  assert(::perfetto::protos::AndroidLogId_IsValid(value));
  log_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogConfig.log_ids)
}
inline void AndroidLogConfig::add_log_ids(::perfetto::protos::AndroidLogId value) {
  assert(::perfetto::protos::AndroidLogId_IsValid(value));
  log_ids_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidLogConfig.log_ids)
}
inline const ::google::protobuf::RepeatedField<int>&
AndroidLogConfig::log_ids() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidLogConfig.log_ids)
  return log_ids_;
}
inline ::google::protobuf::RepeatedField<int>*
AndroidLogConfig::mutable_log_ids() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidLogConfig.log_ids)
  return &log_ids_;
}

// optional .perfetto.protos.AndroidLogPriority min_prio = 3;
inline bool AndroidLogConfig::has_min_prio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AndroidLogConfig::set_has_min_prio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AndroidLogConfig::clear_has_min_prio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AndroidLogConfig::clear_min_prio() {
  min_prio_ = 0;
  clear_has_min_prio();
}
inline ::perfetto::protos::AndroidLogPriority AndroidLogConfig::min_prio() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogConfig.min_prio)
  return static_cast< ::perfetto::protos::AndroidLogPriority >(min_prio_);
}
inline void AndroidLogConfig::set_min_prio(::perfetto::protos::AndroidLogPriority value) {
  assert(::perfetto::protos::AndroidLogPriority_IsValid(value));
  set_has_min_prio();
  min_prio_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogConfig.min_prio)
}

// repeated string filter_tags = 4;
inline int AndroidLogConfig::filter_tags_size() const {
  return filter_tags_.size();
}
inline void AndroidLogConfig::clear_filter_tags() {
  filter_tags_.Clear();
}
inline const ::std::string& AndroidLogConfig::filter_tags(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogConfig.filter_tags)
  return filter_tags_.Get(index);
}
inline ::std::string* AndroidLogConfig::mutable_filter_tags(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogConfig.filter_tags)
  return filter_tags_.Mutable(index);
}
inline void AndroidLogConfig::set_filter_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogConfig.filter_tags)
  filter_tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AndroidLogConfig::set_filter_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogConfig.filter_tags)
  filter_tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AndroidLogConfig::set_filter_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filter_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.AndroidLogConfig.filter_tags)
}
inline void AndroidLogConfig::set_filter_tags(int index, const char* value, size_t size) {
  filter_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.AndroidLogConfig.filter_tags)
}
inline ::std::string* AndroidLogConfig::add_filter_tags() {
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.AndroidLogConfig.filter_tags)
  return filter_tags_.Add();
}
inline void AndroidLogConfig::add_filter_tags(const ::std::string& value) {
  filter_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidLogConfig.filter_tags)
}
#if LANG_CXX11
inline void AndroidLogConfig::add_filter_tags(::std::string&& value) {
  filter_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidLogConfig.filter_tags)
}
#endif
inline void AndroidLogConfig::add_filter_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filter_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.AndroidLogConfig.filter_tags)
}
inline void AndroidLogConfig::add_filter_tags(const char* value, size_t size) {
  filter_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.AndroidLogConfig.filter_tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidLogConfig::filter_tags() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidLogConfig.filter_tags)
  return filter_tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidLogConfig::mutable_filter_tags() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidLogConfig.filter_tags)
  return &filter_tags_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto
