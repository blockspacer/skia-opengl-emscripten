// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/trace/trusted_packet.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrusted_5fpacket_2eproto
#define PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrusted_5fpacket_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "perfetto/common/trace_stats.pb.h"
#include "perfetto/config/trace_config.pb.h"
#include "perfetto/trace/clock_snapshot.pb.h"
#include "perfetto/trace/system_info.pb.h"
#include "perfetto/trace/trigger.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2ftrusted_5fpacket_2eproto 

namespace protobuf_perfetto_2ftrace_2ftrusted_5fpacket_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2ftrace_2ftrusted_5fpacket_2eproto
namespace perfetto {
namespace protos {
class TrustedPacket;
class TrustedPacketDefaultTypeInternal;
extern TrustedPacketDefaultTypeInternal _TrustedPacket_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::TrustedPacket* Arena::CreateMaybeMessage<::perfetto::protos::TrustedPacket>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

// ===================================================================

class TrustedPacket : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TrustedPacket) */ {
 public:
  TrustedPacket();
  virtual ~TrustedPacket();

  TrustedPacket(const TrustedPacket& from);

  inline TrustedPacket& operator=(const TrustedPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrustedPacket(TrustedPacket&& from) noexcept
    : TrustedPacket() {
    *this = ::std::move(from);
  }

  inline TrustedPacket& operator=(TrustedPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const TrustedPacket& default_instance();

  enum OptionalTrustedUidCase {
    kTrustedUid = 3,
    OPTIONAL_TRUSTED_UID_NOT_SET = 0,
  };

  enum OptionalTrustedPacketSequenceIdCase {
    kTrustedPacketSequenceId = 10,
    OPTIONAL_TRUSTED_PACKET_SEQUENCE_ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrustedPacket* internal_default_instance() {
    return reinterpret_cast<const TrustedPacket*>(
               &_TrustedPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TrustedPacket* other);
  friend void swap(TrustedPacket& a, TrustedPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrustedPacket* New() const final {
    return CreateMaybeMessage<TrustedPacket>(NULL);
  }

  TrustedPacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrustedPacket>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TrustedPacket& from);
  void MergeFrom(const TrustedPacket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrustedPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes synchronization_marker = 36;
  void clear_synchronization_marker();
  static const int kSynchronizationMarkerFieldNumber = 36;
  const ::std::string& synchronization_marker() const;
  void set_synchronization_marker(const ::std::string& value);
  #if LANG_CXX11
  void set_synchronization_marker(::std::string&& value);
  #endif
  void set_synchronization_marker(const char* value);
  void set_synchronization_marker(const void* value, size_t size);
  ::std::string* mutable_synchronization_marker();
  ::std::string* release_synchronization_marker();
  void set_allocated_synchronization_marker(::std::string* synchronization_marker);

  // .perfetto.protos.ClockSnapshot clock_snapshot = 6;
  bool has_clock_snapshot() const;
  void clear_clock_snapshot();
  static const int kClockSnapshotFieldNumber = 6;
  private:
  const ::perfetto::protos::ClockSnapshot& _internal_clock_snapshot() const;
  public:
  const ::perfetto::protos::ClockSnapshot& clock_snapshot() const;
  ::perfetto::protos::ClockSnapshot* release_clock_snapshot();
  ::perfetto::protos::ClockSnapshot* mutable_clock_snapshot();
  void set_allocated_clock_snapshot(::perfetto::protos::ClockSnapshot* clock_snapshot);

  // .perfetto.protos.TraceConfig trace_config = 33;
  bool has_trace_config() const;
  void clear_trace_config();
  static const int kTraceConfigFieldNumber = 33;
  private:
  const ::perfetto::protos::TraceConfig& _internal_trace_config() const;
  public:
  const ::perfetto::protos::TraceConfig& trace_config() const;
  ::perfetto::protos::TraceConfig* release_trace_config();
  ::perfetto::protos::TraceConfig* mutable_trace_config();
  void set_allocated_trace_config(::perfetto::protos::TraceConfig* trace_config);

  // .perfetto.protos.TraceStats trace_stats = 35;
  bool has_trace_stats() const;
  void clear_trace_stats();
  static const int kTraceStatsFieldNumber = 35;
  private:
  const ::perfetto::protos::TraceStats& _internal_trace_stats() const;
  public:
  const ::perfetto::protos::TraceStats& trace_stats() const;
  ::perfetto::protos::TraceStats* release_trace_stats();
  ::perfetto::protos::TraceStats* mutable_trace_stats();
  void set_allocated_trace_stats(::perfetto::protos::TraceStats* trace_stats);

  // .perfetto.protos.SystemInfo system_info = 45;
  bool has_system_info() const;
  void clear_system_info();
  static const int kSystemInfoFieldNumber = 45;
  private:
  const ::perfetto::protos::SystemInfo& _internal_system_info() const;
  public:
  const ::perfetto::protos::SystemInfo& system_info() const;
  ::perfetto::protos::SystemInfo* release_system_info();
  ::perfetto::protos::SystemInfo* mutable_system_info();
  void set_allocated_system_info(::perfetto::protos::SystemInfo* system_info);

  // .perfetto.protos.Trigger trigger = 46;
  bool has_trigger() const;
  void clear_trigger();
  static const int kTriggerFieldNumber = 46;
  private:
  const ::perfetto::protos::Trigger& _internal_trigger() const;
  public:
  const ::perfetto::protos::Trigger& trigger() const;
  ::perfetto::protos::Trigger* release_trigger();
  ::perfetto::protos::Trigger* mutable_trigger();
  void set_allocated_trigger(::perfetto::protos::Trigger* trigger);

  // uint64 timestamp = 8;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // bool previous_packet_dropped = 42;
  void clear_previous_packet_dropped();
  static const int kPreviousPacketDroppedFieldNumber = 42;
  bool previous_packet_dropped() const;
  void set_previous_packet_dropped(bool value);

  // int32 trusted_uid = 3;
  private:
  bool has_trusted_uid() const;
  public:
  void clear_trusted_uid();
  static const int kTrustedUidFieldNumber = 3;
  ::google::protobuf::int32 trusted_uid() const;
  void set_trusted_uid(::google::protobuf::int32 value);

  // uint32 trusted_packet_sequence_id = 10;
  private:
  bool has_trusted_packet_sequence_id() const;
  public:
  void clear_trusted_packet_sequence_id();
  static const int kTrustedPacketSequenceIdFieldNumber = 10;
  ::google::protobuf::uint32 trusted_packet_sequence_id() const;
  void set_trusted_packet_sequence_id(::google::protobuf::uint32 value);

  void clear_optional_trusted_uid();
  OptionalTrustedUidCase optional_trusted_uid_case() const;
  void clear_optional_trusted_packet_sequence_id();
  OptionalTrustedPacketSequenceIdCase optional_trusted_packet_sequence_id_case() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.TrustedPacket)
 private:
  void set_has_trusted_uid();
  void set_has_trusted_packet_sequence_id();

  inline bool has_optional_trusted_uid() const;
  inline void clear_has_optional_trusted_uid();

  inline bool has_optional_trusted_packet_sequence_id() const;
  inline void clear_has_optional_trusted_packet_sequence_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr synchronization_marker_;
  ::perfetto::protos::ClockSnapshot* clock_snapshot_;
  ::perfetto::protos::TraceConfig* trace_config_;
  ::perfetto::protos::TraceStats* trace_stats_;
  ::perfetto::protos::SystemInfo* system_info_;
  ::perfetto::protos::Trigger* trigger_;
  ::google::protobuf::uint64 timestamp_;
  bool previous_packet_dropped_;
  union OptionalTrustedUidUnion {
    OptionalTrustedUidUnion() {}
    ::google::protobuf::int32 trusted_uid_;
  } optional_trusted_uid_;
  union OptionalTrustedPacketSequenceIdUnion {
    OptionalTrustedPacketSequenceIdUnion() {}
    ::google::protobuf::uint32 trusted_packet_sequence_id_;
  } optional_trusted_packet_sequence_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct ::protobuf_perfetto_2ftrace_2ftrusted_5fpacket_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrustedPacket

// int32 trusted_uid = 3;
inline bool TrustedPacket::has_trusted_uid() const {
  return optional_trusted_uid_case() == kTrustedUid;
}
inline void TrustedPacket::set_has_trusted_uid() {
  _oneof_case_[0] = kTrustedUid;
}
inline void TrustedPacket::clear_trusted_uid() {
  if (has_trusted_uid()) {
    optional_trusted_uid_.trusted_uid_ = 0;
    clear_has_optional_trusted_uid();
  }
}
inline ::google::protobuf::int32 TrustedPacket::trusted_uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.trusted_uid)
  if (has_trusted_uid()) {
    return optional_trusted_uid_.trusted_uid_;
  }
  return 0;
}
inline void TrustedPacket::set_trusted_uid(::google::protobuf::int32 value) {
  if (!has_trusted_uid()) {
    clear_optional_trusted_uid();
    set_has_trusted_uid();
  }
  optional_trusted_uid_.trusted_uid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrustedPacket.trusted_uid)
}

// uint32 trusted_packet_sequence_id = 10;
inline bool TrustedPacket::has_trusted_packet_sequence_id() const {
  return optional_trusted_packet_sequence_id_case() == kTrustedPacketSequenceId;
}
inline void TrustedPacket::set_has_trusted_packet_sequence_id() {
  _oneof_case_[1] = kTrustedPacketSequenceId;
}
inline void TrustedPacket::clear_trusted_packet_sequence_id() {
  if (has_trusted_packet_sequence_id()) {
    optional_trusted_packet_sequence_id_.trusted_packet_sequence_id_ = 0u;
    clear_has_optional_trusted_packet_sequence_id();
  }
}
inline ::google::protobuf::uint32 TrustedPacket::trusted_packet_sequence_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.trusted_packet_sequence_id)
  if (has_trusted_packet_sequence_id()) {
    return optional_trusted_packet_sequence_id_.trusted_packet_sequence_id_;
  }
  return 0u;
}
inline void TrustedPacket::set_trusted_packet_sequence_id(::google::protobuf::uint32 value) {
  if (!has_trusted_packet_sequence_id()) {
    clear_optional_trusted_packet_sequence_id();
    set_has_trusted_packet_sequence_id();
  }
  optional_trusted_packet_sequence_id_.trusted_packet_sequence_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrustedPacket.trusted_packet_sequence_id)
}

// .perfetto.protos.ClockSnapshot clock_snapshot = 6;
inline bool TrustedPacket::has_clock_snapshot() const {
  return this != internal_default_instance() && clock_snapshot_ != NULL;
}
inline const ::perfetto::protos::ClockSnapshot& TrustedPacket::_internal_clock_snapshot() const {
  return *clock_snapshot_;
}
inline const ::perfetto::protos::ClockSnapshot& TrustedPacket::clock_snapshot() const {
  const ::perfetto::protos::ClockSnapshot* p = clock_snapshot_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.clock_snapshot)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::ClockSnapshot*>(
      &::perfetto::protos::_ClockSnapshot_default_instance_);
}
inline ::perfetto::protos::ClockSnapshot* TrustedPacket::release_clock_snapshot() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.clock_snapshot)
  
  ::perfetto::protos::ClockSnapshot* temp = clock_snapshot_;
  clock_snapshot_ = NULL;
  return temp;
}
inline ::perfetto::protos::ClockSnapshot* TrustedPacket::mutable_clock_snapshot() {
  
  if (clock_snapshot_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::ClockSnapshot>(GetArenaNoVirtual());
    clock_snapshot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.clock_snapshot)
  return clock_snapshot_;
}
inline void TrustedPacket::set_allocated_clock_snapshot(::perfetto::protos::ClockSnapshot* clock_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clock_snapshot_);
  }
  if (clock_snapshot) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clock_snapshot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clock_snapshot, submessage_arena);
    }
    
  } else {
    
  }
  clock_snapshot_ = clock_snapshot;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.clock_snapshot)
}

// uint64 timestamp = 8;
inline void TrustedPacket::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrustedPacket::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.timestamp)
  return timestamp_;
}
inline void TrustedPacket::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrustedPacket.timestamp)
}

// .perfetto.protos.TraceConfig trace_config = 33;
inline bool TrustedPacket::has_trace_config() const {
  return this != internal_default_instance() && trace_config_ != NULL;
}
inline const ::perfetto::protos::TraceConfig& TrustedPacket::_internal_trace_config() const {
  return *trace_config_;
}
inline const ::perfetto::protos::TraceConfig& TrustedPacket::trace_config() const {
  const ::perfetto::protos::TraceConfig* p = trace_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.trace_config)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceConfig*>(
      &::perfetto::protos::_TraceConfig_default_instance_);
}
inline ::perfetto::protos::TraceConfig* TrustedPacket::release_trace_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.trace_config)
  
  ::perfetto::protos::TraceConfig* temp = trace_config_;
  trace_config_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceConfig* TrustedPacket::mutable_trace_config() {
  
  if (trace_config_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceConfig>(GetArenaNoVirtual());
    trace_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.trace_config)
  return trace_config_;
}
inline void TrustedPacket::set_allocated_trace_config(::perfetto::protos::TraceConfig* trace_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trace_config_);
  }
  if (trace_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trace_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trace_config, submessage_arena);
    }
    
  } else {
    
  }
  trace_config_ = trace_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.trace_config)
}

// .perfetto.protos.TraceStats trace_stats = 35;
inline bool TrustedPacket::has_trace_stats() const {
  return this != internal_default_instance() && trace_stats_ != NULL;
}
inline const ::perfetto::protos::TraceStats& TrustedPacket::_internal_trace_stats() const {
  return *trace_stats_;
}
inline const ::perfetto::protos::TraceStats& TrustedPacket::trace_stats() const {
  const ::perfetto::protos::TraceStats* p = trace_stats_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.trace_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TraceStats*>(
      &::perfetto::protos::_TraceStats_default_instance_);
}
inline ::perfetto::protos::TraceStats* TrustedPacket::release_trace_stats() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.trace_stats)
  
  ::perfetto::protos::TraceStats* temp = trace_stats_;
  trace_stats_ = NULL;
  return temp;
}
inline ::perfetto::protos::TraceStats* TrustedPacket::mutable_trace_stats() {
  
  if (trace_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TraceStats>(GetArenaNoVirtual());
    trace_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.trace_stats)
  return trace_stats_;
}
inline void TrustedPacket::set_allocated_trace_stats(::perfetto::protos::TraceStats* trace_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trace_stats_);
  }
  if (trace_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trace_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trace_stats, submessage_arena);
    }
    
  } else {
    
  }
  trace_stats_ = trace_stats;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.trace_stats)
}

// bytes synchronization_marker = 36;
inline void TrustedPacket::clear_synchronization_marker() {
  synchronization_marker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrustedPacket::synchronization_marker() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.synchronization_marker)
  return synchronization_marker_.GetNoArena();
}
inline void TrustedPacket::set_synchronization_marker(const ::std::string& value) {
  
  synchronization_marker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TrustedPacket.synchronization_marker)
}
#if LANG_CXX11
inline void TrustedPacket::set_synchronization_marker(::std::string&& value) {
  
  synchronization_marker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TrustedPacket.synchronization_marker)
}
#endif
inline void TrustedPacket::set_synchronization_marker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  synchronization_marker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TrustedPacket.synchronization_marker)
}
inline void TrustedPacket::set_synchronization_marker(const void* value, size_t size) {
  
  synchronization_marker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TrustedPacket.synchronization_marker)
}
inline ::std::string* TrustedPacket::mutable_synchronization_marker() {
  
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.synchronization_marker)
  return synchronization_marker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrustedPacket::release_synchronization_marker() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.synchronization_marker)
  
  return synchronization_marker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrustedPacket::set_allocated_synchronization_marker(::std::string* synchronization_marker) {
  if (synchronization_marker != NULL) {
    
  } else {
    
  }
  synchronization_marker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synchronization_marker);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.synchronization_marker)
}

// bool previous_packet_dropped = 42;
inline void TrustedPacket::clear_previous_packet_dropped() {
  previous_packet_dropped_ = false;
}
inline bool TrustedPacket::previous_packet_dropped() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.previous_packet_dropped)
  return previous_packet_dropped_;
}
inline void TrustedPacket::set_previous_packet_dropped(bool value) {
  
  previous_packet_dropped_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrustedPacket.previous_packet_dropped)
}

// .perfetto.protos.SystemInfo system_info = 45;
inline bool TrustedPacket::has_system_info() const {
  return this != internal_default_instance() && system_info_ != NULL;
}
inline const ::perfetto::protos::SystemInfo& TrustedPacket::_internal_system_info() const {
  return *system_info_;
}
inline const ::perfetto::protos::SystemInfo& TrustedPacket::system_info() const {
  const ::perfetto::protos::SystemInfo* p = system_info_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.system_info)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::SystemInfo*>(
      &::perfetto::protos::_SystemInfo_default_instance_);
}
inline ::perfetto::protos::SystemInfo* TrustedPacket::release_system_info() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.system_info)
  
  ::perfetto::protos::SystemInfo* temp = system_info_;
  system_info_ = NULL;
  return temp;
}
inline ::perfetto::protos::SystemInfo* TrustedPacket::mutable_system_info() {
  
  if (system_info_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::SystemInfo>(GetArenaNoVirtual());
    system_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.system_info)
  return system_info_;
}
inline void TrustedPacket::set_allocated_system_info(::perfetto::protos::SystemInfo* system_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_info_);
  }
  if (system_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_info, submessage_arena);
    }
    
  } else {
    
  }
  system_info_ = system_info;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.system_info)
}

// .perfetto.protos.Trigger trigger = 46;
inline bool TrustedPacket::has_trigger() const {
  return this != internal_default_instance() && trigger_ != NULL;
}
inline const ::perfetto::protos::Trigger& TrustedPacket::_internal_trigger() const {
  return *trigger_;
}
inline const ::perfetto::protos::Trigger& TrustedPacket::trigger() const {
  const ::perfetto::protos::Trigger* p = trigger_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrustedPacket.trigger)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::Trigger*>(
      &::perfetto::protos::_Trigger_default_instance_);
}
inline ::perfetto::protos::Trigger* TrustedPacket::release_trigger() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrustedPacket.trigger)
  
  ::perfetto::protos::Trigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
inline ::perfetto::protos::Trigger* TrustedPacket::mutable_trigger() {
  
  if (trigger_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::Trigger>(GetArenaNoVirtual());
    trigger_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrustedPacket.trigger)
  return trigger_;
}
inline void TrustedPacket::set_allocated_trigger(::perfetto::protos::Trigger* trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trigger_);
  }
  if (trigger) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trigger, submessage_arena);
    }
    
  } else {
    
  }
  trigger_ = trigger;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrustedPacket.trigger)
}

inline bool TrustedPacket::has_optional_trusted_uid() const {
  return optional_trusted_uid_case() != OPTIONAL_TRUSTED_UID_NOT_SET;
}
inline void TrustedPacket::clear_has_optional_trusted_uid() {
  _oneof_case_[0] = OPTIONAL_TRUSTED_UID_NOT_SET;
}
inline bool TrustedPacket::has_optional_trusted_packet_sequence_id() const {
  return optional_trusted_packet_sequence_id_case() != OPTIONAL_TRUSTED_PACKET_SEQUENCE_ID_NOT_SET;
}
inline void TrustedPacket::clear_has_optional_trusted_packet_sequence_id() {
  _oneof_case_[1] = OPTIONAL_TRUSTED_PACKET_SEQUENCE_ID_NOT_SET;
}
inline TrustedPacket::OptionalTrustedUidCase TrustedPacket::optional_trusted_uid_case() const {
  return TrustedPacket::OptionalTrustedUidCase(_oneof_case_[0]);
}
inline TrustedPacket::OptionalTrustedPacketSequenceIdCase TrustedPacket::optional_trusted_packet_sequence_id_case() const {
  return TrustedPacket::OptionalTrustedPacketSequenceIdCase(_oneof_case_[1]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrusted_5fpacket_2eproto
