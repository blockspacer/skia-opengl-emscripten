// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfetto/trace/track_event/track_event.proto

#ifndef PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto
#define PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "perfetto/trace/track_event/debug_annotation.pb.h"
#include "perfetto/trace/track_event/task_execution.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto 

namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto
namespace perfetto {
namespace protos {
class EventCategory;
class EventCategoryDefaultTypeInternal;
extern EventCategoryDefaultTypeInternal _EventCategory_default_instance_;
class LegacyEventName;
class LegacyEventNameDefaultTypeInternal;
extern LegacyEventNameDefaultTypeInternal _LegacyEventName_default_instance_;
class TrackEvent;
class TrackEventDefaultTypeInternal;
extern TrackEventDefaultTypeInternal _TrackEvent_default_instance_;
class TrackEvent_LegacyEvent;
class TrackEvent_LegacyEventDefaultTypeInternal;
extern TrackEvent_LegacyEventDefaultTypeInternal _TrackEvent_LegacyEvent_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace google {
namespace protobuf {
template<> ::perfetto::protos::EventCategory* Arena::CreateMaybeMessage<::perfetto::protos::EventCategory>(Arena*);
template<> ::perfetto::protos::LegacyEventName* Arena::CreateMaybeMessage<::perfetto::protos::LegacyEventName>(Arena*);
template<> ::perfetto::protos::TrackEvent* Arena::CreateMaybeMessage<::perfetto::protos::TrackEvent>(Arena*);
template<> ::perfetto::protos::TrackEvent_LegacyEvent* Arena::CreateMaybeMessage<::perfetto::protos::TrackEvent_LegacyEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace perfetto {
namespace protos {

enum TrackEvent_LegacyEvent_FlowDirection {
  TrackEvent_LegacyEvent_FlowDirection_FLOW_UNSPECIFIED = 0,
  TrackEvent_LegacyEvent_FlowDirection_FLOW_IN = 1,
  TrackEvent_LegacyEvent_FlowDirection_FLOW_OUT = 2,
  TrackEvent_LegacyEvent_FlowDirection_FLOW_INOUT = 3
};
bool TrackEvent_LegacyEvent_FlowDirection_IsValid(int value);
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent_FlowDirection_FlowDirection_MIN = TrackEvent_LegacyEvent_FlowDirection_FLOW_UNSPECIFIED;
const TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent_FlowDirection_FlowDirection_MAX = TrackEvent_LegacyEvent_FlowDirection_FLOW_INOUT;
const int TrackEvent_LegacyEvent_FlowDirection_FlowDirection_ARRAYSIZE = TrackEvent_LegacyEvent_FlowDirection_FlowDirection_MAX + 1;

enum TrackEvent_LegacyEvent_InstantEventScope {
  TrackEvent_LegacyEvent_InstantEventScope_SCOPE_UNSPECIFIED = 0,
  TrackEvent_LegacyEvent_InstantEventScope_SCOPE_GLOBAL = 1,
  TrackEvent_LegacyEvent_InstantEventScope_SCOPE_PROCESS = 2,
  TrackEvent_LegacyEvent_InstantEventScope_SCOPE_THREAD = 3
};
bool TrackEvent_LegacyEvent_InstantEventScope_IsValid(int value);
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_MIN = TrackEvent_LegacyEvent_InstantEventScope_SCOPE_UNSPECIFIED;
const TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_MAX = TrackEvent_LegacyEvent_InstantEventScope_SCOPE_THREAD;
const int TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_ARRAYSIZE = TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_MAX + 1;

// ===================================================================

class TrackEvent_LegacyEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TrackEvent.LegacyEvent) */ {
 public:
  TrackEvent_LegacyEvent();
  virtual ~TrackEvent_LegacyEvent();

  TrackEvent_LegacyEvent(const TrackEvent_LegacyEvent& from);

  inline TrackEvent_LegacyEvent& operator=(const TrackEvent_LegacyEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackEvent_LegacyEvent(TrackEvent_LegacyEvent&& from) noexcept
    : TrackEvent_LegacyEvent() {
    *this = ::std::move(from);
  }

  inline TrackEvent_LegacyEvent& operator=(TrackEvent_LegacyEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TrackEvent_LegacyEvent& default_instance();

  enum IdCase {
    kUnscopedId = 6,
    kLocalId = 10,
    kGlobalId = 11,
    ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrackEvent_LegacyEvent* internal_default_instance() {
    return reinterpret_cast<const TrackEvent_LegacyEvent*>(
               &_TrackEvent_LegacyEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TrackEvent_LegacyEvent* other);
  friend void swap(TrackEvent_LegacyEvent& a, TrackEvent_LegacyEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackEvent_LegacyEvent* New() const final {
    return CreateMaybeMessage<TrackEvent_LegacyEvent>(NULL);
  }

  TrackEvent_LegacyEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrackEvent_LegacyEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TrackEvent_LegacyEvent& from);
  void MergeFrom(const TrackEvent_LegacyEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackEvent_LegacyEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TrackEvent_LegacyEvent_FlowDirection FlowDirection;
  static const FlowDirection FLOW_UNSPECIFIED =
    TrackEvent_LegacyEvent_FlowDirection_FLOW_UNSPECIFIED;
  static const FlowDirection FLOW_IN =
    TrackEvent_LegacyEvent_FlowDirection_FLOW_IN;
  static const FlowDirection FLOW_OUT =
    TrackEvent_LegacyEvent_FlowDirection_FLOW_OUT;
  static const FlowDirection FLOW_INOUT =
    TrackEvent_LegacyEvent_FlowDirection_FLOW_INOUT;
  static inline bool FlowDirection_IsValid(int value) {
    return TrackEvent_LegacyEvent_FlowDirection_IsValid(value);
  }
  static const FlowDirection FlowDirection_MIN =
    TrackEvent_LegacyEvent_FlowDirection_FlowDirection_MIN;
  static const FlowDirection FlowDirection_MAX =
    TrackEvent_LegacyEvent_FlowDirection_FlowDirection_MAX;
  static const int FlowDirection_ARRAYSIZE =
    TrackEvent_LegacyEvent_FlowDirection_FlowDirection_ARRAYSIZE;

  typedef TrackEvent_LegacyEvent_InstantEventScope InstantEventScope;
  static const InstantEventScope SCOPE_UNSPECIFIED =
    TrackEvent_LegacyEvent_InstantEventScope_SCOPE_UNSPECIFIED;
  static const InstantEventScope SCOPE_GLOBAL =
    TrackEvent_LegacyEvent_InstantEventScope_SCOPE_GLOBAL;
  static const InstantEventScope SCOPE_PROCESS =
    TrackEvent_LegacyEvent_InstantEventScope_SCOPE_PROCESS;
  static const InstantEventScope SCOPE_THREAD =
    TrackEvent_LegacyEvent_InstantEventScope_SCOPE_THREAD;
  static inline bool InstantEventScope_IsValid(int value) {
    return TrackEvent_LegacyEvent_InstantEventScope_IsValid(value);
  }
  static const InstantEventScope InstantEventScope_MIN =
    TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_MIN;
  static const InstantEventScope InstantEventScope_MAX =
    TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_MAX;
  static const int InstantEventScope_ARRAYSIZE =
    TrackEvent_LegacyEvent_InstantEventScope_InstantEventScope_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string id_scope = 7;
  bool has_id_scope() const;
  void clear_id_scope();
  static const int kIdScopeFieldNumber = 7;
  const ::std::string& id_scope() const;
  void set_id_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_id_scope(::std::string&& value);
  #endif
  void set_id_scope(const char* value);
  void set_id_scope(const char* value, size_t size);
  ::std::string* mutable_id_scope();
  ::std::string* release_id_scope();
  void set_allocated_id_scope(::std::string* id_scope);

  // optional uint32 name_iid = 1;
  bool has_name_iid() const;
  void clear_name_iid();
  static const int kNameIidFieldNumber = 1;
  ::google::protobuf::uint32 name_iid() const;
  void set_name_iid(::google::protobuf::uint32 value);

  // optional int32 phase = 2;
  bool has_phase() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 2;
  ::google::protobuf::int32 phase() const;
  void set_phase(::google::protobuf::int32 value);

  // optional int64 duration_us = 3;
  bool has_duration_us() const;
  void clear_duration_us();
  static const int kDurationUsFieldNumber = 3;
  ::google::protobuf::int64 duration_us() const;
  void set_duration_us(::google::protobuf::int64 value);

  // optional int64 thread_duration_us = 4;
  bool has_thread_duration_us() const;
  void clear_thread_duration_us();
  static const int kThreadDurationUsFieldNumber = 4;
  ::google::protobuf::int64 thread_duration_us() const;
  void set_thread_duration_us(::google::protobuf::int64 value);

  // optional uint64 bind_id = 8;
  bool has_bind_id() const;
  void clear_bind_id();
  static const int kBindIdFieldNumber = 8;
  ::google::protobuf::uint64 bind_id() const;
  void set_bind_id(::google::protobuf::uint64 value);

  // optional bool use_async_tts = 9;
  bool has_use_async_tts() const;
  void clear_use_async_tts();
  static const int kUseAsyncTtsFieldNumber = 9;
  bool use_async_tts() const;
  void set_use_async_tts(bool value);

  // optional bool bind_to_enclosing = 12;
  bool has_bind_to_enclosing() const;
  void clear_bind_to_enclosing();
  static const int kBindToEnclosingFieldNumber = 12;
  bool bind_to_enclosing() const;
  void set_bind_to_enclosing(bool value);

  // optional .perfetto.protos.TrackEvent.LegacyEvent.FlowDirection flow_direction = 13;
  bool has_flow_direction() const;
  void clear_flow_direction();
  static const int kFlowDirectionFieldNumber = 13;
  ::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection flow_direction() const;
  void set_flow_direction(::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection value);

  // optional int32 tid_override = 19;
  bool has_tid_override() const;
  void clear_tid_override();
  static const int kTidOverrideFieldNumber = 19;
  ::google::protobuf::int32 tid_override() const;
  void set_tid_override(::google::protobuf::int32 value);

  // optional .perfetto.protos.TrackEvent.LegacyEvent.InstantEventScope instant_event_scope = 14;
  bool has_instant_event_scope() const;
  void clear_instant_event_scope();
  static const int kInstantEventScopeFieldNumber = 14;
  ::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope instant_event_scope() const;
  void set_instant_event_scope(::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope value);

  // optional int32 pid_override = 18;
  bool has_pid_override() const;
  void clear_pid_override();
  static const int kPidOverrideFieldNumber = 18;
  ::google::protobuf::int32 pid_override() const;
  void set_pid_override(::google::protobuf::int32 value);

  // optional uint64 unscoped_id = 6;
  bool has_unscoped_id() const;
  void clear_unscoped_id();
  static const int kUnscopedIdFieldNumber = 6;
  ::google::protobuf::uint64 unscoped_id() const;
  void set_unscoped_id(::google::protobuf::uint64 value);

  // optional uint64 local_id = 10;
  bool has_local_id() const;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 10;
  ::google::protobuf::uint64 local_id() const;
  void set_local_id(::google::protobuf::uint64 value);

  // optional uint64 global_id = 11;
  bool has_global_id() const;
  void clear_global_id();
  static const int kGlobalIdFieldNumber = 11;
  ::google::protobuf::uint64 global_id() const;
  void set_global_id(::google::protobuf::uint64 value);

  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.TrackEvent.LegacyEvent)
 private:
  void set_has_name_iid();
  void clear_has_name_iid();
  void set_has_phase();
  void clear_has_phase();
  void set_has_duration_us();
  void clear_has_duration_us();
  void set_has_thread_duration_us();
  void clear_has_thread_duration_us();
  void set_has_unscoped_id();
  void set_has_local_id();
  void set_has_global_id();
  void set_has_id_scope();
  void clear_has_id_scope();
  void set_has_use_async_tts();
  void clear_has_use_async_tts();
  void set_has_bind_id();
  void clear_has_bind_id();
  void set_has_bind_to_enclosing();
  void clear_has_bind_to_enclosing();
  void set_has_flow_direction();
  void clear_has_flow_direction();
  void set_has_instant_event_scope();
  void clear_has_instant_event_scope();
  void set_has_pid_override();
  void clear_has_pid_override();
  void set_has_tid_override();
  void clear_has_tid_override();

  inline bool has_id() const;
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_scope_;
  ::google::protobuf::uint32 name_iid_;
  ::google::protobuf::int32 phase_;
  ::google::protobuf::int64 duration_us_;
  ::google::protobuf::int64 thread_duration_us_;
  ::google::protobuf::uint64 bind_id_;
  bool use_async_tts_;
  bool bind_to_enclosing_;
  int flow_direction_;
  ::google::protobuf::int32 tid_override_;
  int instant_event_scope_;
  ::google::protobuf::int32 pid_override_;
  union IdUnion {
    IdUnion() {}
    ::google::protobuf::uint64 unscoped_id_;
    ::google::protobuf::uint64 local_id_;
    ::google::protobuf::uint64 global_id_;
  } id_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrackEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.TrackEvent) */ {
 public:
  TrackEvent();
  virtual ~TrackEvent();

  TrackEvent(const TrackEvent& from);

  inline TrackEvent& operator=(const TrackEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackEvent(TrackEvent&& from) noexcept
    : TrackEvent() {
    *this = ::std::move(from);
  }

  inline TrackEvent& operator=(TrackEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TrackEvent& default_instance();

  enum TimestampCase {
    kTimestampDeltaUs = 1,
    kTimestampAbsoluteUs = 16,
    TIMESTAMP_NOT_SET = 0,
  };

  enum ThreadTimeCase {
    kThreadTimeDeltaUs = 2,
    kThreadTimeAbsoluteUs = 17,
    THREAD_TIME_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrackEvent* internal_default_instance() {
    return reinterpret_cast<const TrackEvent*>(
               &_TrackEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(TrackEvent* other);
  friend void swap(TrackEvent& a, TrackEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackEvent* New() const final {
    return CreateMaybeMessage<TrackEvent>(NULL);
  }

  TrackEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrackEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TrackEvent& from);
  void MergeFrom(const TrackEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TrackEvent_LegacyEvent LegacyEvent;

  // accessors -------------------------------------------------------

  // repeated uint32 category_iids = 3;
  int category_iids_size() const;
  void clear_category_iids();
  static const int kCategoryIidsFieldNumber = 3;
  ::google::protobuf::uint32 category_iids(int index) const;
  void set_category_iids(int index, ::google::protobuf::uint32 value);
  void add_category_iids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      category_iids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_category_iids();

  // repeated .perfetto.protos.DebugAnnotation debug_annotations = 4;
  int debug_annotations_size() const;
  void clear_debug_annotations();
  static const int kDebugAnnotationsFieldNumber = 4;
  ::perfetto::protos::DebugAnnotation* mutable_debug_annotations(int index);
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::DebugAnnotation >*
      mutable_debug_annotations();
  const ::perfetto::protos::DebugAnnotation& debug_annotations(int index) const;
  ::perfetto::protos::DebugAnnotation* add_debug_annotations();
  const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::DebugAnnotation >&
      debug_annotations() const;

  // optional .perfetto.protos.TaskExecution task_execution = 5;
  bool has_task_execution() const;
  void clear_task_execution();
  static const int kTaskExecutionFieldNumber = 5;
  private:
  const ::perfetto::protos::TaskExecution& _internal_task_execution() const;
  public:
  const ::perfetto::protos::TaskExecution& task_execution() const;
  ::perfetto::protos::TaskExecution* release_task_execution();
  ::perfetto::protos::TaskExecution* mutable_task_execution();
  void set_allocated_task_execution(::perfetto::protos::TaskExecution* task_execution);

  // optional .perfetto.protos.TrackEvent.LegacyEvent legacy_event = 6;
  bool has_legacy_event() const;
  void clear_legacy_event();
  static const int kLegacyEventFieldNumber = 6;
  private:
  const ::perfetto::protos::TrackEvent_LegacyEvent& _internal_legacy_event() const;
  public:
  const ::perfetto::protos::TrackEvent_LegacyEvent& legacy_event() const;
  ::perfetto::protos::TrackEvent_LegacyEvent* release_legacy_event();
  ::perfetto::protos::TrackEvent_LegacyEvent* mutable_legacy_event();
  void set_allocated_legacy_event(::perfetto::protos::TrackEvent_LegacyEvent* legacy_event);

  // optional int64 timestamp_delta_us = 1;
  bool has_timestamp_delta_us() const;
  void clear_timestamp_delta_us();
  static const int kTimestampDeltaUsFieldNumber = 1;
  ::google::protobuf::int64 timestamp_delta_us() const;
  void set_timestamp_delta_us(::google::protobuf::int64 value);

  // optional int64 timestamp_absolute_us = 16;
  bool has_timestamp_absolute_us() const;
  void clear_timestamp_absolute_us();
  static const int kTimestampAbsoluteUsFieldNumber = 16;
  ::google::protobuf::int64 timestamp_absolute_us() const;
  void set_timestamp_absolute_us(::google::protobuf::int64 value);

  // optional int64 thread_time_delta_us = 2;
  bool has_thread_time_delta_us() const;
  void clear_thread_time_delta_us();
  static const int kThreadTimeDeltaUsFieldNumber = 2;
  ::google::protobuf::int64 thread_time_delta_us() const;
  void set_thread_time_delta_us(::google::protobuf::int64 value);

  // optional int64 thread_time_absolute_us = 17;
  bool has_thread_time_absolute_us() const;
  void clear_thread_time_absolute_us();
  static const int kThreadTimeAbsoluteUsFieldNumber = 17;
  ::google::protobuf::int64 thread_time_absolute_us() const;
  void set_thread_time_absolute_us(::google::protobuf::int64 value);

  void clear_timestamp();
  TimestampCase timestamp_case() const;
  void clear_thread_time();
  ThreadTimeCase thread_time_case() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.TrackEvent)
 private:
  void set_has_timestamp_delta_us();
  void set_has_timestamp_absolute_us();
  void set_has_thread_time_delta_us();
  void set_has_thread_time_absolute_us();
  void set_has_task_execution();
  void clear_has_task_execution();
  void set_has_legacy_event();
  void clear_has_legacy_event();

  inline bool has_timestamp() const;
  inline void clear_has_timestamp();

  inline bool has_thread_time() const;
  inline void clear_has_thread_time();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > category_iids_;
  ::google::protobuf::RepeatedPtrField< ::perfetto::protos::DebugAnnotation > debug_annotations_;
  ::perfetto::protos::TaskExecution* task_execution_;
  ::perfetto::protos::TrackEvent_LegacyEvent* legacy_event_;
  union TimestampUnion {
    TimestampUnion() {}
    ::google::protobuf::int64 timestamp_delta_us_;
    ::google::protobuf::int64 timestamp_absolute_us_;
  } timestamp_;
  union ThreadTimeUnion {
    ThreadTimeUnion() {}
    ::google::protobuf::int64 thread_time_delta_us_;
    ::google::protobuf::int64 thread_time_absolute_us_;
  } thread_time_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct ::protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventCategory : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.EventCategory) */ {
 public:
  EventCategory();
  virtual ~EventCategory();

  EventCategory(const EventCategory& from);

  inline EventCategory& operator=(const EventCategory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventCategory(EventCategory&& from) noexcept
    : EventCategory() {
    *this = ::std::move(from);
  }

  inline EventCategory& operator=(EventCategory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EventCategory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventCategory* internal_default_instance() {
    return reinterpret_cast<const EventCategory*>(
               &_EventCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(EventCategory* other);
  friend void swap(EventCategory& a, EventCategory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventCategory* New() const final {
    return CreateMaybeMessage<EventCategory>(NULL);
  }

  EventCategory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventCategory>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const EventCategory& from);
  void MergeFrom(const EventCategory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EventCategory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 iid = 1;
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 1;
  ::google::protobuf::uint32 iid() const;
  void set_iid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.EventCategory)
 private:
  void set_has_iid();
  void clear_has_iid();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 iid_;
  friend struct ::protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LegacyEventName : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.LegacyEventName) */ {
 public:
  LegacyEventName();
  virtual ~LegacyEventName();

  LegacyEventName(const LegacyEventName& from);

  inline LegacyEventName& operator=(const LegacyEventName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LegacyEventName(LegacyEventName&& from) noexcept
    : LegacyEventName() {
    *this = ::std::move(from);
  }

  inline LegacyEventName& operator=(LegacyEventName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LegacyEventName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LegacyEventName* internal_default_instance() {
    return reinterpret_cast<const LegacyEventName*>(
               &_LegacyEventName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(LegacyEventName* other);
  friend void swap(LegacyEventName& a, LegacyEventName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LegacyEventName* New() const final {
    return CreateMaybeMessage<LegacyEventName>(NULL);
  }

  LegacyEventName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LegacyEventName>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const LegacyEventName& from);
  void MergeFrom(const LegacyEventName& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LegacyEventName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 iid = 1;
  bool has_iid() const;
  void clear_iid();
  static const int kIidFieldNumber = 1;
  ::google::protobuf::uint32 iid() const;
  void set_iid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.LegacyEventName)
 private:
  void set_has_iid();
  void clear_has_iid();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 iid_;
  friend struct ::protobuf_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrackEvent_LegacyEvent

// optional uint32 name_iid = 1;
inline bool TrackEvent_LegacyEvent::has_name_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_name_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackEvent_LegacyEvent::clear_has_name_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackEvent_LegacyEvent::clear_name_iid() {
  name_iid_ = 0u;
  clear_has_name_iid();
}
inline ::google::protobuf::uint32 TrackEvent_LegacyEvent::name_iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.name_iid)
  return name_iid_;
}
inline void TrackEvent_LegacyEvent::set_name_iid(::google::protobuf::uint32 value) {
  set_has_name_iid();
  name_iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.name_iid)
}

// optional int32 phase = 2;
inline bool TrackEvent_LegacyEvent::has_phase() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_phase() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrackEvent_LegacyEvent::clear_has_phase() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrackEvent_LegacyEvent::clear_phase() {
  phase_ = 0;
  clear_has_phase();
}
inline ::google::protobuf::int32 TrackEvent_LegacyEvent::phase() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.phase)
  return phase_;
}
inline void TrackEvent_LegacyEvent::set_phase(::google::protobuf::int32 value) {
  set_has_phase();
  phase_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.phase)
}

// optional int64 duration_us = 3;
inline bool TrackEvent_LegacyEvent::has_duration_us() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_duration_us() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrackEvent_LegacyEvent::clear_has_duration_us() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrackEvent_LegacyEvent::clear_duration_us() {
  duration_us_ = GOOGLE_LONGLONG(0);
  clear_has_duration_us();
}
inline ::google::protobuf::int64 TrackEvent_LegacyEvent::duration_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.duration_us)
  return duration_us_;
}
inline void TrackEvent_LegacyEvent::set_duration_us(::google::protobuf::int64 value) {
  set_has_duration_us();
  duration_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.duration_us)
}

// optional int64 thread_duration_us = 4;
inline bool TrackEvent_LegacyEvent::has_thread_duration_us() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_thread_duration_us() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrackEvent_LegacyEvent::clear_has_thread_duration_us() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrackEvent_LegacyEvent::clear_thread_duration_us() {
  thread_duration_us_ = GOOGLE_LONGLONG(0);
  clear_has_thread_duration_us();
}
inline ::google::protobuf::int64 TrackEvent_LegacyEvent::thread_duration_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.thread_duration_us)
  return thread_duration_us_;
}
inline void TrackEvent_LegacyEvent::set_thread_duration_us(::google::protobuf::int64 value) {
  set_has_thread_duration_us();
  thread_duration_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.thread_duration_us)
}

// optional uint64 unscoped_id = 6;
inline bool TrackEvent_LegacyEvent::has_unscoped_id() const {
  return id_case() == kUnscopedId;
}
inline void TrackEvent_LegacyEvent::set_has_unscoped_id() {
  _oneof_case_[0] = kUnscopedId;
}
inline void TrackEvent_LegacyEvent::clear_unscoped_id() {
  if (has_unscoped_id()) {
    id_.unscoped_id_ = GOOGLE_ULONGLONG(0);
    clear_has_id();
  }
}
inline ::google::protobuf::uint64 TrackEvent_LegacyEvent::unscoped_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.unscoped_id)
  if (has_unscoped_id()) {
    return id_.unscoped_id_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void TrackEvent_LegacyEvent::set_unscoped_id(::google::protobuf::uint64 value) {
  if (!has_unscoped_id()) {
    clear_id();
    set_has_unscoped_id();
  }
  id_.unscoped_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.unscoped_id)
}

// optional uint64 local_id = 10;
inline bool TrackEvent_LegacyEvent::has_local_id() const {
  return id_case() == kLocalId;
}
inline void TrackEvent_LegacyEvent::set_has_local_id() {
  _oneof_case_[0] = kLocalId;
}
inline void TrackEvent_LegacyEvent::clear_local_id() {
  if (has_local_id()) {
    id_.local_id_ = GOOGLE_ULONGLONG(0);
    clear_has_id();
  }
}
inline ::google::protobuf::uint64 TrackEvent_LegacyEvent::local_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.local_id)
  if (has_local_id()) {
    return id_.local_id_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void TrackEvent_LegacyEvent::set_local_id(::google::protobuf::uint64 value) {
  if (!has_local_id()) {
    clear_id();
    set_has_local_id();
  }
  id_.local_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.local_id)
}

// optional uint64 global_id = 11;
inline bool TrackEvent_LegacyEvent::has_global_id() const {
  return id_case() == kGlobalId;
}
inline void TrackEvent_LegacyEvent::set_has_global_id() {
  _oneof_case_[0] = kGlobalId;
}
inline void TrackEvent_LegacyEvent::clear_global_id() {
  if (has_global_id()) {
    id_.global_id_ = GOOGLE_ULONGLONG(0);
    clear_has_id();
  }
}
inline ::google::protobuf::uint64 TrackEvent_LegacyEvent::global_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.global_id)
  if (has_global_id()) {
    return id_.global_id_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void TrackEvent_LegacyEvent::set_global_id(::google::protobuf::uint64 value) {
  if (!has_global_id()) {
    clear_id();
    set_has_global_id();
  }
  id_.global_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.global_id)
}

// optional string id_scope = 7;
inline bool TrackEvent_LegacyEvent::has_id_scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_id_scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackEvent_LegacyEvent::clear_has_id_scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrackEvent_LegacyEvent::clear_id_scope() {
  id_scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id_scope();
}
inline const ::std::string& TrackEvent_LegacyEvent::id_scope() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
  return id_scope_.GetNoArena();
}
inline void TrackEvent_LegacyEvent::set_id_scope(const ::std::string& value) {
  set_has_id_scope();
  id_scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
}
#if LANG_CXX11
inline void TrackEvent_LegacyEvent::set_id_scope(::std::string&& value) {
  set_has_id_scope();
  id_scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
}
#endif
inline void TrackEvent_LegacyEvent::set_id_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id_scope();
  id_scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
}
inline void TrackEvent_LegacyEvent::set_id_scope(const char* value, size_t size) {
  set_has_id_scope();
  id_scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
}
inline ::std::string* TrackEvent_LegacyEvent::mutable_id_scope() {
  set_has_id_scope();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
  return id_scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackEvent_LegacyEvent::release_id_scope() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
  if (!has_id_scope()) {
    return NULL;
  }
  clear_has_id_scope();
  return id_scope_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackEvent_LegacyEvent::set_allocated_id_scope(::std::string* id_scope) {
  if (id_scope != NULL) {
    set_has_id_scope();
  } else {
    clear_has_id_scope();
  }
  id_scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_scope);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrackEvent.LegacyEvent.id_scope)
}

// optional bool use_async_tts = 9;
inline bool TrackEvent_LegacyEvent::has_use_async_tts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_use_async_tts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrackEvent_LegacyEvent::clear_has_use_async_tts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrackEvent_LegacyEvent::clear_use_async_tts() {
  use_async_tts_ = false;
  clear_has_use_async_tts();
}
inline bool TrackEvent_LegacyEvent::use_async_tts() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.use_async_tts)
  return use_async_tts_;
}
inline void TrackEvent_LegacyEvent::set_use_async_tts(bool value) {
  set_has_use_async_tts();
  use_async_tts_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.use_async_tts)
}

// optional uint64 bind_id = 8;
inline bool TrackEvent_LegacyEvent::has_bind_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_bind_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrackEvent_LegacyEvent::clear_has_bind_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrackEvent_LegacyEvent::clear_bind_id() {
  bind_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bind_id();
}
inline ::google::protobuf::uint64 TrackEvent_LegacyEvent::bind_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.bind_id)
  return bind_id_;
}
inline void TrackEvent_LegacyEvent::set_bind_id(::google::protobuf::uint64 value) {
  set_has_bind_id();
  bind_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.bind_id)
}

// optional bool bind_to_enclosing = 12;
inline bool TrackEvent_LegacyEvent::has_bind_to_enclosing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_bind_to_enclosing() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TrackEvent_LegacyEvent::clear_has_bind_to_enclosing() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TrackEvent_LegacyEvent::clear_bind_to_enclosing() {
  bind_to_enclosing_ = false;
  clear_has_bind_to_enclosing();
}
inline bool TrackEvent_LegacyEvent::bind_to_enclosing() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.bind_to_enclosing)
  return bind_to_enclosing_;
}
inline void TrackEvent_LegacyEvent::set_bind_to_enclosing(bool value) {
  set_has_bind_to_enclosing();
  bind_to_enclosing_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.bind_to_enclosing)
}

// optional .perfetto.protos.TrackEvent.LegacyEvent.FlowDirection flow_direction = 13;
inline bool TrackEvent_LegacyEvent::has_flow_direction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_flow_direction() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TrackEvent_LegacyEvent::clear_has_flow_direction() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TrackEvent_LegacyEvent::clear_flow_direction() {
  flow_direction_ = 0;
  clear_has_flow_direction();
}
inline ::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection TrackEvent_LegacyEvent::flow_direction() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.flow_direction)
  return static_cast< ::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection >(flow_direction_);
}
inline void TrackEvent_LegacyEvent::set_flow_direction(::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection value) {
  assert(::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection_IsValid(value));
  set_has_flow_direction();
  flow_direction_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.flow_direction)
}

// optional .perfetto.protos.TrackEvent.LegacyEvent.InstantEventScope instant_event_scope = 14;
inline bool TrackEvent_LegacyEvent::has_instant_event_scope() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_instant_event_scope() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TrackEvent_LegacyEvent::clear_has_instant_event_scope() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TrackEvent_LegacyEvent::clear_instant_event_scope() {
  instant_event_scope_ = 0;
  clear_has_instant_event_scope();
}
inline ::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope TrackEvent_LegacyEvent::instant_event_scope() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.instant_event_scope)
  return static_cast< ::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope >(instant_event_scope_);
}
inline void TrackEvent_LegacyEvent::set_instant_event_scope(::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope value) {
  assert(::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope_IsValid(value));
  set_has_instant_event_scope();
  instant_event_scope_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.instant_event_scope)
}

// optional int32 pid_override = 18;
inline bool TrackEvent_LegacyEvent::has_pid_override() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_pid_override() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TrackEvent_LegacyEvent::clear_has_pid_override() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TrackEvent_LegacyEvent::clear_pid_override() {
  pid_override_ = 0;
  clear_has_pid_override();
}
inline ::google::protobuf::int32 TrackEvent_LegacyEvent::pid_override() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.pid_override)
  return pid_override_;
}
inline void TrackEvent_LegacyEvent::set_pid_override(::google::protobuf::int32 value) {
  set_has_pid_override();
  pid_override_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.pid_override)
}

// optional int32 tid_override = 19;
inline bool TrackEvent_LegacyEvent::has_tid_override() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TrackEvent_LegacyEvent::set_has_tid_override() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TrackEvent_LegacyEvent::clear_has_tid_override() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TrackEvent_LegacyEvent::clear_tid_override() {
  tid_override_ = 0;
  clear_has_tid_override();
}
inline ::google::protobuf::int32 TrackEvent_LegacyEvent::tid_override() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.LegacyEvent.tid_override)
  return tid_override_;
}
inline void TrackEvent_LegacyEvent::set_tid_override(::google::protobuf::int32 value) {
  set_has_tid_override();
  tid_override_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.LegacyEvent.tid_override)
}

inline bool TrackEvent_LegacyEvent::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void TrackEvent_LegacyEvent::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
inline TrackEvent_LegacyEvent::IdCase TrackEvent_LegacyEvent::id_case() const {
  return TrackEvent_LegacyEvent::IdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TrackEvent

// optional int64 timestamp_delta_us = 1;
inline bool TrackEvent::has_timestamp_delta_us() const {
  return timestamp_case() == kTimestampDeltaUs;
}
inline void TrackEvent::set_has_timestamp_delta_us() {
  _oneof_case_[0] = kTimestampDeltaUs;
}
inline void TrackEvent::clear_timestamp_delta_us() {
  if (has_timestamp_delta_us()) {
    timestamp_.timestamp_delta_us_ = GOOGLE_LONGLONG(0);
    clear_has_timestamp();
  }
}
inline ::google::protobuf::int64 TrackEvent::timestamp_delta_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.timestamp_delta_us)
  if (has_timestamp_delta_us()) {
    return timestamp_.timestamp_delta_us_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TrackEvent::set_timestamp_delta_us(::google::protobuf::int64 value) {
  if (!has_timestamp_delta_us()) {
    clear_timestamp();
    set_has_timestamp_delta_us();
  }
  timestamp_.timestamp_delta_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.timestamp_delta_us)
}

// optional int64 timestamp_absolute_us = 16;
inline bool TrackEvent::has_timestamp_absolute_us() const {
  return timestamp_case() == kTimestampAbsoluteUs;
}
inline void TrackEvent::set_has_timestamp_absolute_us() {
  _oneof_case_[0] = kTimestampAbsoluteUs;
}
inline void TrackEvent::clear_timestamp_absolute_us() {
  if (has_timestamp_absolute_us()) {
    timestamp_.timestamp_absolute_us_ = GOOGLE_LONGLONG(0);
    clear_has_timestamp();
  }
}
inline ::google::protobuf::int64 TrackEvent::timestamp_absolute_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.timestamp_absolute_us)
  if (has_timestamp_absolute_us()) {
    return timestamp_.timestamp_absolute_us_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TrackEvent::set_timestamp_absolute_us(::google::protobuf::int64 value) {
  if (!has_timestamp_absolute_us()) {
    clear_timestamp();
    set_has_timestamp_absolute_us();
  }
  timestamp_.timestamp_absolute_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.timestamp_absolute_us)
}

// optional int64 thread_time_delta_us = 2;
inline bool TrackEvent::has_thread_time_delta_us() const {
  return thread_time_case() == kThreadTimeDeltaUs;
}
inline void TrackEvent::set_has_thread_time_delta_us() {
  _oneof_case_[1] = kThreadTimeDeltaUs;
}
inline void TrackEvent::clear_thread_time_delta_us() {
  if (has_thread_time_delta_us()) {
    thread_time_.thread_time_delta_us_ = GOOGLE_LONGLONG(0);
    clear_has_thread_time();
  }
}
inline ::google::protobuf::int64 TrackEvent::thread_time_delta_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.thread_time_delta_us)
  if (has_thread_time_delta_us()) {
    return thread_time_.thread_time_delta_us_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TrackEvent::set_thread_time_delta_us(::google::protobuf::int64 value) {
  if (!has_thread_time_delta_us()) {
    clear_thread_time();
    set_has_thread_time_delta_us();
  }
  thread_time_.thread_time_delta_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.thread_time_delta_us)
}

// optional int64 thread_time_absolute_us = 17;
inline bool TrackEvent::has_thread_time_absolute_us() const {
  return thread_time_case() == kThreadTimeAbsoluteUs;
}
inline void TrackEvent::set_has_thread_time_absolute_us() {
  _oneof_case_[1] = kThreadTimeAbsoluteUs;
}
inline void TrackEvent::clear_thread_time_absolute_us() {
  if (has_thread_time_absolute_us()) {
    thread_time_.thread_time_absolute_us_ = GOOGLE_LONGLONG(0);
    clear_has_thread_time();
  }
}
inline ::google::protobuf::int64 TrackEvent::thread_time_absolute_us() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.thread_time_absolute_us)
  if (has_thread_time_absolute_us()) {
    return thread_time_.thread_time_absolute_us_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TrackEvent::set_thread_time_absolute_us(::google::protobuf::int64 value) {
  if (!has_thread_time_absolute_us()) {
    clear_thread_time();
    set_has_thread_time_absolute_us();
  }
  thread_time_.thread_time_absolute_us_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.thread_time_absolute_us)
}

// repeated uint32 category_iids = 3;
inline int TrackEvent::category_iids_size() const {
  return category_iids_.size();
}
inline void TrackEvent::clear_category_iids() {
  category_iids_.Clear();
}
inline ::google::protobuf::uint32 TrackEvent::category_iids(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.category_iids)
  return category_iids_.Get(index);
}
inline void TrackEvent::set_category_iids(int index, ::google::protobuf::uint32 value) {
  category_iids_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.TrackEvent.category_iids)
}
inline void TrackEvent::add_category_iids(::google::protobuf::uint32 value) {
  category_iids_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.TrackEvent.category_iids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TrackEvent::category_iids() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TrackEvent.category_iids)
  return category_iids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TrackEvent::mutable_category_iids() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TrackEvent.category_iids)
  return &category_iids_;
}

// repeated .perfetto.protos.DebugAnnotation debug_annotations = 4;
inline int TrackEvent::debug_annotations_size() const {
  return debug_annotations_.size();
}
inline ::perfetto::protos::DebugAnnotation* TrackEvent::mutable_debug_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrackEvent.debug_annotations)
  return debug_annotations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::perfetto::protos::DebugAnnotation >*
TrackEvent::mutable_debug_annotations() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.TrackEvent.debug_annotations)
  return &debug_annotations_;
}
inline const ::perfetto::protos::DebugAnnotation& TrackEvent::debug_annotations(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.debug_annotations)
  return debug_annotations_.Get(index);
}
inline ::perfetto::protos::DebugAnnotation* TrackEvent::add_debug_annotations() {
  // @@protoc_insertion_point(field_add:perfetto.protos.TrackEvent.debug_annotations)
  return debug_annotations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::perfetto::protos::DebugAnnotation >&
TrackEvent::debug_annotations() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.TrackEvent.debug_annotations)
  return debug_annotations_;
}

// optional .perfetto.protos.TaskExecution task_execution = 5;
inline bool TrackEvent::has_task_execution() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackEvent::set_has_task_execution() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackEvent::clear_has_task_execution() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::TaskExecution& TrackEvent::_internal_task_execution() const {
  return *task_execution_;
}
inline const ::perfetto::protos::TaskExecution& TrackEvent::task_execution() const {
  const ::perfetto::protos::TaskExecution* p = task_execution_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.task_execution)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TaskExecution*>(
      &::perfetto::protos::_TaskExecution_default_instance_);
}
inline ::perfetto::protos::TaskExecution* TrackEvent::release_task_execution() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrackEvent.task_execution)
  clear_has_task_execution();
  ::perfetto::protos::TaskExecution* temp = task_execution_;
  task_execution_ = NULL;
  return temp;
}
inline ::perfetto::protos::TaskExecution* TrackEvent::mutable_task_execution() {
  set_has_task_execution();
  if (task_execution_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TaskExecution>(GetArenaNoVirtual());
    task_execution_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrackEvent.task_execution)
  return task_execution_;
}
inline void TrackEvent::set_allocated_task_execution(::perfetto::protos::TaskExecution* task_execution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(task_execution_);
  }
  if (task_execution) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_execution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_execution, submessage_arena);
    }
    set_has_task_execution();
  } else {
    clear_has_task_execution();
  }
  task_execution_ = task_execution;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrackEvent.task_execution)
}

// optional .perfetto.protos.TrackEvent.LegacyEvent legacy_event = 6;
inline bool TrackEvent::has_legacy_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackEvent::set_has_legacy_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackEvent::clear_has_legacy_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackEvent::clear_legacy_event() {
  if (legacy_event_ != NULL) legacy_event_->Clear();
  clear_has_legacy_event();
}
inline const ::perfetto::protos::TrackEvent_LegacyEvent& TrackEvent::_internal_legacy_event() const {
  return *legacy_event_;
}
inline const ::perfetto::protos::TrackEvent_LegacyEvent& TrackEvent::legacy_event() const {
  const ::perfetto::protos::TrackEvent_LegacyEvent* p = legacy_event_;
  // @@protoc_insertion_point(field_get:perfetto.protos.TrackEvent.legacy_event)
  return p != NULL ? *p : *reinterpret_cast<const ::perfetto::protos::TrackEvent_LegacyEvent*>(
      &::perfetto::protos::_TrackEvent_LegacyEvent_default_instance_);
}
inline ::perfetto::protos::TrackEvent_LegacyEvent* TrackEvent::release_legacy_event() {
  // @@protoc_insertion_point(field_release:perfetto.protos.TrackEvent.legacy_event)
  clear_has_legacy_event();
  ::perfetto::protos::TrackEvent_LegacyEvent* temp = legacy_event_;
  legacy_event_ = NULL;
  return temp;
}
inline ::perfetto::protos::TrackEvent_LegacyEvent* TrackEvent::mutable_legacy_event() {
  set_has_legacy_event();
  if (legacy_event_ == NULL) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TrackEvent_LegacyEvent>(GetArenaNoVirtual());
    legacy_event_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.TrackEvent.legacy_event)
  return legacy_event_;
}
inline void TrackEvent::set_allocated_legacy_event(::perfetto::protos::TrackEvent_LegacyEvent* legacy_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete legacy_event_;
  }
  if (legacy_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      legacy_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, legacy_event, submessage_arena);
    }
    set_has_legacy_event();
  } else {
    clear_has_legacy_event();
  }
  legacy_event_ = legacy_event;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.TrackEvent.legacy_event)
}

inline bool TrackEvent::has_timestamp() const {
  return timestamp_case() != TIMESTAMP_NOT_SET;
}
inline void TrackEvent::clear_has_timestamp() {
  _oneof_case_[0] = TIMESTAMP_NOT_SET;
}
inline bool TrackEvent::has_thread_time() const {
  return thread_time_case() != THREAD_TIME_NOT_SET;
}
inline void TrackEvent::clear_has_thread_time() {
  _oneof_case_[1] = THREAD_TIME_NOT_SET;
}
inline TrackEvent::TimestampCase TrackEvent::timestamp_case() const {
  return TrackEvent::TimestampCase(_oneof_case_[0]);
}
inline TrackEvent::ThreadTimeCase TrackEvent::thread_time_case() const {
  return TrackEvent::ThreadTimeCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// EventCategory

// optional uint32 iid = 1;
inline bool EventCategory::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventCategory::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventCategory::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventCategory::clear_iid() {
  iid_ = 0u;
  clear_has_iid();
}
inline ::google::protobuf::uint32 EventCategory::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EventCategory.iid)
  return iid_;
}
inline void EventCategory::set_iid(::google::protobuf::uint32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.EventCategory.iid)
}

// optional string name = 2;
inline bool EventCategory::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventCategory::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventCategory::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventCategory::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& EventCategory::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EventCategory.name)
  return name_.GetNoArena();
}
inline void EventCategory::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EventCategory.name)
}
#if LANG_CXX11
inline void EventCategory::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.EventCategory.name)
}
#endif
inline void EventCategory::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.EventCategory.name)
}
inline void EventCategory::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.EventCategory.name)
}
inline ::std::string* EventCategory::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.EventCategory.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventCategory::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.EventCategory.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventCategory::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.EventCategory.name)
}

// -------------------------------------------------------------------

// LegacyEventName

// optional uint32 iid = 1;
inline bool LegacyEventName::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegacyEventName::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegacyEventName::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegacyEventName::clear_iid() {
  iid_ = 0u;
  clear_has_iid();
}
inline ::google::protobuf::uint32 LegacyEventName::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.LegacyEventName.iid)
  return iid_;
}
inline void LegacyEventName::set_iid(::google::protobuf::uint32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.LegacyEventName.iid)
}

// optional string name = 2;
inline bool LegacyEventName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegacyEventName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegacyEventName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegacyEventName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LegacyEventName::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.LegacyEventName.name)
  return name_.GetNoArena();
}
inline void LegacyEventName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.LegacyEventName.name)
}
#if LANG_CXX11
inline void LegacyEventName::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.LegacyEventName.name)
}
#endif
inline void LegacyEventName::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.LegacyEventName.name)
}
inline void LegacyEventName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.LegacyEventName.name)
}
inline ::std::string* LegacyEventName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.LegacyEventName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LegacyEventName::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.LegacyEventName.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LegacyEventName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.LegacyEventName.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::perfetto::protos::TrackEvent_LegacyEvent_FlowDirection> : ::std::true_type {};
template <> struct is_proto_enum< ::perfetto::protos::TrackEvent_LegacyEvent_InstantEventScope> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_perfetto_2ftrace_2ftrack_5fevent_2ftrack_5fevent_2eproto
